// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Dig_compensator,hls_ip_2016_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.159000,HLS_SYN_LAT=37,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=8,HLS_SYN_FF=1834,HLS_SYN_LUT=3175}" *)

module Dig_compensator (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v_meas,
        u,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP
);

parameter    ap_ST_st1_fsm_0 = 36'b1;
parameter    ap_ST_st2_fsm_1 = 36'b10;
parameter    ap_ST_st3_fsm_2 = 36'b100;
parameter    ap_ST_st4_fsm_3 = 36'b1000;
parameter    ap_ST_st5_fsm_4 = 36'b10000;
parameter    ap_ST_st6_fsm_5 = 36'b100000;
parameter    ap_ST_st7_fsm_6 = 36'b1000000;
parameter    ap_ST_st8_fsm_7 = 36'b10000000;
parameter    ap_ST_st9_fsm_8 = 36'b100000000;
parameter    ap_ST_st10_fsm_9 = 36'b1000000000;
parameter    ap_ST_st11_fsm_10 = 36'b10000000000;
parameter    ap_ST_st12_fsm_11 = 36'b100000000000;
parameter    ap_ST_st13_fsm_12 = 36'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 36'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 36'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 36'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 36'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 36'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 36'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 36'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 36'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 36'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 36'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 36'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 36'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 36'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 36'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 36'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 36'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 36'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 36'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 36'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 36'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 36'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 36'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 36'b100000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_21 = 32'b100001;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv32_22 = 32'b100010;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_1 = 64'b1;
parameter    ap_const_lv64_2 = 64'b10;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv9_181 = 9'b110000001;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv8_7F = 8'b1111111;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_const_lv5_4 = 5'b100;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (C_S_AXI_AXILITES_DATA_WIDTH / ap_const_int64_8);
parameter C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [11:0] v_meas;
output  [9:0] u;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1 : 0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;

reg ap_done;
reg ap_idle;
reg ap_ready;

reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [35:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_53;
wire   [31:0] params_vRef;
reg   [1:0] params_coef_address0;
reg    params_coef_ce0;
wire   [31:0] params_coef_q0;
wire   [31:0] params_y_max;
wire   [31:0] params_adcMask;
reg   [9:0] u_1_data_reg;
reg    u_1_vld_reg;
reg    u_1_vld_in;
reg    u_1_ack_in;
reg    yVmeasDbg_ap_vld;
reg    yDbg_ap_vld;
reg    eDbg_ap_vld;
reg    uDbg_ap_vld;
reg   [31:0] e_1;
reg   [31:0] e_2;
reg   [31:0] y_1;
reg   [31:0] reg_241;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_149;
reg    ap_sig_cseq_ST_st18_fsm_17;
reg    ap_sig_156;
wire   [31:0] grp_fu_223_p2;
reg   [31:0] reg_246;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_166;
reg    ap_sig_cseq_ST_st21_fsm_20;
reg    ap_sig_173;
wire   [31:0] grp_fu_219_p2;
reg   [31:0] reg_252;
reg    ap_sig_cseq_ST_st26_fsm_25;
reg    ap_sig_183;
reg    ap_sig_cseq_ST_st31_fsm_30;
reg    ap_sig_191;
reg   [31:0] params_y_max_read_reg_641;
reg   [31:0] params_vRef_read_reg_646;
wire   [11:0] tmp_8_fu_258_p1;
reg   [11:0] tmp_8_reg_651;
wire   [31:0] tmp_1_cast_fu_267_p1;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_210;
wire   [31:0] grp_fu_233_p1;
reg   [31:0] v_measReal_reg_661;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_219;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_228;
reg   [31:0] e_reg_672;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_239;
wire   [31:0] grp_fu_227_p2;
reg   [31:0] tmp_3_reg_694;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_252;
reg    ap_sig_cseq_ST_st27_fsm_26;
reg    ap_sig_263;
wire   [31:0] tmp_9_fu_339_p3;
reg   [31:0] tmp_9_reg_714;
reg    ap_sig_cseq_ST_st32_fsm_31;
reg    ap_sig_272;
reg   [31:0] tmp_s_reg_721;
wire   [0:0] tmp_22_fu_423_p2;
reg   [0:0] tmp_22_reg_728;
reg    ap_sig_cseq_ST_st33_fsm_32;
reg    ap_sig_282;
wire   [31:0] x_assign_fu_429_p3;
reg   [31:0] x_assign_reg_733;
reg    ap_sig_cseq_ST_st34_fsm_33;
reg    ap_sig_291;
wire   [9:0] tmp_26_fu_546_p3;
reg   [9:0] tmp_26_reg_739;
wire   [1:0] i_1_fu_564_p2;
reg    ap_sig_cseq_ST_st36_fsm_35;
reg    ap_sig_302;
wire   [0:0] tmp_12_fu_555_p2;
reg   [1:0] i_reg_208;
reg    ap_sig_cseq_ST_st35_fsm_34;
reg    ap_sig_320;
wire   [31:0] e_load_2_phi_fu_576_p3;
wire   [0:0] cond1_fu_583_p2;
wire   [31:0] y_load_1_phi_fu_609_p3;
reg   [31:0] e_load_s_fu_110;
reg   [31:0] y_load_s_fu_114;
reg   [31:0] grp_fu_219_p0;
reg   [31:0] grp_fu_219_p1;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_358;
reg    ap_sig_cseq_ST_st22_fsm_21;
reg    ap_sig_365;
reg   [31:0] grp_fu_223_p0;
reg   [31:0] grp_fu_223_p1;
reg   [31:0] grp_fu_233_p0;
reg   [31:0] grp_fu_236_p0;
reg   [31:0] grp_fu_236_p1;
wire   [11:0] tmp_1_fu_262_p2;
wire   [31:0] tmp_7_to_int_fu_297_p1;
wire   [7:0] tmp_fu_301_p4;
wire   [22:0] tmp_15_fu_311_p1;
wire   [0:0] notrhs_fu_321_p2;
wire   [0:0] notlhs_fu_315_p2;
wire   [0:0] tmp_10_fu_327_p2;
wire   [0:0] grp_fu_236_p2;
wire   [0:0] tmp_13_fu_333_p2;
wire   [31:0] tmp_9_to_int_fu_347_p1;
wire   [31:0] tmp_10_to_int_fu_364_p1;
wire   [7:0] tmp_14_fu_350_p4;
wire   [22:0] tmp_17_fu_360_p1;
wire   [0:0] notrhs3_fu_387_p2;
wire   [0:0] notlhs2_fu_381_p2;
wire   [7:0] tmp_16_fu_367_p4;
wire   [22:0] tmp_23_fu_377_p1;
wire   [0:0] notrhs5_fu_405_p2;
wire   [0:0] notlhs4_fu_399_p2;
wire   [0:0] tmp_18_fu_393_p2;
wire   [0:0] tmp_19_fu_411_p2;
wire   [0:0] tmp_20_fu_417_p2;
wire   [31:0] p_Val2_s_fu_434_p1;
wire   [22:0] loc_V_1_fu_448_p1;
wire   [23:0] p_Result_s_fu_452_p3;
wire   [7:0] loc_V_fu_438_p4;
wire   [8:0] tmp_i_i_i_cast1_fu_464_p1;
wire   [8:0] sh_assign_fu_468_p2;
wire   [7:0] tmp_4_i_i_fu_482_p2;
wire   [0:0] isNeg_fu_474_p3;
wire  signed [8:0] tmp_4_i_i_cast_fu_488_p1;
wire   [8:0] sh_assign_1_fu_492_p3;
wire  signed [31:0] sh_assign_1_cast_fu_500_p1;
wire  signed [23:0] sh_assign_1_cast_cast_fu_504_p1;
wire   [61:0] tmp_2_i_i_fu_460_p1;
wire   [61:0] tmp_6_i_i_fu_508_p1;
wire   [23:0] tmp_7_i_i_fu_512_p2;
wire   [0:0] tmp_29_fu_524_p3;
wire   [61:0] tmp_9_i_i_fu_518_p2;
wire   [9:0] tmp_24_fu_532_p1;
wire   [9:0] tmp_25_fu_536_p4;
wire   [0:0] cond_fu_570_p2;
reg   [1:0] grp_fu_219_opcode;
reg   [4:0] grp_fu_236_opcode;
reg   [35:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 36'b1;
#0 u_1_data_reg = 10'b0000000000;
#0 u_1_vld_reg = 1'b0;
#0 e_1 = 32'b00000000000000000000000000000000;
#0 e_2 = 32'b00000000000000000000000000000000;
#0 y_1 = 32'b00000000000000000000000000000000;
end

Dig_compensator_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
Dig_compensator_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .params_vRef(params_vRef),
    .params_coef_address0(params_coef_address0),
    .params_coef_ce0(params_coef_ce0),
    .params_coef_q0(params_coef_q0),
    .params_y_max(params_y_max),
    .params_adcMask(params_adcMask),
    .yVmeasDbg(v_measReal_reg_661),
    .yVmeasDbg_ap_vld(yVmeasDbg_ap_vld),
    .yDbg(x_assign_reg_733),
    .yDbg_ap_vld(yDbg_ap_vld),
    .eDbg(e_reg_672),
    .eDbg_ap_vld(eDbg_ap_vld),
    .uDbg(tmp_26_reg_739),
    .uDbg_ap_vld(uDbg_ap_vld)
);

Dig_compensator_faddfsub_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Dig_compensator_faddfsub_32ns_32ns_32_5_full_dsp_U0(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_219_p0),
    .din1(grp_fu_219_p1),
    .opcode(grp_fu_219_opcode),
    .ce(1'b1),
    .dout(grp_fu_219_p2)
);

Dig_compensator_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Dig_compensator_fmul_32ns_32ns_32_4_max_dsp_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_223_p0),
    .din1(grp_fu_223_p1),
    .ce(1'b1),
    .dout(grp_fu_223_p2)
);

Dig_compensator_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Dig_compensator_fmul_32ns_32ns_32_4_max_dsp_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(params_coef_q0),
    .din1(e_1),
    .ce(1'b1),
    .dout(grp_fu_227_p2)
);

Dig_compensator_sitofp_32ns_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Dig_compensator_sitofp_32ns_32_6_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_233_p0),
    .ce(1'b1),
    .dout(grp_fu_233_p1)
);

Dig_compensator_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
Dig_compensator_fcmp_32ns_32ns_1_1_U4(
    .din0(grp_fu_236_p0),
    .din1(grp_fu_236_p1),
    .opcode(grp_fu_236_opcode),
    .dout(grp_fu_236_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st36_fsm_35) & (tmp_12_fu_555_p2 == 1'b0) & ~(u_1_ack_in == 1'b0) & ~(1'b0 == cond1_fu_583_p2))) begin
        e_load_s_fu_110 <= e_load_2_phi_fu_576_p3;
    end else if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        e_load_s_fu_110 <= e_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st36_fsm_35) & (tmp_12_fu_555_p2 == 1'b0) & ~(u_1_ack_in == 1'b0))) begin
        i_reg_208 <= i_1_fu_564_p2;
    end else if ((1'b1 == ap_sig_cseq_ST_st35_fsm_34)) begin
        i_reg_208 <= ap_const_lv2_2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st36_fsm_35) & (tmp_12_fu_555_p2 == 1'b0) & ~(u_1_ack_in == 1'b0) & ~(1'b0 == cond1_fu_583_p2))) begin
        y_load_s_fu_114 <= y_load_1_phi_fu_609_p3;
    end else if ((1'b1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        y_load_s_fu_114 <= y_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st36_fsm_35) & (tmp_12_fu_555_p2 == 1'b0) & ~(u_1_ack_in == 1'b0) & ~(1'b0 == cond1_fu_583_p2))) begin
        e_1 <= e_load_2_phi_fu_576_p3;
        y_1 <= y_load_1_phi_fu_609_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st36_fsm_35) & (tmp_12_fu_555_p2 == 1'b0) & ~(u_1_ack_in == 1'b0) & (1'b0 == cond1_fu_583_p2))) begin
        e_2 <= e_load_2_phi_fu_576_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        e_reg_672 <= grp_fu_219_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        params_vRef_read_reg_646 <= params_vRef;
        params_y_max_read_reg_641 <= params_y_max;
        tmp_8_reg_651 <= tmp_8_fu_258_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st12_fsm_11) | (1'b1 == ap_sig_cseq_ST_st18_fsm_17))) begin
        reg_241 <= params_coef_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st16_fsm_15) | (1'b1 == ap_sig_cseq_ST_st21_fsm_20))) begin
        reg_246 <= grp_fu_223_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st21_fsm_20) | (1'b1 == ap_sig_cseq_ST_st26_fsm_25) | (1'b1 == ap_sig_cseq_ST_st31_fsm_30))) begin
        reg_252 <= grp_fu_219_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        tmp_22_reg_728 <= tmp_22_fu_423_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        tmp_26_reg_739 <= tmp_26_fu_546_p3;
        x_assign_reg_733 <= x_assign_fu_429_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        tmp_3_reg_694 <= grp_fu_227_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st32_fsm_31)) begin
        tmp_9_reg_714 <= tmp_9_fu_339_p3;
        tmp_s_reg_721 <= grp_fu_233_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((~((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) & (1'b1 == u_1_vld_in) & (1'b0 == u_1_vld_reg)) | (~((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) & (1'b1 == u_1_vld_in) & (1'b1 == u_1_vld_reg) & (1'b1 == 1'b1)))) begin
        u_1_data_reg <= tmp_26_fu_546_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        v_measReal_reg_661 <= grp_fu_233_p1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st36_fsm_35) & ~(tmp_12_fu_555_p2 == 1'b0) & ~(u_1_ack_in == 1'b0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st36_fsm_35) & ~(tmp_12_fu_555_p2 == 1'b0) & ~(u_1_ack_in == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_228) begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_149) begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_239) begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_166) begin
        ap_sig_cseq_ST_st16_fsm_15 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_252) begin
        ap_sig_cseq_ST_st17_fsm_16 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_156) begin
        ap_sig_cseq_ST_st18_fsm_17 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_17 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_53) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_173) begin
        ap_sig_cseq_ST_st21_fsm_20 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_20 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_365) begin
        ap_sig_cseq_ST_st22_fsm_21 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st22_fsm_21 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_183) begin
        ap_sig_cseq_ST_st26_fsm_25 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st26_fsm_25 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_263) begin
        ap_sig_cseq_ST_st27_fsm_26 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st27_fsm_26 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_210) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_191) begin
        ap_sig_cseq_ST_st31_fsm_30 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st31_fsm_30 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_272) begin
        ap_sig_cseq_ST_st32_fsm_31 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st32_fsm_31 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_282) begin
        ap_sig_cseq_ST_st33_fsm_32 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st33_fsm_32 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_291) begin
        ap_sig_cseq_ST_st34_fsm_33 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st34_fsm_33 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_320) begin
        ap_sig_cseq_ST_st35_fsm_34 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st35_fsm_34 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_302) begin
        ap_sig_cseq_ST_st36_fsm_35 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st36_fsm_35 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_219) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_358) begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st36_fsm_35) & ~(tmp_12_fu_555_p2 == 1'b0) & ~(u_1_ack_in == 1'b0))) begin
        eDbg_ap_vld = 1'b1;
    end else begin
        eDbg_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        grp_fu_219_opcode = ap_const_lv2_1;
    end else if (((1'b1 == ap_sig_cseq_ST_st17_fsm_16) | (1'b1 == ap_sig_cseq_ST_st27_fsm_26) | (1'b1 == ap_sig_cseq_ST_st22_fsm_21))) begin
        grp_fu_219_opcode = ap_const_lv2_0;
    end else begin
        grp_fu_219_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st27_fsm_26) | (1'b1 == ap_sig_cseq_ST_st22_fsm_21))) begin
        grp_fu_219_p0 = reg_252;
    end else if ((1'b1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        grp_fu_219_p0 = reg_246;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        grp_fu_219_p0 = params_vRef_read_reg_646;
    end else begin
        grp_fu_219_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        grp_fu_219_p1 = y_1;
    end else if ((1'b1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        grp_fu_219_p1 = reg_246;
    end else if ((1'b1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        grp_fu_219_p1 = tmp_3_reg_694;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        grp_fu_219_p1 = v_measReal_reg_661;
    end else begin
        grp_fu_219_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        grp_fu_223_p0 = params_coef_q0;
    end else if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        grp_fu_223_p0 = reg_241;
    end else begin
        grp_fu_223_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        grp_fu_223_p1 = e_2;
    end else if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        grp_fu_223_p1 = e_reg_672;
    end else begin
        grp_fu_223_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        grp_fu_233_p0 = params_y_max_read_reg_641;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        grp_fu_233_p0 = tmp_1_cast_fu_267_p1;
    end else begin
        grp_fu_233_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        grp_fu_236_opcode = ap_const_lv5_4;
    end else if ((1'b1 == ap_sig_cseq_ST_st32_fsm_31)) begin
        grp_fu_236_opcode = ap_const_lv5_2;
    end else begin
        grp_fu_236_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        grp_fu_236_p0 = tmp_9_reg_714;
    end else if ((1'b1 == ap_sig_cseq_ST_st32_fsm_31)) begin
        grp_fu_236_p0 = reg_252;
    end else begin
        grp_fu_236_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        grp_fu_236_p1 = tmp_s_reg_721;
    end else if ((1'b1 == ap_sig_cseq_ST_st32_fsm_31)) begin
        grp_fu_236_p1 = ap_const_lv32_0;
    end else begin
        grp_fu_236_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        params_coef_address0 = ap_const_lv64_2;
    end else if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        params_coef_address0 = ap_const_lv64_1;
    end else if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        params_coef_address0 = ap_const_lv64_0;
    end else begin
        params_coef_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st12_fsm_11) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10) | (1'b1 == ap_sig_cseq_ST_st17_fsm_16))) begin
        params_coef_ce0 = 1'b1;
    end else begin
        params_coef_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st36_fsm_35) & ~(tmp_12_fu_555_p2 == 1'b0) & ~(u_1_ack_in == 1'b0))) begin
        uDbg_ap_vld = 1'b1;
    end else begin
        uDbg_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == u_1_vld_reg) | ((1'b1 == u_1_vld_reg) & (1'b1 == 1'b1)))) begin
        u_1_ack_in = 1'b1;
    end else begin
        u_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        u_1_vld_in = 1'b1;
    end else begin
        u_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st36_fsm_35) & ~(tmp_12_fu_555_p2 == 1'b0) & ~(u_1_ack_in == 1'b0))) begin
        yDbg_ap_vld = 1'b1;
    end else begin
        yDbg_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st36_fsm_35) & ~(tmp_12_fu_555_p2 == 1'b0) & ~(u_1_ack_in == 1'b0))) begin
        yVmeasDbg_ap_vld = 1'b1;
    end else begin
        yVmeasDbg_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : begin
            if ((~(tmp_12_fu_555_p2 == 1'b0) & ~(u_1_ack_in == 1'b0))) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else if (((tmp_12_fu_555_p2 == 1'b0) & ~(u_1_ack_in == 1'b0))) begin
                ap_NS_fsm = ap_ST_st36_fsm_35;
            end else begin
                ap_NS_fsm = ap_ST_st36_fsm_35;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

always @ (*) begin
    ap_sig_149 = (1'b1 == ap_CS_fsm[ap_const_lv32_B]);
end

always @ (*) begin
    ap_sig_156 = (1'b1 == ap_CS_fsm[ap_const_lv32_11]);
end

always @ (*) begin
    ap_sig_166 = (1'b1 == ap_CS_fsm[ap_const_lv32_F]);
end

always @ (*) begin
    ap_sig_173 = (1'b1 == ap_CS_fsm[ap_const_lv32_14]);
end

always @ (*) begin
    ap_sig_183 = (1'b1 == ap_CS_fsm[ap_const_lv32_19]);
end

always @ (*) begin
    ap_sig_191 = (1'b1 == ap_CS_fsm[ap_const_lv32_1E]);
end

always @ (*) begin
    ap_sig_210 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_219 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_228 = (1'b1 == ap_CS_fsm[ap_const_lv32_A]);
end

always @ (*) begin
    ap_sig_239 = (1'b1 == ap_CS_fsm[ap_const_lv32_C]);
end

always @ (*) begin
    ap_sig_252 = (1'b1 == ap_CS_fsm[ap_const_lv32_10]);
end

always @ (*) begin
    ap_sig_263 = (1'b1 == ap_CS_fsm[ap_const_lv32_1A]);
end

always @ (*) begin
    ap_sig_272 = (1'b1 == ap_CS_fsm[ap_const_lv32_1F]);
end

always @ (*) begin
    ap_sig_282 = (1'b1 == ap_CS_fsm[ap_const_lv32_20]);
end

always @ (*) begin
    ap_sig_291 = (1'b1 == ap_CS_fsm[ap_const_lv32_21]);
end

always @ (*) begin
    ap_sig_302 = (1'b1 == ap_CS_fsm[ap_const_lv32_23]);
end

always @ (*) begin
    ap_sig_320 = (1'b1 == ap_CS_fsm[ap_const_lv32_22]);
end

always @ (*) begin
    ap_sig_358 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_365 = (1'b1 == ap_CS_fsm[ap_const_lv32_15]);
end

always @ (*) begin
    ap_sig_53 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

assign cond1_fu_583_p2 = ((i_reg_208 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign cond_fu_570_p2 = ((i_1_fu_564_p2 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign e_load_2_phi_fu_576_p3 = ((cond_fu_570_p2[0:0] === 1'b1) ? e_reg_672 : e_load_s_fu_110);

assign i_1_fu_564_p2 = ($signed(i_reg_208) + $signed(ap_const_lv2_3));

assign isNeg_fu_474_p3 = sh_assign_fu_468_p2[ap_const_lv32_8];

assign loc_V_1_fu_448_p1 = p_Val2_s_fu_434_p1[22:0];

assign loc_V_fu_438_p4 = {{p_Val2_s_fu_434_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign notlhs2_fu_381_p2 = ((tmp_14_fu_350_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs4_fu_399_p2 = ((tmp_16_fu_367_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs_fu_315_p2 = ((tmp_fu_301_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notrhs3_fu_387_p2 = ((tmp_17_fu_360_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs5_fu_405_p2 = ((tmp_23_fu_377_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs_fu_321_p2 = ((tmp_15_fu_311_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign p_Result_s_fu_452_p3 = {{1'b1}, {loc_V_1_fu_448_p1}};

assign p_Val2_s_fu_434_p1 = x_assign_fu_429_p3;

assign sh_assign_1_cast_cast_fu_504_p1 = $signed(sh_assign_1_fu_492_p3);

assign sh_assign_1_cast_fu_500_p1 = $signed(sh_assign_1_fu_492_p3);

assign sh_assign_1_fu_492_p3 = ((isNeg_fu_474_p3[0:0] === 1'b1) ? tmp_4_i_i_cast_fu_488_p1 : sh_assign_fu_468_p2);

assign sh_assign_fu_468_p2 = ($signed(ap_const_lv9_181) + $signed(tmp_i_i_i_cast1_fu_464_p1));

assign tmp_10_fu_327_p2 = (notrhs_fu_321_p2 | notlhs_fu_315_p2);

assign tmp_10_to_int_fu_364_p1 = tmp_s_reg_721;

assign tmp_12_fu_555_p2 = ((i_reg_208 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign tmp_13_fu_333_p2 = (tmp_10_fu_327_p2 & grp_fu_236_p2);

assign tmp_14_fu_350_p4 = {{tmp_9_to_int_fu_347_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_15_fu_311_p1 = tmp_7_to_int_fu_297_p1[22:0];

assign tmp_16_fu_367_p4 = {{tmp_10_to_int_fu_364_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_17_fu_360_p1 = tmp_9_to_int_fu_347_p1[22:0];

assign tmp_18_fu_393_p2 = (notrhs3_fu_387_p2 | notlhs2_fu_381_p2);

assign tmp_19_fu_411_p2 = (notrhs5_fu_405_p2 | notlhs4_fu_399_p2);

assign tmp_1_cast_fu_267_p1 = tmp_1_fu_262_p2;

assign tmp_1_fu_262_p2 = (tmp_8_reg_651 & v_meas);

assign tmp_20_fu_417_p2 = (tmp_18_fu_393_p2 & tmp_19_fu_411_p2);

assign tmp_22_fu_423_p2 = (tmp_20_fu_417_p2 & grp_fu_236_p2);

assign tmp_23_fu_377_p1 = tmp_10_to_int_fu_364_p1[22:0];

assign tmp_24_fu_532_p1 = tmp_29_fu_524_p3;

assign tmp_25_fu_536_p4 = {{tmp_9_i_i_fu_518_p2[ap_const_lv32_20 : ap_const_lv32_17]}};

assign tmp_26_fu_546_p3 = ((isNeg_fu_474_p3[0:0] === 1'b1) ? tmp_24_fu_532_p1 : tmp_25_fu_536_p4);

assign tmp_29_fu_524_p3 = tmp_7_i_i_fu_512_p2[ap_const_lv32_17];

assign tmp_2_i_i_fu_460_p1 = p_Result_s_fu_452_p3;

assign tmp_4_i_i_cast_fu_488_p1 = $signed(tmp_4_i_i_fu_482_p2);

assign tmp_4_i_i_fu_482_p2 = (ap_const_lv8_7F - loc_V_fu_438_p4);

assign tmp_6_i_i_fu_508_p1 = $unsigned(sh_assign_1_cast_fu_500_p1);

assign tmp_7_i_i_fu_512_p2 = p_Result_s_fu_452_p3 >> sh_assign_1_cast_cast_fu_504_p1;

assign tmp_7_to_int_fu_297_p1 = reg_252;

assign tmp_8_fu_258_p1 = params_adcMask[11:0];

assign tmp_9_fu_339_p3 = ((tmp_13_fu_333_p2[0:0] === 1'b1) ? reg_252 : ap_const_lv32_0);

assign tmp_9_i_i_fu_518_p2 = tmp_2_i_i_fu_460_p1 << tmp_6_i_i_fu_508_p1;

assign tmp_9_to_int_fu_347_p1 = tmp_9_reg_714;

assign tmp_fu_301_p4 = {{tmp_7_to_int_fu_297_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_i_i_i_cast1_fu_464_p1 = loc_V_fu_438_p4;

assign u = u_1_data_reg;

assign x_assign_fu_429_p3 = ((tmp_22_reg_728[0:0] === 1'b1) ? tmp_9_reg_714 : tmp_s_reg_721);

assign y_load_1_phi_fu_609_p3 = ((cond_fu_570_p2[0:0] === 1'b1) ? x_assign_reg_733 : y_load_s_fu_114);

endmodule //Dig_compensator
