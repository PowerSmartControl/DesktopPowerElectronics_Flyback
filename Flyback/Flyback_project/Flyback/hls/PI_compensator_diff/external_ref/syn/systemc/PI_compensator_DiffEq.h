// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _PI_compensator_DiffEq_HH_
#define _PI_compensator_DiffEq_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "PI_compensator_DiffEq_faddfsub_32ns_32ns_32_5_full_dsp.h"
#include "PI_compensator_DiffEq_fmul_32ns_32ns_32_4_max_dsp.h"
#include "PI_compensator_DiffEq_sitofp_32ns_32_6.h"
#include "PI_compensator_DiffEq_fcmp_32ns_32ns_1_1.h"
#include "PI_compensator_DiffEq_AXILiteS_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_AXILITES_ADDR_WIDTH = 7,
         unsigned int C_S_AXI_AXILITES_DATA_WIDTH = 32>
struct PI_compensator_DiffEq : public sc_module {
    // Port declarations 26
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > v_ref;
    sc_in< sc_lv<12> > v_meas;
    sc_out< sc_lv<10> > u;
    sc_in< sc_logic > s_axi_AXILiteS_AWVALID;
    sc_out< sc_logic > s_axi_AXILiteS_AWREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_AWADDR;
    sc_in< sc_logic > s_axi_AXILiteS_WVALID;
    sc_out< sc_logic > s_axi_AXILiteS_WREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_WDATA;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH/8> > s_axi_AXILiteS_WSTRB;
    sc_in< sc_logic > s_axi_AXILiteS_ARVALID;
    sc_out< sc_logic > s_axi_AXILiteS_ARREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_ARADDR;
    sc_out< sc_logic > s_axi_AXILiteS_RVALID;
    sc_in< sc_logic > s_axi_AXILiteS_RREADY;
    sc_out< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_RDATA;
    sc_out< sc_lv<2> > s_axi_AXILiteS_RRESP;
    sc_out< sc_logic > s_axi_AXILiteS_BVALID;
    sc_in< sc_logic > s_axi_AXILiteS_BREADY;
    sc_out< sc_lv<2> > s_axi_AXILiteS_BRESP;


    // Module declarations
    PI_compensator_DiffEq(sc_module_name name);
    SC_HAS_PROCESS(PI_compensator_DiffEq);

    ~PI_compensator_DiffEq();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    PI_compensator_DiffEq_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>* PI_compensator_DiffEq_AXILiteS_s_axi_U;
    PI_compensator_DiffEq_faddfsub_32ns_32ns_32_5_full_dsp<1,5,32,32,32>* PI_compensator_DiffEq_faddfsub_32ns_32ns_32_5_full_dsp_U0;
    PI_compensator_DiffEq_fmul_32ns_32ns_32_4_max_dsp<1,4,32,32,32>* PI_compensator_DiffEq_fmul_32ns_32ns_32_4_max_dsp_U1;
    PI_compensator_DiffEq_fmul_32ns_32ns_32_4_max_dsp<1,4,32,32,32>* PI_compensator_DiffEq_fmul_32ns_32ns_32_4_max_dsp_U2;
    PI_compensator_DiffEq_sitofp_32ns_32_6<1,6,32,32>* PI_compensator_DiffEq_sitofp_32ns_32_6_U3;
    PI_compensator_DiffEq_fcmp_32ns_32ns_1_1<1,1,32,32,1>* PI_compensator_DiffEq_fcmp_32ns_32ns_1_1_U4;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<29> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_47;
    sc_signal< sc_lv<10> > X_MAX;
    sc_signal< sc_lv<32> > b0;
    sc_signal< sc_lv<32> > b1;
    sc_signal< sc_lv<32> > yVmeasDbg;
    sc_signal< sc_logic > yVmeasDbg_ap_vld;
    sc_signal< sc_lv<32> > yDbg;
    sc_signal< sc_logic > yDbg_ap_vld;
    sc_signal< sc_lv<32> > eDbg;
    sc_signal< sc_logic > eDbg_ap_vld;
    sc_signal< sc_lv<10> > uDbg;
    sc_signal< sc_logic > uDbg_ap_vld;
    sc_signal< sc_lv<32> > x0;
    sc_signal< sc_lv<32> > e0;
    sc_signal< sc_logic > PI_compensator_DiffEq_AXILiteS_s_axi_U_ap_dummy_ce;
    sc_signal< sc_lv<32> > grp_fu_149_p2;
    sc_signal< sc_lv<32> > reg_172;
    sc_signal< sc_logic > ap_sig_cseq_ST_st20_fsm_19;
    sc_signal< bool > ap_sig_bdd_112;
    sc_signal< sc_logic > ap_sig_cseq_ST_st25_fsm_24;
    sc_signal< bool > ap_sig_bdd_119;
    sc_signal< sc_lv<32> > y2_fu_178_p1;
    sc_signal< sc_lv<32> > grp_fu_164_p1;
    sc_signal< sc_lv<32> > y_reg_469;
    sc_signal< sc_logic > ap_sig_cseq_ST_st6_fsm_5;
    sc_signal< bool > ap_sig_bdd_134;
    sc_signal< sc_logic > ap_sig_cseq_ST_st7_fsm_6;
    sc_signal< bool > ap_sig_bdd_143;
    sc_signal< sc_lv<32> > e0_loc_reg_481;
    sc_signal< sc_logic > ap_sig_cseq_ST_st11_fsm_10;
    sc_signal< bool > ap_sig_bdd_151;
    sc_signal< sc_logic > ap_sig_cseq_ST_st12_fsm_11;
    sc_signal< bool > ap_sig_bdd_160;
    sc_signal< sc_lv<10> > X_MAX_read_reg_498;
    sc_signal< sc_lv<32> > grp_fu_154_p2;
    sc_signal< sc_lv<32> > tmp_s_reg_508;
    sc_signal< sc_logic > ap_sig_cseq_ST_st15_fsm_14;
    sc_signal< bool > ap_sig_bdd_175;
    sc_signal< sc_lv<32> > grp_fu_159_p2;
    sc_signal< sc_lv<32> > tmp_1_reg_513;
    sc_signal< sc_lv<32> > tmp_fu_193_p1;
    sc_signal< sc_logic > ap_sig_cseq_ST_st21_fsm_20;
    sc_signal< bool > ap_sig_bdd_186;
    sc_signal< sc_lv<1> > tmp_10_fu_238_p2;
    sc_signal< sc_lv<1> > tmp_10_reg_528;
    sc_signal< sc_logic > ap_sig_cseq_ST_st26_fsm_25;
    sc_signal< bool > ap_sig_bdd_197;
    sc_signal< sc_lv<32> > tmp_6_reg_533;
    sc_signal< sc_lv<32> > tmp_5_fu_244_p3;
    sc_signal< sc_lv<32> > tmp_5_reg_540;
    sc_signal< sc_logic > ap_sig_cseq_ST_st27_fsm_26;
    sc_signal< bool > ap_sig_bdd_207;
    sc_signal< sc_lv<1> > tmp_17_fu_323_p2;
    sc_signal< sc_lv<1> > tmp_17_reg_545;
    sc_signal< sc_lv<1> > grp_fu_167_p2;
    sc_signal< sc_lv<1> > tmp_18_reg_550;
    sc_signal< sc_lv<1> > isNeg_fu_385_p3;
    sc_signal< sc_lv<1> > isNeg_reg_555;
    sc_signal< sc_logic > ap_sig_cseq_ST_st28_fsm_27;
    sc_signal< bool > ap_sig_bdd_220;
    sc_signal< sc_lv<1> > tmp_25_reg_560;
    sc_signal< sc_lv<10> > tmp_21_reg_565;
    sc_signal< sc_lv<32> > x_assign_fu_333_p3;
    sc_signal< sc_lv<10> > tmp_22_fu_456_p3;
    sc_signal< sc_logic > ap_sig_cseq_ST_st29_fsm_28;
    sc_signal< bool > ap_sig_bdd_236;
    sc_signal< sc_lv<32> > grp_fu_149_p0;
    sc_signal< sc_lv<32> > grp_fu_149_p1;
    sc_signal< sc_logic > ap_sig_cseq_ST_st16_fsm_15;
    sc_signal< bool > ap_sig_bdd_245;
    sc_signal< sc_lv<32> > grp_fu_164_p0;
    sc_signal< sc_lv<32> > grp_fu_167_p0;
    sc_signal< sc_lv<32> > grp_fu_167_p1;
    sc_signal< sc_lv<32> > tmp_3_to_int_fu_202_p1;
    sc_signal< sc_lv<8> > tmp_4_fu_206_p4;
    sc_signal< sc_lv<23> > tmp_7_fu_216_p1;
    sc_signal< sc_lv<1> > notrhs_fu_226_p2;
    sc_signal< sc_lv<1> > notlhs_fu_220_p2;
    sc_signal< sc_lv<1> > tmp_8_fu_232_p2;
    sc_signal< sc_lv<32> > tmp_5_to_int_fu_252_p1;
    sc_signal< sc_lv<32> > tmp_6_to_int_fu_270_p1;
    sc_signal< sc_lv<8> > tmp_11_fu_256_p4;
    sc_signal< sc_lv<23> > tmp_12_fu_266_p1;
    sc_signal< sc_lv<1> > notrhs4_fu_293_p2;
    sc_signal< sc_lv<1> > notlhs3_fu_287_p2;
    sc_signal< sc_lv<8> > tmp_13_fu_273_p4;
    sc_signal< sc_lv<23> > tmp_14_fu_283_p1;
    sc_signal< sc_lv<1> > notrhs6_fu_311_p2;
    sc_signal< sc_lv<1> > notlhs5_fu_305_p2;
    sc_signal< sc_lv<1> > tmp_15_fu_299_p2;
    sc_signal< sc_lv<1> > tmp_16_fu_317_p2;
    sc_signal< sc_lv<1> > tmp_19_fu_329_p2;
    sc_signal< sc_lv<32> > p_Val2_s_fu_345_p1;
    sc_signal< sc_lv<23> > loc_V_1_fu_359_p1;
    sc_signal< sc_lv<24> > p_Result_s_fu_363_p3;
    sc_signal< sc_lv<8> > loc_V_fu_349_p4;
    sc_signal< sc_lv<9> > tmp_i_i_i_cast1_fu_375_p1;
    sc_signal< sc_lv<9> > sh_assign_fu_379_p2;
    sc_signal< sc_lv<8> > tmp_4_i_i_fu_393_p2;
    sc_signal< sc_lv<9> > tmp_4_i_i_cast_fu_399_p1;
    sc_signal< sc_lv<9> > sh_assign_1_fu_403_p3;
    sc_signal< sc_lv<32> > sh_assign_1_cast_fu_411_p1;
    sc_signal< sc_lv<24> > sh_assign_1_cast_cast_fu_415_p1;
    sc_signal< sc_lv<62> > tmp_2_i_i_fu_371_p1;
    sc_signal< sc_lv<62> > tmp_6_i_i_fu_419_p1;
    sc_signal< sc_lv<24> > tmp_7_i_i_fu_423_p2;
    sc_signal< sc_lv<62> > tmp_9_i_i_fu_429_p2;
    sc_signal< sc_lv<10> > tmp_20_fu_453_p1;
    sc_signal< sc_lv<2> > grp_fu_149_opcode;
    sc_signal< sc_logic > grp_fu_149_ce;
    sc_signal< sc_logic > grp_fu_154_ce;
    sc_signal< sc_logic > grp_fu_159_ce;
    sc_signal< sc_logic > grp_fu_164_ce;
    sc_signal< sc_lv<5> > grp_fu_167_opcode;
    sc_signal< sc_lv<29> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<29> ap_ST_st1_fsm_0;
    static const sc_lv<29> ap_ST_st2_fsm_1;
    static const sc_lv<29> ap_ST_st3_fsm_2;
    static const sc_lv<29> ap_ST_st4_fsm_3;
    static const sc_lv<29> ap_ST_st5_fsm_4;
    static const sc_lv<29> ap_ST_st6_fsm_5;
    static const sc_lv<29> ap_ST_st7_fsm_6;
    static const sc_lv<29> ap_ST_st8_fsm_7;
    static const sc_lv<29> ap_ST_st9_fsm_8;
    static const sc_lv<29> ap_ST_st10_fsm_9;
    static const sc_lv<29> ap_ST_st11_fsm_10;
    static const sc_lv<29> ap_ST_st12_fsm_11;
    static const sc_lv<29> ap_ST_st13_fsm_12;
    static const sc_lv<29> ap_ST_st14_fsm_13;
    static const sc_lv<29> ap_ST_st15_fsm_14;
    static const sc_lv<29> ap_ST_st16_fsm_15;
    static const sc_lv<29> ap_ST_st17_fsm_16;
    static const sc_lv<29> ap_ST_st18_fsm_17;
    static const sc_lv<29> ap_ST_st19_fsm_18;
    static const sc_lv<29> ap_ST_st20_fsm_19;
    static const sc_lv<29> ap_ST_st21_fsm_20;
    static const sc_lv<29> ap_ST_st22_fsm_21;
    static const sc_lv<29> ap_ST_st23_fsm_22;
    static const sc_lv<29> ap_ST_st24_fsm_23;
    static const sc_lv<29> ap_ST_st25_fsm_24;
    static const sc_lv<29> ap_ST_st26_fsm_25;
    static const sc_lv<29> ap_ST_st27_fsm_26;
    static const sc_lv<29> ap_ST_st28_fsm_27;
    static const sc_lv<29> ap_ST_st29_fsm_28;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<9> ap_const_lv9_181;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<8> ap_const_lv8_7F;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<5> ap_const_lv5_4;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_PI_compensator_DiffEq_AXILiteS_s_axi_U_ap_dummy_ce();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_bdd_112();
    void thread_ap_sig_bdd_119();
    void thread_ap_sig_bdd_134();
    void thread_ap_sig_bdd_143();
    void thread_ap_sig_bdd_151();
    void thread_ap_sig_bdd_160();
    void thread_ap_sig_bdd_175();
    void thread_ap_sig_bdd_186();
    void thread_ap_sig_bdd_197();
    void thread_ap_sig_bdd_207();
    void thread_ap_sig_bdd_220();
    void thread_ap_sig_bdd_236();
    void thread_ap_sig_bdd_245();
    void thread_ap_sig_bdd_47();
    void thread_ap_sig_cseq_ST_st11_fsm_10();
    void thread_ap_sig_cseq_ST_st12_fsm_11();
    void thread_ap_sig_cseq_ST_st15_fsm_14();
    void thread_ap_sig_cseq_ST_st16_fsm_15();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st20_fsm_19();
    void thread_ap_sig_cseq_ST_st21_fsm_20();
    void thread_ap_sig_cseq_ST_st25_fsm_24();
    void thread_ap_sig_cseq_ST_st26_fsm_25();
    void thread_ap_sig_cseq_ST_st27_fsm_26();
    void thread_ap_sig_cseq_ST_st28_fsm_27();
    void thread_ap_sig_cseq_ST_st29_fsm_28();
    void thread_ap_sig_cseq_ST_st6_fsm_5();
    void thread_ap_sig_cseq_ST_st7_fsm_6();
    void thread_eDbg();
    void thread_eDbg_ap_vld();
    void thread_grp_fu_149_ce();
    void thread_grp_fu_149_opcode();
    void thread_grp_fu_149_p0();
    void thread_grp_fu_149_p1();
    void thread_grp_fu_154_ce();
    void thread_grp_fu_159_ce();
    void thread_grp_fu_164_ce();
    void thread_grp_fu_164_p0();
    void thread_grp_fu_167_opcode();
    void thread_grp_fu_167_p0();
    void thread_grp_fu_167_p1();
    void thread_isNeg_fu_385_p3();
    void thread_loc_V_1_fu_359_p1();
    void thread_loc_V_fu_349_p4();
    void thread_notlhs3_fu_287_p2();
    void thread_notlhs5_fu_305_p2();
    void thread_notlhs_fu_220_p2();
    void thread_notrhs4_fu_293_p2();
    void thread_notrhs6_fu_311_p2();
    void thread_notrhs_fu_226_p2();
    void thread_p_Result_s_fu_363_p3();
    void thread_p_Val2_s_fu_345_p1();
    void thread_sh_assign_1_cast_cast_fu_415_p1();
    void thread_sh_assign_1_cast_fu_411_p1();
    void thread_sh_assign_1_fu_403_p3();
    void thread_sh_assign_fu_379_p2();
    void thread_tmp_10_fu_238_p2();
    void thread_tmp_11_fu_256_p4();
    void thread_tmp_12_fu_266_p1();
    void thread_tmp_13_fu_273_p4();
    void thread_tmp_14_fu_283_p1();
    void thread_tmp_15_fu_299_p2();
    void thread_tmp_16_fu_317_p2();
    void thread_tmp_17_fu_323_p2();
    void thread_tmp_19_fu_329_p2();
    void thread_tmp_20_fu_453_p1();
    void thread_tmp_22_fu_456_p3();
    void thread_tmp_2_i_i_fu_371_p1();
    void thread_tmp_3_to_int_fu_202_p1();
    void thread_tmp_4_fu_206_p4();
    void thread_tmp_4_i_i_cast_fu_399_p1();
    void thread_tmp_4_i_i_fu_393_p2();
    void thread_tmp_5_fu_244_p3();
    void thread_tmp_5_to_int_fu_252_p1();
    void thread_tmp_6_i_i_fu_419_p1();
    void thread_tmp_6_to_int_fu_270_p1();
    void thread_tmp_7_fu_216_p1();
    void thread_tmp_7_i_i_fu_423_p2();
    void thread_tmp_8_fu_232_p2();
    void thread_tmp_9_i_i_fu_429_p2();
    void thread_tmp_fu_193_p1();
    void thread_tmp_i_i_i_cast1_fu_375_p1();
    void thread_u();
    void thread_uDbg();
    void thread_uDbg_ap_vld();
    void thread_x_assign_fu_333_p3();
    void thread_y2_fu_178_p1();
    void thread_yDbg();
    void thread_yDbg_ap_vld();
    void thread_yVmeasDbg();
    void thread_yVmeasDbg_ap_vld();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
