// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="PI_compensator_DiffEq,hls_ip_2015_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.613500,HLS_SYN_LAT=28,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=8,HLS_SYN_FF=1491,HLS_SYN_LUT=2804}" *)

module PI_compensator_DiffEq (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v_ref,
        v_meas,
        u,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 29'b1;
parameter    ap_ST_st2_fsm_1 = 29'b10;
parameter    ap_ST_st3_fsm_2 = 29'b100;
parameter    ap_ST_st4_fsm_3 = 29'b1000;
parameter    ap_ST_st5_fsm_4 = 29'b10000;
parameter    ap_ST_st6_fsm_5 = 29'b100000;
parameter    ap_ST_st7_fsm_6 = 29'b1000000;
parameter    ap_ST_st8_fsm_7 = 29'b10000000;
parameter    ap_ST_st9_fsm_8 = 29'b100000000;
parameter    ap_ST_st10_fsm_9 = 29'b1000000000;
parameter    ap_ST_st11_fsm_10 = 29'b10000000000;
parameter    ap_ST_st12_fsm_11 = 29'b100000000000;
parameter    ap_ST_st13_fsm_12 = 29'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 29'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 29'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 29'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 29'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 29'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 29'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 29'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 29'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 29'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 29'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 29'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 29'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 29'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 29'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 29'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 29'b10000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv9_181 = 9'b110000001;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv8_7F = 8'b1111111;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_const_lv5_4 = 5'b100;
parameter    ap_true = 1'b1;
parameter    C_S_AXI_AXILITES_WSTRB_WIDTH = (C_S_AXI_AXILITES_DATA_WIDTH / ap_const_int64_8);
parameter    C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] v_ref;
input  [11:0] v_meas;
output  [9:0] u;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1 : 0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [28:0] ap_CS_fsm = 29'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_47;
wire   [9:0] X_MAX;
wire   [31:0] b0;
wire   [31:0] b1;
wire   [31:0] yVmeasDbg;
reg    yVmeasDbg_ap_vld;
wire   [31:0] yDbg;
reg    yDbg_ap_vld;
wire   [31:0] eDbg;
reg    eDbg_ap_vld;
wire   [9:0] uDbg;
reg    uDbg_ap_vld;
reg   [31:0] x0 = 32'b00000000000000000000000000000000;
reg   [31:0] e0 = 32'b00000000000000000000000000000000;
wire    PI_compensator_DiffEq_AXILiteS_s_axi_U_ap_dummy_ce;
wire   [31:0] grp_fu_149_p2;
reg   [31:0] reg_172;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_bdd_112;
reg    ap_sig_cseq_ST_st25_fsm_24;
reg    ap_sig_bdd_119;
wire   [31:0] y2_fu_178_p1;
wire   [31:0] grp_fu_164_p1;
reg   [31:0] y_reg_469;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_134;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_143;
reg   [31:0] e0_loc_reg_481;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_bdd_151;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_bdd_160;
reg   [9:0] X_MAX_read_reg_498;
wire   [31:0] grp_fu_154_p2;
reg   [31:0] tmp_s_reg_508;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_bdd_175;
wire   [31:0] grp_fu_159_p2;
reg   [31:0] tmp_1_reg_513;
wire   [31:0] tmp_fu_193_p1;
reg    ap_sig_cseq_ST_st21_fsm_20;
reg    ap_sig_bdd_186;
wire   [0:0] tmp_10_fu_238_p2;
reg   [0:0] tmp_10_reg_528;
reg    ap_sig_cseq_ST_st26_fsm_25;
reg    ap_sig_bdd_197;
reg   [31:0] tmp_6_reg_533;
wire   [31:0] tmp_5_fu_244_p3;
reg   [31:0] tmp_5_reg_540;
reg    ap_sig_cseq_ST_st27_fsm_26;
reg    ap_sig_bdd_207;
wire   [0:0] tmp_17_fu_323_p2;
reg   [0:0] tmp_17_reg_545;
wire   [0:0] grp_fu_167_p2;
reg   [0:0] tmp_18_reg_550;
wire   [0:0] isNeg_fu_385_p3;
reg   [0:0] isNeg_reg_555;
reg    ap_sig_cseq_ST_st28_fsm_27;
reg    ap_sig_bdd_220;
reg   [0:0] tmp_25_reg_560;
reg   [9:0] tmp_21_reg_565;
wire   [31:0] x_assign_fu_333_p3;
wire   [9:0] tmp_22_fu_456_p3;
reg    ap_sig_cseq_ST_st29_fsm_28;
reg    ap_sig_bdd_236;
reg   [31:0] grp_fu_149_p0;
reg   [31:0] grp_fu_149_p1;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_bdd_245;
reg   [31:0] grp_fu_164_p0;
reg   [31:0] grp_fu_167_p0;
reg   [31:0] grp_fu_167_p1;
wire   [31:0] tmp_3_to_int_fu_202_p1;
wire   [7:0] tmp_4_fu_206_p4;
wire   [22:0] tmp_7_fu_216_p1;
wire   [0:0] notrhs_fu_226_p2;
wire   [0:0] notlhs_fu_220_p2;
wire   [0:0] tmp_8_fu_232_p2;
wire   [31:0] tmp_5_to_int_fu_252_p1;
wire   [31:0] tmp_6_to_int_fu_270_p1;
wire   [7:0] tmp_11_fu_256_p4;
wire   [22:0] tmp_12_fu_266_p1;
wire   [0:0] notrhs4_fu_293_p2;
wire   [0:0] notlhs3_fu_287_p2;
wire   [7:0] tmp_13_fu_273_p4;
wire   [22:0] tmp_14_fu_283_p1;
wire   [0:0] notrhs6_fu_311_p2;
wire   [0:0] notlhs5_fu_305_p2;
wire   [0:0] tmp_15_fu_299_p2;
wire   [0:0] tmp_16_fu_317_p2;
wire   [0:0] tmp_19_fu_329_p2;
wire   [31:0] p_Val2_s_fu_345_p1;
wire   [22:0] loc_V_1_fu_359_p1;
wire   [23:0] p_Result_s_fu_363_p3;
wire   [7:0] loc_V_fu_349_p4;
wire   [8:0] tmp_i_i_i_cast1_fu_375_p1;
wire   [8:0] sh_assign_fu_379_p2;
wire   [7:0] tmp_4_i_i_fu_393_p2;
wire  signed [8:0] tmp_4_i_i_cast_fu_399_p1;
wire   [8:0] sh_assign_1_fu_403_p3;
wire  signed [31:0] sh_assign_1_cast_fu_411_p1;
wire  signed [23:0] sh_assign_1_cast_cast_fu_415_p1;
wire   [61:0] tmp_2_i_i_fu_371_p1;
wire   [61:0] tmp_6_i_i_fu_419_p1;
wire   [23:0] tmp_7_i_i_fu_423_p2;
wire   [61:0] tmp_9_i_i_fu_429_p2;
wire   [9:0] tmp_20_fu_453_p1;
reg   [1:0] grp_fu_149_opcode;
wire    grp_fu_149_ce;
wire    grp_fu_154_ce;
wire    grp_fu_159_ce;
wire    grp_fu_164_ce;
reg   [4:0] grp_fu_167_opcode;
reg   [28:0] ap_NS_fsm;


PI_compensator_DiffEq_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
PI_compensator_DiffEq_AXILiteS_s_axi_U(
    .AWVALID( s_axi_AXILiteS_AWVALID ),
    .AWREADY( s_axi_AXILiteS_AWREADY ),
    .AWADDR( s_axi_AXILiteS_AWADDR ),
    .WVALID( s_axi_AXILiteS_WVALID ),
    .WREADY( s_axi_AXILiteS_WREADY ),
    .WDATA( s_axi_AXILiteS_WDATA ),
    .WSTRB( s_axi_AXILiteS_WSTRB ),
    .ARVALID( s_axi_AXILiteS_ARVALID ),
    .ARREADY( s_axi_AXILiteS_ARREADY ),
    .ARADDR( s_axi_AXILiteS_ARADDR ),
    .RVALID( s_axi_AXILiteS_RVALID ),
    .RREADY( s_axi_AXILiteS_RREADY ),
    .RDATA( s_axi_AXILiteS_RDATA ),
    .RRESP( s_axi_AXILiteS_RRESP ),
    .BVALID( s_axi_AXILiteS_BVALID ),
    .BREADY( s_axi_AXILiteS_BREADY ),
    .BRESP( s_axi_AXILiteS_BRESP ),
    .ACLK( ap_clk ),
    .ARESET( ap_rst_n_inv ),
    .ACLK_EN( PI_compensator_DiffEq_AXILiteS_s_axi_U_ap_dummy_ce ),
    .X_MAX( X_MAX ),
    .b0( b0 ),
    .b1( b1 ),
    .yVmeasDbg( yVmeasDbg ),
    .yVmeasDbg_ap_vld( yVmeasDbg_ap_vld ),
    .yDbg( yDbg ),
    .yDbg_ap_vld( yDbg_ap_vld ),
    .eDbg( eDbg ),
    .eDbg_ap_vld( eDbg_ap_vld ),
    .uDbg( uDbg ),
    .uDbg_ap_vld( uDbg_ap_vld )
);

PI_compensator_DiffEq_faddfsub_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
PI_compensator_DiffEq_faddfsub_32ns_32ns_32_5_full_dsp_U0(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_149_p0 ),
    .din1( grp_fu_149_p1 ),
    .opcode( grp_fu_149_opcode ),
    .ce( grp_fu_149_ce ),
    .dout( grp_fu_149_p2 )
);

PI_compensator_DiffEq_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
PI_compensator_DiffEq_fmul_32ns_32ns_32_4_max_dsp_U1(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( e0_loc_reg_481 ),
    .din1( b0 ),
    .ce( grp_fu_154_ce ),
    .dout( grp_fu_154_p2 )
);

PI_compensator_DiffEq_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
PI_compensator_DiffEq_fmul_32ns_32ns_32_4_max_dsp_U2(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( e0 ),
    .din1( b1 ),
    .ce( grp_fu_159_ce ),
    .dout( grp_fu_159_p2 )
);

PI_compensator_DiffEq_sitofp_32ns_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
PI_compensator_DiffEq_sitofp_32ns_32_6_U3(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_164_p0 ),
    .ce( grp_fu_164_ce ),
    .dout( grp_fu_164_p1 )
);

PI_compensator_DiffEq_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
PI_compensator_DiffEq_fcmp_32ns_32ns_1_1_U4(
    .din0( grp_fu_167_p0 ),
    .din1( grp_fu_167_p1 ),
    .opcode( grp_fu_167_opcode ),
    .dout( grp_fu_167_p2 )
);



always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        X_MAX_read_reg_498 <= X_MAX;
        e0 <= e0_loc_reg_481;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        e0_loc_reg_481 <= grp_fu_149_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27)) begin
        isNeg_reg_555 <= sh_assign_fu_379_p2[ap_const_lv32_8];
        tmp_21_reg_565 <= {{tmp_9_i_i_fu_429_p2[ap_const_lv32_20 : ap_const_lv32_17]}};
        tmp_25_reg_560 <= tmp_7_i_i_fu_423_p2[ap_const_lv32_17];
        x0 <= x_assign_fu_333_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19) | (ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24))) begin
        reg_172 <= grp_fu_149_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25)) begin
        tmp_10_reg_528 <= tmp_10_fu_238_p2;
        tmp_6_reg_533 <= grp_fu_164_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        tmp_17_reg_545 <= tmp_17_fu_323_p2;
        tmp_18_reg_550 <= grp_fu_167_p2;
        tmp_5_reg_540 <= tmp_5_fu_244_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        tmp_1_reg_513 <= grp_fu_159_p2;
        tmp_s_reg_508 <= grp_fu_154_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        y_reg_469 <= grp_fu_164_p1;
    end
end

always @ (ap_sig_cseq_ST_st29_fsm_28) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st29_fsm_28) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_151) begin
    if (ap_sig_bdd_151) begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_160) begin
    if (ap_sig_bdd_160) begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_175) begin
    if (ap_sig_bdd_175) begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_245) begin
    if (ap_sig_bdd_245) begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_47) begin
    if (ap_sig_bdd_47) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_112) begin
    if (ap_sig_bdd_112) begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_186) begin
    if (ap_sig_bdd_186) begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_119) begin
    if (ap_sig_bdd_119) begin
        ap_sig_cseq_ST_st25_fsm_24 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st25_fsm_24 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_197) begin
    if (ap_sig_bdd_197) begin
        ap_sig_cseq_ST_st26_fsm_25 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st26_fsm_25 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_207) begin
    if (ap_sig_bdd_207) begin
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_220) begin
    if (ap_sig_bdd_220) begin
        ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_236) begin
    if (ap_sig_bdd_236) begin
        ap_sig_cseq_ST_st29_fsm_28 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st29_fsm_28 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_134) begin
    if (ap_sig_bdd_134) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_143) begin
    if (ap_sig_bdd_143) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st29_fsm_28) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        eDbg_ap_vld = ap_const_logic_1;
    end else begin
        eDbg_ap_vld = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st21_fsm_20 or ap_sig_cseq_ST_st16_fsm_15) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        grp_fu_149_opcode = ap_const_lv2_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20) | (ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15))) begin
        grp_fu_149_opcode = ap_const_lv2_0;
    end else begin
        grp_fu_149_opcode = 'bx;
    end
end

always @ (v_ref or reg_172 or ap_sig_cseq_ST_st7_fsm_6 or tmp_s_reg_508 or ap_sig_cseq_ST_st21_fsm_20 or ap_sig_cseq_ST_st16_fsm_15) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        grp_fu_149_p0 = reg_172;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        grp_fu_149_p0 = tmp_s_reg_508;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        grp_fu_149_p0 = v_ref;
    end else begin
        grp_fu_149_p0 = 'bx;
    end
end

always @ (x0 or y_reg_469 or ap_sig_cseq_ST_st7_fsm_6 or tmp_1_reg_513 or ap_sig_cseq_ST_st21_fsm_20 or ap_sig_cseq_ST_st16_fsm_15) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        grp_fu_149_p1 = x0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        grp_fu_149_p1 = tmp_1_reg_513;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        grp_fu_149_p1 = y_reg_469;
    end else begin
        grp_fu_149_p1 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st1_fsm_0 or y2_fu_178_p1 or tmp_fu_193_p1 or ap_sig_cseq_ST_st21_fsm_20) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        grp_fu_164_p0 = tmp_fu_193_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        grp_fu_164_p0 = y2_fu_178_p1;
    end else begin
        grp_fu_164_p0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st26_fsm_25 or ap_sig_cseq_ST_st27_fsm_26) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        grp_fu_167_opcode = ap_const_lv5_4;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25)) begin
        grp_fu_167_opcode = ap_const_lv5_2;
    end else begin
        grp_fu_167_opcode = 'bx;
    end
end

always @ (reg_172 or ap_sig_cseq_ST_st26_fsm_25 or tmp_5_fu_244_p3 or ap_sig_cseq_ST_st27_fsm_26) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        grp_fu_167_p0 = tmp_5_fu_244_p3;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25)) begin
        grp_fu_167_p0 = reg_172;
    end else begin
        grp_fu_167_p0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st26_fsm_25 or tmp_6_reg_533 or ap_sig_cseq_ST_st27_fsm_26) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        grp_fu_167_p1 = tmp_6_reg_533;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25)) begin
        grp_fu_167_p1 = ap_const_lv32_0;
    end else begin
        grp_fu_167_p1 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st29_fsm_28) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        uDbg_ap_vld = ap_const_logic_1;
    end else begin
        uDbg_ap_vld = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st29_fsm_28) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        yDbg_ap_vld = ap_const_logic_1;
    end else begin
        yDbg_ap_vld = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st29_fsm_28) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        yVmeasDbg_ap_vld = ap_const_logic_1;
    end else begin
        yVmeasDbg_ap_vld = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : 
        begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : 
        begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : 
        begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


assign PI_compensator_DiffEq_AXILiteS_s_axi_U_ap_dummy_ce = ap_const_logic_1;


always @ (ap_rst_n) begin
    ap_rst_n_inv = ~ap_rst_n;
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_112 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_13]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_119 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_18]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_134 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_143 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_151 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_160 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_B]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_175 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_E]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_186 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_14]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_197 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_19]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_207 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1A]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_220 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1B]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_236 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1C]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_245 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_F]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_47 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

assign eDbg = e0_loc_reg_481;

assign grp_fu_149_ce = ap_const_logic_1;

assign grp_fu_154_ce = ap_const_logic_1;

assign grp_fu_159_ce = ap_const_logic_1;

assign grp_fu_164_ce = ap_const_logic_1;

assign isNeg_fu_385_p3 = sh_assign_fu_379_p2[ap_const_lv32_8];

assign loc_V_1_fu_359_p1 = p_Val2_s_fu_345_p1[22:0];

assign loc_V_fu_349_p4 = {{p_Val2_s_fu_345_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign notlhs3_fu_287_p2 = (tmp_11_fu_256_p4 != ap_const_lv8_FF? 1'b1: 1'b0);

assign notlhs5_fu_305_p2 = (tmp_13_fu_273_p4 != ap_const_lv8_FF? 1'b1: 1'b0);

assign notlhs_fu_220_p2 = (tmp_4_fu_206_p4 != ap_const_lv8_FF? 1'b1: 1'b0);

assign notrhs4_fu_293_p2 = (tmp_12_fu_266_p1 == ap_const_lv23_0? 1'b1: 1'b0);

assign notrhs6_fu_311_p2 = (tmp_14_fu_283_p1 == ap_const_lv23_0? 1'b1: 1'b0);

assign notrhs_fu_226_p2 = (tmp_7_fu_216_p1 == ap_const_lv23_0? 1'b1: 1'b0);

assign p_Result_s_fu_363_p3 = {{ap_const_lv1_1}, {loc_V_1_fu_359_p1}};

assign p_Val2_s_fu_345_p1 = x_assign_fu_333_p3;

assign sh_assign_1_cast_cast_fu_415_p1 = $signed(sh_assign_1_fu_403_p3);

assign sh_assign_1_cast_fu_411_p1 = $signed(sh_assign_1_fu_403_p3);

assign sh_assign_1_fu_403_p3 = ((isNeg_fu_385_p3[0:0] === 1'b1) ? tmp_4_i_i_cast_fu_399_p1 : sh_assign_fu_379_p2);

assign sh_assign_fu_379_p2 = ($signed(ap_const_lv9_181) + $signed(tmp_i_i_i_cast1_fu_375_p1));

assign tmp_10_fu_238_p2 = (tmp_8_fu_232_p2 & grp_fu_167_p2);

assign tmp_11_fu_256_p4 = {{tmp_5_to_int_fu_252_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_12_fu_266_p1 = tmp_5_to_int_fu_252_p1[22:0];

assign tmp_13_fu_273_p4 = {{tmp_6_to_int_fu_270_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_14_fu_283_p1 = tmp_6_to_int_fu_270_p1[22:0];

assign tmp_15_fu_299_p2 = (notrhs4_fu_293_p2 | notlhs3_fu_287_p2);

assign tmp_16_fu_317_p2 = (notrhs6_fu_311_p2 | notlhs5_fu_305_p2);

assign tmp_17_fu_323_p2 = (tmp_15_fu_299_p2 & tmp_16_fu_317_p2);

assign tmp_19_fu_329_p2 = (tmp_17_reg_545 & tmp_18_reg_550);

assign tmp_20_fu_453_p1 = tmp_25_reg_560;

assign tmp_22_fu_456_p3 = ((isNeg_reg_555[0:0] === 1'b1) ? tmp_20_fu_453_p1 : tmp_21_reg_565);

assign tmp_2_i_i_fu_371_p1 = p_Result_s_fu_363_p3;

assign tmp_3_to_int_fu_202_p1 = reg_172;

assign tmp_4_fu_206_p4 = {{tmp_3_to_int_fu_202_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_4_i_i_cast_fu_399_p1 = $signed(tmp_4_i_i_fu_393_p2);

assign tmp_4_i_i_fu_393_p2 = (ap_const_lv8_7F - loc_V_fu_349_p4);

assign tmp_5_fu_244_p3 = ((tmp_10_reg_528[0:0] === 1'b1) ? reg_172 : ap_const_lv32_0);

assign tmp_5_to_int_fu_252_p1 = tmp_5_fu_244_p3;

assign tmp_6_i_i_fu_419_p1 = $unsigned(sh_assign_1_cast_fu_411_p1);

assign tmp_6_to_int_fu_270_p1 = tmp_6_reg_533;

assign tmp_7_fu_216_p1 = tmp_3_to_int_fu_202_p1[22:0];

assign tmp_7_i_i_fu_423_p2 = p_Result_s_fu_363_p3 >> sh_assign_1_cast_cast_fu_415_p1;

assign tmp_8_fu_232_p2 = (notrhs_fu_226_p2 | notlhs_fu_220_p2);

assign tmp_9_i_i_fu_429_p2 = tmp_2_i_i_fu_371_p1 << tmp_6_i_i_fu_419_p1;

assign tmp_fu_193_p1 = X_MAX_read_reg_498;

assign tmp_i_i_i_cast1_fu_375_p1 = loc_V_fu_349_p4;

assign u = tmp_22_fu_456_p3;

assign uDbg = tmp_22_fu_456_p3;

assign x_assign_fu_333_p3 = ((tmp_19_fu_329_p2[0:0] === 1'b1) ? tmp_5_reg_540 : tmp_6_reg_533);

assign y2_fu_178_p1 = v_meas;

assign yDbg = y_reg_469;

assign yVmeasDbg = y_reg_469;


endmodule //PI_compensator_DiffEq

