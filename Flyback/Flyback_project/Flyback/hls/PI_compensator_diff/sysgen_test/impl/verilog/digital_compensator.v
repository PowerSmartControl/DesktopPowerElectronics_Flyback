// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="digital_compensator,hls_ip_2015_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.159000,HLS_SYN_LAT=42,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=19,HLS_SYN_FF=1926,HLS_SYN_LUT=3844}" *)

module digital_compensator (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v_ref,
        v_meas,
        Kp,
        Ki2,
        u
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 52'b1;
parameter    ap_ST_st2_fsm_1 = 52'b10;
parameter    ap_ST_st3_fsm_2 = 52'b100;
parameter    ap_ST_st4_fsm_3 = 52'b1000;
parameter    ap_ST_st5_fsm_4 = 52'b10000;
parameter    ap_ST_st6_fsm_5 = 52'b100000;
parameter    ap_ST_st7_fsm_6 = 52'b1000000;
parameter    ap_ST_st8_fsm_7 = 52'b10000000;
parameter    ap_ST_st9_fsm_8 = 52'b100000000;
parameter    ap_ST_st10_fsm_9 = 52'b1000000000;
parameter    ap_ST_st11_fsm_10 = 52'b10000000000;
parameter    ap_ST_st12_fsm_11 = 52'b100000000000;
parameter    ap_ST_st13_fsm_12 = 52'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 52'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 52'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 52'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 52'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 52'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 52'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 52'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 52'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 52'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 52'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 52'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 52'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 52'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 52'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 52'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 52'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 52'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 52'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 52'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 52'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 52'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 52'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 52'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 52'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 52'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 52'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 52'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 52'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 52'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 52'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 52'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 52'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 52'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_46 = 52'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_47 = 52'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_48 = 52'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_49 = 52'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_50 = 52'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_51 = 52'b1000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_28 = 32'b101000;
parameter    ap_const_lv32_2F = 32'b101111;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv32_29 = 32'b101001;
parameter    ap_const_lv32_2A = 32'b101010;
parameter    ap_const_lv32_30 = 32'b110000;
parameter    ap_const_lv32_31 = 32'b110001;
parameter    ap_const_lv32_32 = 32'b110010;
parameter    ap_const_lv32_33 = 32'b110011;
parameter    ap_const_lv32_2B = 32'b101011;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_447A0000 = 32'b1000100011110100000000000000000;
parameter    ap_const_lv64_400A666666666666 = 64'b100000000001010011001100110011001100110011001100110011001100110;
parameter    ap_const_lv64_3F30000000000000 = 64'b11111100110000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_4020000000000000 = 64'b100000000100000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv9_181 = 9'b110000001;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv8_7F = 8'b1111111;
parameter    ap_const_lv5_4 = 5'b100;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] v_ref;
input  [11:0] v_meas;
input  [31:0] Kp;
input  [31:0] Ki2;
output  [9:0] u;

reg ap_done;
reg ap_idle;
reg ap_ready;
(* fsm_encoding = "none" *) reg   [51:0] ap_CS_fsm = 52'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_68;
reg   [1:0] sat = 2'b00;
reg   [31:0] x_integral = 32'b00000000000000000000000000000000;
wire   [63:0] grp_fu_151_p2;
reg   [63:0] reg_161;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_bdd_90;
reg    ap_sig_cseq_ST_st18_fsm_17;
reg    ap_sig_bdd_97;
reg    ap_sig_cseq_ST_st24_fsm_23;
reg    ap_sig_bdd_105;
wire   [31:0] grp_fu_124_p2;
reg   [31:0] reg_167;
reg    ap_sig_cseq_ST_st30_fsm_29;
reg    ap_sig_bdd_115;
reg    ap_sig_cseq_ST_st41_fsm_40;
reg    ap_sig_bdd_122;
reg    ap_sig_cseq_ST_st48_fsm_47;
reg    ap_sig_bdd_130;
wire   [63:0] grp_fu_158_p1;
reg   [63:0] tmp_s_reg_584;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_145;
wire   [31:0] y_fu_137_p1;
reg   [31:0] y_reg_589;
reg    ap_sig_cseq_ST_st25_fsm_24;
reg    ap_sig_bdd_154;
reg    ap_sig_cseq_ST_st26_fsm_25;
reg    ap_sig_bdd_163;
wire   [0:0] grp_fu_140_p2;
reg   [0:0] tmp_11_reg_599;
reg    ap_sig_cseq_ST_st31_fsm_30;
reg    ap_sig_bdd_172;
reg    ap_sig_cseq_ST_st32_fsm_31;
reg    ap_sig_bdd_181;
wire   [0:0] or_cond_fu_233_p2;
reg   [0:0] or_cond_reg_614;
wire   [0:0] tmp_6_fu_239_p2;
reg   [0:0] tmp_6_reg_618;
wire   [0:0] tmp_15_fu_245_p2;
reg   [0:0] tmp_15_reg_623;
wire   [31:0] grp_fu_129_p2;
reg   [31:0] tmp_8_reg_631;
reg    ap_sig_cseq_ST_st36_fsm_35;
reg    ap_sig_bdd_201;
wire   [31:0] grp_fu_133_p2;
reg   [31:0] tmp_12_reg_636;
reg    ap_sig_cseq_ST_st37_fsm_36;
reg    ap_sig_bdd_212;
wire   [0:0] tmp_20_fu_296_p2;
reg   [0:0] tmp_20_reg_646;
reg    ap_sig_cseq_ST_st42_fsm_41;
reg    ap_sig_bdd_221;
wire   [0:0] tmp_22_fu_302_p2;
reg   [0:0] tmp_22_reg_654;
wire   [31:0] x_integral_new_fu_330_p3;
reg   [31:0] x_integral_new_reg_659;
reg    ap_sig_cseq_ST_st43_fsm_42;
reg    ap_sig_bdd_232;
wire   [0:0] tmp_28_fu_397_p2;
reg   [0:0] tmp_28_reg_664;
reg    ap_sig_cseq_ST_st49_fsm_48;
reg    ap_sig_bdd_241;
wire   [31:0] x_1_fu_403_p3;
reg   [31:0] x_1_reg_669;
reg    ap_sig_cseq_ST_st50_fsm_49;
reg    ap_sig_bdd_250;
reg   [0:0] tmp_32_reg_675;
wire   [31:0] x_2_fu_451_p3;
reg    ap_sig_cseq_ST_st51_fsm_50;
reg    ap_sig_bdd_260;
reg   [31:0] x_assign_reg_113;
wire   [1:0] storemerge1_fu_342_p3;
reg    ap_sig_cseq_ST_st52_fsm_51;
reg    ap_sig_bdd_275;
reg   [31:0] grp_fu_124_p0;
reg   [31:0] grp_fu_124_p1;
reg    ap_sig_cseq_ST_st44_fsm_43;
reg    ap_sig_bdd_284;
reg   [31:0] grp_fu_140_p0;
reg   [31:0] grp_fu_140_p1;
reg   [63:0] grp_fu_151_p0;
reg   [63:0] grp_fu_151_p1;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_316;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_bdd_323;
reg    ap_sig_cseq_ST_st19_fsm_18;
reg    ap_sig_bdd_330;
wire   [31:0] grp_fu_158_p0;
wire   [31:0] e_to_int_fu_192_p1;
wire   [7:0] tmp_5_fu_196_p4;
wire   [22:0] tmp_7_fu_206_p1;
wire   [0:0] notrhs_fu_216_p2;
wire   [0:0] notlhs_fu_210_p2;
wire   [0:0] tmp_10_fu_222_p2;
wire   [0:0] tmp_4_fu_184_p3;
wire   [0:0] tmp_13_fu_228_p2;
wire   [31:0] tmp_9_to_int_fu_260_p1;
wire   [7:0] tmp_16_fu_264_p4;
wire   [22:0] tmp_17_fu_274_p1;
wire   [0:0] notrhs2_fu_284_p2;
wire   [0:0] notlhs2_fu_278_p2;
wire   [0:0] tmp_18_fu_290_p2;
wire   [0:0] tmp_21_fu_145_p2;
wire   [0:0] sel_tmp_fu_308_p2;
wire   [0:0] sel_tmp2_fu_313_p2;
wire   [0:0] tmp_23_fu_325_p2;
wire   [31:0] sel_tmp3_fu_318_p3;
wire   [1:0] sel_tmp7_cast_fu_338_p1;
wire   [31:0] x_to_int_fu_361_p1;
wire   [7:0] tmp_24_fu_365_p4;
wire   [22:0] tmp_25_fu_375_p1;
wire   [0:0] notrhs4_fu_385_p2;
wire   [0:0] notlhs4_fu_379_p2;
wire   [0:0] tmp_26_fu_391_p2;
wire   [31:0] x_1_to_int_fu_411_p1;
wire   [7:0] tmp_29_fu_414_p4;
wire   [22:0] tmp_30_fu_424_p1;
wire   [0:0] notrhs5_fu_434_p2;
wire   [0:0] notlhs5_fu_428_p2;
wire   [0:0] tmp_31_fu_440_p2;
wire   [0:0] tmp_33_fu_446_p2;
wire   [31:0] p_Val2_s_fu_458_p1;
wire   [22:0] loc_V_1_fu_472_p1;
wire   [23:0] p_Result_s_fu_476_p3;
wire   [7:0] loc_V_fu_462_p4;
wire   [8:0] tmp_i_i_i_cast9_fu_488_p1;
wire   [8:0] sh_assign_fu_492_p2;
wire   [7:0] tmp_4_i_i_fu_506_p2;
wire   [0:0] isNeg_fu_498_p3;
wire  signed [8:0] tmp_4_i_i_cast_fu_512_p1;
wire   [8:0] sh_assign_1_fu_516_p3;
wire  signed [31:0] sh_assign_1_cast_fu_524_p1;
wire  signed [23:0] sh_assign_1_cast_cast_fu_528_p1;
wire   [61:0] tmp_2_i_i_fu_484_p1;
wire   [61:0] tmp_6_i_i_fu_532_p1;
wire   [23:0] tmp_7_i_i_fu_536_p2;
wire   [0:0] tmp_39_fu_548_p3;
wire   [61:0] tmp_9_i_i_fu_542_p2;
wire   [9:0] tmp_34_fu_556_p1;
wire   [9:0] tmp_35_fu_560_p4;
reg   [1:0] grp_fu_124_opcode;
wire    grp_fu_124_ce;
wire    grp_fu_129_ce;
wire    grp_fu_133_ce;
reg   [4:0] grp_fu_140_opcode;
wire   [4:0] tmp_21_fu_145_opcode;
wire    grp_fu_151_ce;
wire    grp_fu_158_ce;
wire   [0:0] or_cond2_fu_251_p2;
reg   [51:0] ap_NS_fsm;


digital_compensator_faddfsub_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
digital_compensator_faddfsub_32ns_32ns_32_5_full_dsp_U0(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_124_p0 ),
    .din1( grp_fu_124_p1 ),
    .opcode( grp_fu_124_opcode ),
    .ce( grp_fu_124_ce ),
    .dout( grp_fu_124_p2 )
);

digital_compensator_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
digital_compensator_fmul_32ns_32ns_32_4_max_dsp_U1(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( reg_167 ),
    .din1( Ki2 ),
    .ce( grp_fu_129_ce ),
    .dout( grp_fu_129_p2 )
);

digital_compensator_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
digital_compensator_fmul_32ns_32ns_32_4_max_dsp_U2(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( reg_167 ),
    .din1( Kp ),
    .ce( grp_fu_133_ce ),
    .dout( grp_fu_133_p2 )
);

digital_compensator_fptrunc_64ns_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
digital_compensator_fptrunc_64ns_32_1_U3(
    .din0( reg_161 ),
    .dout( y_fu_137_p1 )
);

digital_compensator_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
digital_compensator_fcmp_32ns_32ns_1_1_U4(
    .din0( grp_fu_140_p0 ),
    .din1( grp_fu_140_p1 ),
    .opcode( grp_fu_140_opcode ),
    .dout( grp_fu_140_p2 )
);

digital_compensator_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
digital_compensator_fcmp_32ns_32ns_1_1_U5(
    .din0( reg_167 ),
    .din1( ap_const_lv32_447A0000 ),
    .opcode( tmp_21_fu_145_opcode ),
    .dout( tmp_21_fu_145_p2 )
);

digital_compensator_dmul_64ns_64ns_64_6_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
digital_compensator_dmul_64ns_64ns_64_6_max_dsp_U6(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_151_p0 ),
    .din1( grp_fu_151_p1 ),
    .ce( grp_fu_151_ce ),
    .dout( grp_fu_151_p2 )
);

digital_compensator_sitodp_32ns_64_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
digital_compensator_sitodp_32ns_64_6_U7(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_158_p0 ),
    .ce( grp_fu_158_ce ),
    .dout( grp_fu_158_p1 )
);



always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31)) begin
        or_cond_reg_614 <= or_cond_fu_233_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11) | (ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17) | (ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23))) begin
        reg_161 <= grp_fu_151_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_29) | (ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40) | (ap_const_logic_1 == ap_sig_cseq_ST_st48_fsm_47))) begin
        reg_167 <= grp_fu_124_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st43_fsm_42)) begin
        sat <= storemerge1_fu_342_p3;
        x_integral <= x_integral_new_fu_330_p3;
        x_integral_new_reg_659 <= x_integral_new_fu_330_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        tmp_11_reg_599 <= grp_fu_140_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st36_fsm_35)) begin
        tmp_12_reg_636 <= grp_fu_133_p2;
        tmp_8_reg_631 <= grp_fu_129_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31) & (or_cond_fu_233_p2 == ap_const_lv1_0))) begin
        tmp_15_reg_623 <= tmp_15_fu_245_p2;
        tmp_6_reg_618 <= tmp_6_fu_239_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41)) begin
        tmp_20_reg_646 <= tmp_20_fu_296_p2;
        tmp_22_reg_654 <= tmp_22_fu_302_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st49_fsm_48)) begin
        tmp_28_reg_664 <= tmp_28_fu_397_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_49)) begin
        tmp_32_reg_675 <= grp_fu_140_p2;
        x_1_reg_669 <= x_1_fu_403_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        tmp_s_reg_584 <= grp_fu_158_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_50)) begin
        x_assign_reg_113 <= x_2_fu_451_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        y_reg_589 <= y_fu_137_p1;
    end
end

always @ (ap_sig_cseq_ST_st52_fsm_51) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_51)) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st52_fsm_51) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_51)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_90) begin
    if (ap_sig_bdd_90) begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_323) begin
    if (ap_sig_bdd_323) begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_97) begin
    if (ap_sig_bdd_97) begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_330) begin
    if (ap_sig_bdd_330) begin
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_68) begin
    if (ap_sig_bdd_68) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_105) begin
    if (ap_sig_bdd_105) begin
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_154) begin
    if (ap_sig_bdd_154) begin
        ap_sig_cseq_ST_st25_fsm_24 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st25_fsm_24 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_163) begin
    if (ap_sig_bdd_163) begin
        ap_sig_cseq_ST_st26_fsm_25 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st26_fsm_25 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_115) begin
    if (ap_sig_bdd_115) begin
        ap_sig_cseq_ST_st30_fsm_29 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st30_fsm_29 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_172) begin
    if (ap_sig_bdd_172) begin
        ap_sig_cseq_ST_st31_fsm_30 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st31_fsm_30 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_181) begin
    if (ap_sig_bdd_181) begin
        ap_sig_cseq_ST_st32_fsm_31 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st32_fsm_31 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_201) begin
    if (ap_sig_bdd_201) begin
        ap_sig_cseq_ST_st36_fsm_35 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st36_fsm_35 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_212) begin
    if (ap_sig_bdd_212) begin
        ap_sig_cseq_ST_st37_fsm_36 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st37_fsm_36 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_122) begin
    if (ap_sig_bdd_122) begin
        ap_sig_cseq_ST_st41_fsm_40 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st41_fsm_40 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_221) begin
    if (ap_sig_bdd_221) begin
        ap_sig_cseq_ST_st42_fsm_41 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st42_fsm_41 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_232) begin
    if (ap_sig_bdd_232) begin
        ap_sig_cseq_ST_st43_fsm_42 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st43_fsm_42 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_284) begin
    if (ap_sig_bdd_284) begin
        ap_sig_cseq_ST_st44_fsm_43 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st44_fsm_43 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_130) begin
    if (ap_sig_bdd_130) begin
        ap_sig_cseq_ST_st48_fsm_47 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st48_fsm_47 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_241) begin
    if (ap_sig_bdd_241) begin
        ap_sig_cseq_ST_st49_fsm_48 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st49_fsm_48 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_250) begin
    if (ap_sig_bdd_250) begin
        ap_sig_cseq_ST_st50_fsm_49 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st50_fsm_49 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_260) begin
    if (ap_sig_bdd_260) begin
        ap_sig_cseq_ST_st51_fsm_50 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st51_fsm_50 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_275) begin
    if (ap_sig_bdd_275) begin
        ap_sig_cseq_ST_st52_fsm_51 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st52_fsm_51 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_145) begin
    if (ap_sig_bdd_145) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_316) begin
    if (ap_sig_bdd_316) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st26_fsm_25 or ap_sig_cseq_ST_st37_fsm_36 or ap_sig_cseq_ST_st44_fsm_43) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25)) begin
        grp_fu_124_opcode = ap_const_lv2_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36) | (ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43))) begin
        grp_fu_124_opcode = ap_const_lv2_0;
    end else begin
        grp_fu_124_opcode = 'bx;
    end
end

always @ (v_ref or x_integral or ap_sig_cseq_ST_st26_fsm_25 or tmp_12_reg_636 or ap_sig_cseq_ST_st37_fsm_36 or ap_sig_cseq_ST_st44_fsm_43) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43)) begin
        grp_fu_124_p0 = tmp_12_reg_636;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        grp_fu_124_p0 = x_integral;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25)) begin
        grp_fu_124_p0 = v_ref;
    end else begin
        grp_fu_124_p0 = 'bx;
    end
end

always @ (y_reg_589 or ap_sig_cseq_ST_st26_fsm_25 or tmp_8_reg_631 or ap_sig_cseq_ST_st37_fsm_36 or x_integral_new_reg_659 or ap_sig_cseq_ST_st44_fsm_43) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43)) begin
        grp_fu_124_p1 = x_integral_new_reg_659;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        grp_fu_124_p1 = tmp_8_reg_631;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25)) begin
        grp_fu_124_p1 = y_reg_589;
    end else begin
        grp_fu_124_p1 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st31_fsm_30 or ap_sig_cseq_ST_st32_fsm_31 or or_cond_fu_233_p2 or ap_sig_cseq_ST_st42_fsm_41 or ap_sig_cseq_ST_st49_fsm_48 or ap_sig_cseq_ST_st50_fsm_49) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31) & (or_cond_fu_233_p2 == ap_const_lv1_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st49_fsm_48))) begin
        grp_fu_140_opcode = ap_const_lv5_2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30) | (ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_49))) begin
        grp_fu_140_opcode = ap_const_lv5_4;
    end else begin
        grp_fu_140_opcode = 'bx;
    end
end

always @ (reg_167 or ap_sig_cseq_ST_st31_fsm_30 or ap_sig_cseq_ST_st32_fsm_31 or ap_sig_cseq_ST_st42_fsm_41 or ap_sig_cseq_ST_st49_fsm_48 or x_1_fu_403_p3 or ap_sig_cseq_ST_st50_fsm_49) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_49)) begin
        grp_fu_140_p0 = x_1_fu_403_p3;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30) | (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31) | (ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41) | (ap_const_logic_1 == ap_sig_cseq_ST_st49_fsm_48))) begin
        grp_fu_140_p0 = reg_167;
    end else begin
        grp_fu_140_p0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st31_fsm_30 or ap_sig_cseq_ST_st32_fsm_31 or ap_sig_cseq_ST_st42_fsm_41 or ap_sig_cseq_ST_st49_fsm_48 or ap_sig_cseq_ST_st50_fsm_49) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_49)) begin
        grp_fu_140_p1 = ap_const_lv32_447A0000;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30) | (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31) | (ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41) | (ap_const_logic_1 == ap_sig_cseq_ST_st49_fsm_48))) begin
        grp_fu_140_p1 = ap_const_lv32_0;
    end else begin
        grp_fu_140_p1 = 'bx;
    end
end

always @ (reg_161 or tmp_s_reg_584 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st13_fsm_12 or ap_sig_cseq_ST_st19_fsm_18) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12) | (ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18))) begin
        grp_fu_151_p0 = reg_161;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        grp_fu_151_p0 = tmp_s_reg_584;
    end else begin
        grp_fu_151_p0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st13_fsm_12 or ap_sig_cseq_ST_st19_fsm_18) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        grp_fu_151_p1 = ap_const_lv64_4020000000000000;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        grp_fu_151_p1 = ap_const_lv64_3F30000000000000;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        grp_fu_151_p1 = ap_const_lv64_400A666666666666;
    end else begin
        grp_fu_151_p1 = 'bx;
    end
end
always @ (ap_start or ap_CS_fsm or or_cond_reg_614 or or_cond2_fu_251_p2) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : 
        begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : 
        begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : 
        begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : 
        begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : 
        begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : 
        begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : 
        begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : 
        begin
            if ((~(or_cond_reg_614 == ap_const_lv1_0) | ~(ap_const_lv1_0 == or_cond2_fu_251_p2))) begin
                ap_NS_fsm = ap_ST_st52_fsm_51;
            end else begin
                ap_NS_fsm = ap_ST_st34_fsm_33;
            end
        end
        ap_ST_st34_fsm_33 : 
        begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : 
        begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : 
        begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : 
        begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : 
        begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : 
        begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : 
        begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : 
        begin
            ap_NS_fsm = ap_ST_st42_fsm_41;
        end
        ap_ST_st42_fsm_41 : 
        begin
            ap_NS_fsm = ap_ST_st43_fsm_42;
        end
        ap_ST_st43_fsm_42 : 
        begin
            ap_NS_fsm = ap_ST_st44_fsm_43;
        end
        ap_ST_st44_fsm_43 : 
        begin
            ap_NS_fsm = ap_ST_st45_fsm_44;
        end
        ap_ST_st45_fsm_44 : 
        begin
            ap_NS_fsm = ap_ST_st46_fsm_45;
        end
        ap_ST_st46_fsm_45 : 
        begin
            ap_NS_fsm = ap_ST_st47_fsm_46;
        end
        ap_ST_st47_fsm_46 : 
        begin
            ap_NS_fsm = ap_ST_st48_fsm_47;
        end
        ap_ST_st48_fsm_47 : 
        begin
            ap_NS_fsm = ap_ST_st49_fsm_48;
        end
        ap_ST_st49_fsm_48 : 
        begin
            ap_NS_fsm = ap_ST_st50_fsm_49;
        end
        ap_ST_st50_fsm_49 : 
        begin
            ap_NS_fsm = ap_ST_st51_fsm_50;
        end
        ap_ST_st51_fsm_50 : 
        begin
            ap_NS_fsm = ap_ST_st52_fsm_51;
        end
        ap_ST_st52_fsm_51 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end



always @ (ap_CS_fsm) begin
    ap_sig_bdd_105 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_17]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_115 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1D]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_122 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_28]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_130 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2F]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_145 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_154 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_18]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_163 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_19]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_172 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1E]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_181 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1F]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_201 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_23]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_212 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_24]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_221 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_29]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_232 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2A]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_241 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_30]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_250 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_31]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_260 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_32]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_275 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_33]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_284 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2B]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_316 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_323 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_330 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_12]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_68 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_90 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_B]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_97 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_11]);
end

assign e_to_int_fu_192_p1 = reg_167;

assign grp_fu_124_ce = ap_const_logic_1;

assign grp_fu_129_ce = ap_const_logic_1;

assign grp_fu_133_ce = ap_const_logic_1;

assign grp_fu_151_ce = ap_const_logic_1;

assign grp_fu_158_ce = ap_const_logic_1;

assign grp_fu_158_p0 = v_meas;

assign isNeg_fu_498_p3 = sh_assign_fu_492_p2[ap_const_lv32_8];

assign loc_V_1_fu_472_p1 = p_Val2_s_fu_458_p1[22:0];

assign loc_V_fu_462_p4 = {{p_Val2_s_fu_458_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign notlhs2_fu_278_p2 = (tmp_16_fu_264_p4 != ap_const_lv8_FF? 1'b1: 1'b0);

assign notlhs4_fu_379_p2 = (tmp_24_fu_365_p4 != ap_const_lv8_FF? 1'b1: 1'b0);

assign notlhs5_fu_428_p2 = (tmp_29_fu_414_p4 != ap_const_lv8_FF? 1'b1: 1'b0);

assign notlhs_fu_210_p2 = (tmp_5_fu_196_p4 != ap_const_lv8_FF? 1'b1: 1'b0);

assign notrhs2_fu_284_p2 = (tmp_17_fu_274_p1 == ap_const_lv23_0? 1'b1: 1'b0);

assign notrhs4_fu_385_p2 = (tmp_25_fu_375_p1 == ap_const_lv23_0? 1'b1: 1'b0);

assign notrhs5_fu_434_p2 = (tmp_30_fu_424_p1 == ap_const_lv23_0? 1'b1: 1'b0);

assign notrhs_fu_216_p2 = (tmp_7_fu_206_p1 == ap_const_lv23_0? 1'b1: 1'b0);

assign or_cond2_fu_251_p2 = (tmp_6_reg_618 & tmp_15_reg_623);

assign or_cond_fu_233_p2 = (tmp_4_fu_184_p3 & tmp_13_fu_228_p2);

assign p_Result_s_fu_476_p3 = {{ap_const_lv1_1}, {loc_V_1_fu_472_p1}};

assign p_Val2_s_fu_458_p1 = x_assign_reg_113;

assign sel_tmp2_fu_313_p2 = (tmp_22_reg_654 & sel_tmp_fu_308_p2);

assign sel_tmp3_fu_318_p3 = ((tmp_20_reg_646[0:0] === 1'b1) ? ap_const_lv32_0 : ap_const_lv32_447A0000);

assign sel_tmp7_cast_fu_338_p1 = sel_tmp2_fu_313_p2;

assign sel_tmp_fu_308_p2 = (tmp_20_reg_646 ^ ap_const_lv1_1);

assign sh_assign_1_cast_cast_fu_528_p1 = $signed(sh_assign_1_fu_516_p3);

assign sh_assign_1_cast_fu_524_p1 = $signed(sh_assign_1_fu_516_p3);

assign sh_assign_1_fu_516_p3 = ((isNeg_fu_498_p3[0:0] === 1'b1) ? tmp_4_i_i_cast_fu_512_p1 : sh_assign_fu_492_p2);

assign sh_assign_fu_492_p2 = ($signed(ap_const_lv9_181) + $signed(tmp_i_i_i_cast9_fu_488_p1));

assign storemerge1_fu_342_p3 = ((tmp_20_reg_646[0:0] === 1'b1) ? ap_const_lv2_3 : sel_tmp7_cast_fu_338_p1);

assign tmp_10_fu_222_p2 = (notrhs_fu_216_p2 | notlhs_fu_210_p2);

assign tmp_13_fu_228_p2 = (tmp_10_fu_222_p2 & tmp_11_reg_599);

assign tmp_15_fu_245_p2 = (tmp_10_fu_222_p2 & grp_fu_140_p2);

assign tmp_16_fu_264_p4 = {{tmp_9_to_int_fu_260_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_17_fu_274_p1 = tmp_9_to_int_fu_260_p1[22:0];

assign tmp_18_fu_290_p2 = (notrhs2_fu_284_p2 | notlhs2_fu_278_p2);

assign tmp_20_fu_296_p2 = (tmp_18_fu_290_p2 & grp_fu_140_p2);

assign tmp_21_fu_145_opcode = ap_const_lv5_2;

assign tmp_22_fu_302_p2 = (tmp_18_fu_290_p2 & tmp_21_fu_145_p2);

assign tmp_23_fu_325_p2 = (tmp_20_reg_646 | sel_tmp2_fu_313_p2);

assign tmp_24_fu_365_p4 = {{x_to_int_fu_361_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_25_fu_375_p1 = x_to_int_fu_361_p1[22:0];

assign tmp_26_fu_391_p2 = (notrhs4_fu_385_p2 | notlhs4_fu_379_p2);

assign tmp_28_fu_397_p2 = (tmp_26_fu_391_p2 & grp_fu_140_p2);

assign tmp_29_fu_414_p4 = {{x_1_to_int_fu_411_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_2_i_i_fu_484_p1 = p_Result_s_fu_476_p3;

assign tmp_30_fu_424_p1 = x_1_to_int_fu_411_p1[22:0];

assign tmp_31_fu_440_p2 = (notrhs5_fu_434_p2 | notlhs5_fu_428_p2);

assign tmp_33_fu_446_p2 = (tmp_31_fu_440_p2 & tmp_32_reg_675);

assign tmp_34_fu_556_p1 = tmp_39_fu_548_p3;

assign tmp_35_fu_560_p4 = {{tmp_9_i_i_fu_542_p2[ap_const_lv32_20 : ap_const_lv32_17]}};

assign tmp_39_fu_548_p3 = tmp_7_i_i_fu_536_p2[ap_const_lv32_17];

assign tmp_4_fu_184_p3 = sat[ap_const_lv32_1];

assign tmp_4_i_i_cast_fu_512_p1 = $signed(tmp_4_i_i_fu_506_p2);

assign tmp_4_i_i_fu_506_p2 = (ap_const_lv8_7F - loc_V_fu_462_p4);

assign tmp_5_fu_196_p4 = {{e_to_int_fu_192_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_6_fu_239_p2 = (sat == ap_const_lv2_1? 1'b1: 1'b0);

assign tmp_6_i_i_fu_532_p1 = $unsigned(sh_assign_1_cast_fu_524_p1);

assign tmp_7_fu_206_p1 = e_to_int_fu_192_p1[22:0];

assign tmp_7_i_i_fu_536_p2 = p_Result_s_fu_476_p3 >> sh_assign_1_cast_cast_fu_528_p1;

assign tmp_9_i_i_fu_542_p2 = tmp_2_i_i_fu_484_p1 << tmp_6_i_i_fu_532_p1;

assign tmp_9_to_int_fu_260_p1 = reg_167;

assign tmp_i_i_i_cast9_fu_488_p1 = loc_V_fu_462_p4;

assign u = ((isNeg_fu_498_p3[0:0] === 1'b1) ? tmp_34_fu_556_p1 : tmp_35_fu_560_p4);

assign x_1_fu_403_p3 = ((tmp_28_reg_664[0:0] === 1'b1) ? reg_167 : ap_const_lv32_0);

assign x_1_to_int_fu_411_p1 = x_1_reg_669;

assign x_2_fu_451_p3 = ((tmp_33_fu_446_p2[0:0] === 1'b1) ? x_1_reg_669 : ap_const_lv32_447A0000);

assign x_integral_new_fu_330_p3 = ((tmp_23_fu_325_p2[0:0] === 1'b1) ? sel_tmp3_fu_318_p3 : reg_167);

assign x_to_int_fu_361_p1 = reg_167;


endmodule //digital_compensator

