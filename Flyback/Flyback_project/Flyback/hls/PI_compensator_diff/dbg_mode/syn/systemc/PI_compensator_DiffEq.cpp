// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "PI_compensator_DiffEq.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic PI_compensator_DiffEq::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic PI_compensator_DiffEq::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<29> PI_compensator_DiffEq::ap_ST_st1_fsm_0 = "1";
const sc_lv<29> PI_compensator_DiffEq::ap_ST_st2_fsm_1 = "10";
const sc_lv<29> PI_compensator_DiffEq::ap_ST_st3_fsm_2 = "100";
const sc_lv<29> PI_compensator_DiffEq::ap_ST_st4_fsm_3 = "1000";
const sc_lv<29> PI_compensator_DiffEq::ap_ST_st5_fsm_4 = "10000";
const sc_lv<29> PI_compensator_DiffEq::ap_ST_st6_fsm_5 = "100000";
const sc_lv<29> PI_compensator_DiffEq::ap_ST_st7_fsm_6 = "1000000";
const sc_lv<29> PI_compensator_DiffEq::ap_ST_st8_fsm_7 = "10000000";
const sc_lv<29> PI_compensator_DiffEq::ap_ST_st9_fsm_8 = "100000000";
const sc_lv<29> PI_compensator_DiffEq::ap_ST_st10_fsm_9 = "1000000000";
const sc_lv<29> PI_compensator_DiffEq::ap_ST_st11_fsm_10 = "10000000000";
const sc_lv<29> PI_compensator_DiffEq::ap_ST_st12_fsm_11 = "100000000000";
const sc_lv<29> PI_compensator_DiffEq::ap_ST_st13_fsm_12 = "1000000000000";
const sc_lv<29> PI_compensator_DiffEq::ap_ST_st14_fsm_13 = "10000000000000";
const sc_lv<29> PI_compensator_DiffEq::ap_ST_st15_fsm_14 = "100000000000000";
const sc_lv<29> PI_compensator_DiffEq::ap_ST_st16_fsm_15 = "1000000000000000";
const sc_lv<29> PI_compensator_DiffEq::ap_ST_st17_fsm_16 = "10000000000000000";
const sc_lv<29> PI_compensator_DiffEq::ap_ST_st18_fsm_17 = "100000000000000000";
const sc_lv<29> PI_compensator_DiffEq::ap_ST_st19_fsm_18 = "1000000000000000000";
const sc_lv<29> PI_compensator_DiffEq::ap_ST_st20_fsm_19 = "10000000000000000000";
const sc_lv<29> PI_compensator_DiffEq::ap_ST_st21_fsm_20 = "100000000000000000000";
const sc_lv<29> PI_compensator_DiffEq::ap_ST_st22_fsm_21 = "1000000000000000000000";
const sc_lv<29> PI_compensator_DiffEq::ap_ST_st23_fsm_22 = "10000000000000000000000";
const sc_lv<29> PI_compensator_DiffEq::ap_ST_st24_fsm_23 = "100000000000000000000000";
const sc_lv<29> PI_compensator_DiffEq::ap_ST_st25_fsm_24 = "1000000000000000000000000";
const sc_lv<29> PI_compensator_DiffEq::ap_ST_st26_fsm_25 = "10000000000000000000000000";
const sc_lv<29> PI_compensator_DiffEq::ap_ST_st27_fsm_26 = "100000000000000000000000000";
const sc_lv<29> PI_compensator_DiffEq::ap_ST_st28_fsm_27 = "1000000000000000000000000000";
const sc_lv<29> PI_compensator_DiffEq::ap_ST_st29_fsm_28 = "10000000000000000000000000000";
const sc_lv<32> PI_compensator_DiffEq::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> PI_compensator_DiffEq::ap_const_lv1_1 = "1";
const int PI_compensator_DiffEq::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> PI_compensator_DiffEq::ap_const_lv32_13 = "10011";
const sc_lv<32> PI_compensator_DiffEq::ap_const_lv32_18 = "11000";
const sc_lv<32> PI_compensator_DiffEq::ap_const_lv32_5 = "101";
const sc_lv<32> PI_compensator_DiffEq::ap_const_lv32_6 = "110";
const sc_lv<32> PI_compensator_DiffEq::ap_const_lv32_A = "1010";
const sc_lv<32> PI_compensator_DiffEq::ap_const_lv32_B = "1011";
const sc_lv<32> PI_compensator_DiffEq::ap_const_lv32_E = "1110";
const sc_lv<32> PI_compensator_DiffEq::ap_const_lv32_14 = "10100";
const sc_lv<32> PI_compensator_DiffEq::ap_const_lv32_19 = "11001";
const sc_lv<32> PI_compensator_DiffEq::ap_const_lv32_1A = "11010";
const sc_lv<32> PI_compensator_DiffEq::ap_const_lv32_1B = "11011";
const sc_lv<32> PI_compensator_DiffEq::ap_const_lv32_1C = "11100";
const sc_lv<32> PI_compensator_DiffEq::ap_const_lv32_F = "1111";
const sc_lv<32> PI_compensator_DiffEq::ap_const_lv32_17 = "10111";
const sc_lv<32> PI_compensator_DiffEq::ap_const_lv32_1E = "11110";
const sc_lv<8> PI_compensator_DiffEq::ap_const_lv8_FF = "11111111";
const sc_lv<23> PI_compensator_DiffEq::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<9> PI_compensator_DiffEq::ap_const_lv9_181 = "110000001";
const sc_lv<32> PI_compensator_DiffEq::ap_const_lv32_8 = "1000";
const sc_lv<8> PI_compensator_DiffEq::ap_const_lv8_7F = "1111111";
const sc_lv<32> PI_compensator_DiffEq::ap_const_lv32_20 = "100000";
const sc_lv<2> PI_compensator_DiffEq::ap_const_lv2_0 = "00";
const sc_lv<2> PI_compensator_DiffEq::ap_const_lv2_1 = "1";
const sc_lv<5> PI_compensator_DiffEq::ap_const_lv5_2 = "10";
const sc_lv<5> PI_compensator_DiffEq::ap_const_lv5_4 = "100";

PI_compensator_DiffEq::PI_compensator_DiffEq(sc_module_name name) : sc_module(name), mVcdFile(0) {
    PI_compensator_DiffEq_AXILiteS_s_axi_U = new PI_compensator_DiffEq_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("PI_compensator_DiffEq_AXILiteS_s_axi_U");
    PI_compensator_DiffEq_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    PI_compensator_DiffEq_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    PI_compensator_DiffEq_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    PI_compensator_DiffEq_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    PI_compensator_DiffEq_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    PI_compensator_DiffEq_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    PI_compensator_DiffEq_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    PI_compensator_DiffEq_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    PI_compensator_DiffEq_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    PI_compensator_DiffEq_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    PI_compensator_DiffEq_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    PI_compensator_DiffEq_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    PI_compensator_DiffEq_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    PI_compensator_DiffEq_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    PI_compensator_DiffEq_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    PI_compensator_DiffEq_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    PI_compensator_DiffEq_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    PI_compensator_DiffEq_AXILiteS_s_axi_U->ACLK(ap_clk);
    PI_compensator_DiffEq_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    PI_compensator_DiffEq_AXILiteS_s_axi_U->ACLK_EN(PI_compensator_DiffEq_AXILiteS_s_axi_U_ap_dummy_ce);
    PI_compensator_DiffEq_AXILiteS_s_axi_U->v_ref(v_ref);
    PI_compensator_DiffEq_AXILiteS_s_axi_U->X_MAX(X_MAX);
    PI_compensator_DiffEq_AXILiteS_s_axi_U->b0(b0);
    PI_compensator_DiffEq_AXILiteS_s_axi_U->b1(b1);
    PI_compensator_DiffEq_AXILiteS_s_axi_U->yVmeasDbg(yVmeasDbg);
    PI_compensator_DiffEq_AXILiteS_s_axi_U->yVmeasDbg_ap_vld(yVmeasDbg_ap_vld);
    PI_compensator_DiffEq_AXILiteS_s_axi_U->yDbg(yDbg);
    PI_compensator_DiffEq_AXILiteS_s_axi_U->yDbg_ap_vld(yDbg_ap_vld);
    PI_compensator_DiffEq_AXILiteS_s_axi_U->eDbg(eDbg);
    PI_compensator_DiffEq_AXILiteS_s_axi_U->eDbg_ap_vld(eDbg_ap_vld);
    PI_compensator_DiffEq_AXILiteS_s_axi_U->uDbg(uDbg);
    PI_compensator_DiffEq_AXILiteS_s_axi_U->uDbg_ap_vld(uDbg_ap_vld);
    PI_compensator_DiffEq_faddfsub_32ns_32ns_32_5_full_dsp_U0 = new PI_compensator_DiffEq_faddfsub_32ns_32ns_32_5_full_dsp<1,5,32,32,32>("PI_compensator_DiffEq_faddfsub_32ns_32ns_32_5_full_dsp_U0");
    PI_compensator_DiffEq_faddfsub_32ns_32ns_32_5_full_dsp_U0->clk(ap_clk);
    PI_compensator_DiffEq_faddfsub_32ns_32ns_32_5_full_dsp_U0->reset(ap_rst_n_inv);
    PI_compensator_DiffEq_faddfsub_32ns_32ns_32_5_full_dsp_U0->din0(grp_fu_147_p0);
    PI_compensator_DiffEq_faddfsub_32ns_32ns_32_5_full_dsp_U0->din1(grp_fu_147_p1);
    PI_compensator_DiffEq_faddfsub_32ns_32ns_32_5_full_dsp_U0->opcode(grp_fu_147_opcode);
    PI_compensator_DiffEq_faddfsub_32ns_32ns_32_5_full_dsp_U0->ce(grp_fu_147_ce);
    PI_compensator_DiffEq_faddfsub_32ns_32ns_32_5_full_dsp_U0->dout(grp_fu_147_p2);
    PI_compensator_DiffEq_fmul_32ns_32ns_32_4_max_dsp_U1 = new PI_compensator_DiffEq_fmul_32ns_32ns_32_4_max_dsp<1,4,32,32,32>("PI_compensator_DiffEq_fmul_32ns_32ns_32_4_max_dsp_U1");
    PI_compensator_DiffEq_fmul_32ns_32ns_32_4_max_dsp_U1->clk(ap_clk);
    PI_compensator_DiffEq_fmul_32ns_32ns_32_4_max_dsp_U1->reset(ap_rst_n_inv);
    PI_compensator_DiffEq_fmul_32ns_32ns_32_4_max_dsp_U1->din0(e0_loc_reg_492);
    PI_compensator_DiffEq_fmul_32ns_32ns_32_4_max_dsp_U1->din1(b0_read_reg_477);
    PI_compensator_DiffEq_fmul_32ns_32ns_32_4_max_dsp_U1->ce(grp_fu_152_ce);
    PI_compensator_DiffEq_fmul_32ns_32ns_32_4_max_dsp_U1->dout(grp_fu_152_p2);
    PI_compensator_DiffEq_fmul_32ns_32ns_32_4_max_dsp_U2 = new PI_compensator_DiffEq_fmul_32ns_32ns_32_4_max_dsp<1,4,32,32,32>("PI_compensator_DiffEq_fmul_32ns_32ns_32_4_max_dsp_U2");
    PI_compensator_DiffEq_fmul_32ns_32ns_32_4_max_dsp_U2->clk(ap_clk);
    PI_compensator_DiffEq_fmul_32ns_32ns_32_4_max_dsp_U2->reset(ap_rst_n_inv);
    PI_compensator_DiffEq_fmul_32ns_32ns_32_4_max_dsp_U2->din0(e0);
    PI_compensator_DiffEq_fmul_32ns_32ns_32_4_max_dsp_U2->din1(b1_read_reg_472);
    PI_compensator_DiffEq_fmul_32ns_32ns_32_4_max_dsp_U2->ce(grp_fu_156_ce);
    PI_compensator_DiffEq_fmul_32ns_32ns_32_4_max_dsp_U2->dout(grp_fu_156_p2);
    PI_compensator_DiffEq_sitofp_32ns_32_6_U3 = new PI_compensator_DiffEq_sitofp_32ns_32_6<1,6,32,32>("PI_compensator_DiffEq_sitofp_32ns_32_6_U3");
    PI_compensator_DiffEq_sitofp_32ns_32_6_U3->clk(ap_clk);
    PI_compensator_DiffEq_sitofp_32ns_32_6_U3->reset(ap_rst_n_inv);
    PI_compensator_DiffEq_sitofp_32ns_32_6_U3->din0(grp_fu_160_p0);
    PI_compensator_DiffEq_sitofp_32ns_32_6_U3->ce(grp_fu_160_ce);
    PI_compensator_DiffEq_sitofp_32ns_32_6_U3->dout(grp_fu_160_p1);
    PI_compensator_DiffEq_fcmp_32ns_32ns_1_1_U4 = new PI_compensator_DiffEq_fcmp_32ns_32ns_1_1<1,1,32,32,1>("PI_compensator_DiffEq_fcmp_32ns_32ns_1_1_U4");
    PI_compensator_DiffEq_fcmp_32ns_32ns_1_1_U4->din0(grp_fu_163_p0);
    PI_compensator_DiffEq_fcmp_32ns_32ns_1_1_U4->din1(grp_fu_163_p1);
    PI_compensator_DiffEq_fcmp_32ns_32ns_1_1_U4->opcode(grp_fu_163_opcode);
    PI_compensator_DiffEq_fcmp_32ns_32ns_1_1_U4->dout(grp_fu_163_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_PI_compensator_DiffEq_AXILiteS_s_axi_U_ap_dummy_ce);

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_sig_cseq_ST_st29_fsm_28 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st29_fsm_28 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_bdd_112);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_119);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_134);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_143);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_157);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_166);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_175);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_186);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_197);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_207);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_220);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_236);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_245);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_47);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st11_fsm_10);
    sensitive << ( ap_sig_bdd_157 );

    SC_METHOD(thread_ap_sig_cseq_ST_st12_fsm_11);
    sensitive << ( ap_sig_bdd_166 );

    SC_METHOD(thread_ap_sig_cseq_ST_st15_fsm_14);
    sensitive << ( ap_sig_bdd_175 );

    SC_METHOD(thread_ap_sig_cseq_ST_st16_fsm_15);
    sensitive << ( ap_sig_bdd_245 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_47 );

    SC_METHOD(thread_ap_sig_cseq_ST_st20_fsm_19);
    sensitive << ( ap_sig_bdd_112 );

    SC_METHOD(thread_ap_sig_cseq_ST_st21_fsm_20);
    sensitive << ( ap_sig_bdd_186 );

    SC_METHOD(thread_ap_sig_cseq_ST_st25_fsm_24);
    sensitive << ( ap_sig_bdd_119 );

    SC_METHOD(thread_ap_sig_cseq_ST_st26_fsm_25);
    sensitive << ( ap_sig_bdd_197 );

    SC_METHOD(thread_ap_sig_cseq_ST_st27_fsm_26);
    sensitive << ( ap_sig_bdd_207 );

    SC_METHOD(thread_ap_sig_cseq_ST_st28_fsm_27);
    sensitive << ( ap_sig_bdd_220 );

    SC_METHOD(thread_ap_sig_cseq_ST_st29_fsm_28);
    sensitive << ( ap_sig_bdd_236 );

    SC_METHOD(thread_ap_sig_cseq_ST_st6_fsm_5);
    sensitive << ( ap_sig_bdd_134 );

    SC_METHOD(thread_ap_sig_cseq_ST_st7_fsm_6);
    sensitive << ( ap_sig_bdd_143 );

    SC_METHOD(thread_eDbg);
    sensitive << ( e0_loc_reg_492 );
    sensitive << ( ap_sig_cseq_ST_st29_fsm_28 );

    SC_METHOD(thread_eDbg_ap_vld);
    sensitive << ( ap_sig_cseq_ST_st29_fsm_28 );

    SC_METHOD(thread_grp_fu_147_ce);

    SC_METHOD(thread_grp_fu_147_opcode);
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );
    sensitive << ( ap_sig_cseq_ST_st16_fsm_15 );

    SC_METHOD(thread_grp_fu_147_p0);
    sensitive << ( v_ref );
    sensitive << ( reg_168 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( tmp_s_reg_504 );
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );
    sensitive << ( ap_sig_cseq_ST_st16_fsm_15 );

    SC_METHOD(thread_grp_fu_147_p1);
    sensitive << ( x0 );
    sensitive << ( y_reg_465 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( tmp_1_reg_509 );
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );
    sensitive << ( ap_sig_cseq_ST_st16_fsm_15 );

    SC_METHOD(thread_grp_fu_152_ce);

    SC_METHOD(thread_grp_fu_156_ce);

    SC_METHOD(thread_grp_fu_160_ce);

    SC_METHOD(thread_grp_fu_160_p0);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( y2_fu_174_p1 );
    sensitive << ( tmp_fu_189_p1 );
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );

    SC_METHOD(thread_grp_fu_163_opcode);
    sensitive << ( ap_sig_cseq_ST_st26_fsm_25 );
    sensitive << ( ap_sig_cseq_ST_st27_fsm_26 );

    SC_METHOD(thread_grp_fu_163_p0);
    sensitive << ( reg_168 );
    sensitive << ( ap_sig_cseq_ST_st26_fsm_25 );
    sensitive << ( tmp_5_fu_240_p3 );
    sensitive << ( ap_sig_cseq_ST_st27_fsm_26 );

    SC_METHOD(thread_grp_fu_163_p1);
    sensitive << ( ap_sig_cseq_ST_st26_fsm_25 );
    sensitive << ( tmp_6_reg_529 );
    sensitive << ( ap_sig_cseq_ST_st27_fsm_26 );

    SC_METHOD(thread_isNeg_fu_381_p3);
    sensitive << ( sh_assign_fu_375_p2 );

    SC_METHOD(thread_loc_V_1_fu_355_p1);
    sensitive << ( p_Val2_s_fu_341_p1 );

    SC_METHOD(thread_loc_V_fu_345_p4);
    sensitive << ( p_Val2_s_fu_341_p1 );

    SC_METHOD(thread_notlhs3_fu_283_p2);
    sensitive << ( ap_sig_cseq_ST_st27_fsm_26 );
    sensitive << ( tmp_11_fu_252_p4 );

    SC_METHOD(thread_notlhs5_fu_301_p2);
    sensitive << ( ap_sig_cseq_ST_st27_fsm_26 );
    sensitive << ( tmp_13_fu_269_p4 );

    SC_METHOD(thread_notlhs_fu_216_p2);
    sensitive << ( ap_sig_cseq_ST_st26_fsm_25 );
    sensitive << ( tmp_4_fu_202_p4 );

    SC_METHOD(thread_notrhs4_fu_289_p2);
    sensitive << ( ap_sig_cseq_ST_st27_fsm_26 );
    sensitive << ( tmp_12_fu_262_p1 );

    SC_METHOD(thread_notrhs6_fu_307_p2);
    sensitive << ( ap_sig_cseq_ST_st27_fsm_26 );
    sensitive << ( tmp_14_fu_279_p1 );

    SC_METHOD(thread_notrhs_fu_222_p2);
    sensitive << ( ap_sig_cseq_ST_st26_fsm_25 );
    sensitive << ( tmp_7_fu_212_p1 );

    SC_METHOD(thread_p_Result_s_fu_359_p3);
    sensitive << ( loc_V_1_fu_355_p1 );

    SC_METHOD(thread_p_Val2_s_fu_341_p1);
    sensitive << ( x_assign_fu_329_p3 );

    SC_METHOD(thread_sh_assign_1_cast_cast_fu_411_p1);
    sensitive << ( sh_assign_1_fu_399_p3 );

    SC_METHOD(thread_sh_assign_1_cast_fu_407_p1);
    sensitive << ( sh_assign_1_fu_399_p3 );

    SC_METHOD(thread_sh_assign_1_fu_399_p3);
    sensitive << ( isNeg_fu_381_p3 );
    sensitive << ( sh_assign_fu_375_p2 );
    sensitive << ( tmp_4_i_i_cast_fu_395_p1 );

    SC_METHOD(thread_sh_assign_fu_375_p2);
    sensitive << ( tmp_i_i_i_cast1_fu_371_p1 );

    SC_METHOD(thread_tmp_10_fu_234_p2);
    sensitive << ( grp_fu_163_p2 );
    sensitive << ( tmp_8_fu_228_p2 );

    SC_METHOD(thread_tmp_11_fu_252_p4);
    sensitive << ( tmp_5_to_int_fu_248_p1 );

    SC_METHOD(thread_tmp_12_fu_262_p1);
    sensitive << ( tmp_5_to_int_fu_248_p1 );

    SC_METHOD(thread_tmp_13_fu_269_p4);
    sensitive << ( tmp_6_to_int_fu_266_p1 );

    SC_METHOD(thread_tmp_14_fu_279_p1);
    sensitive << ( tmp_6_to_int_fu_266_p1 );

    SC_METHOD(thread_tmp_15_fu_295_p2);
    sensitive << ( notrhs4_fu_289_p2 );
    sensitive << ( notlhs3_fu_283_p2 );

    SC_METHOD(thread_tmp_16_fu_313_p2);
    sensitive << ( notrhs6_fu_307_p2 );
    sensitive << ( notlhs5_fu_301_p2 );

    SC_METHOD(thread_tmp_17_fu_319_p2);
    sensitive << ( tmp_15_fu_295_p2 );
    sensitive << ( tmp_16_fu_313_p2 );

    SC_METHOD(thread_tmp_19_fu_325_p2);
    sensitive << ( tmp_17_reg_541 );
    sensitive << ( tmp_18_reg_546 );

    SC_METHOD(thread_tmp_20_fu_449_p1);
    sensitive << ( tmp_25_reg_556 );

    SC_METHOD(thread_tmp_22_fu_452_p3);
    sensitive << ( isNeg_reg_551 );
    sensitive << ( tmp_21_reg_561 );
    sensitive << ( tmp_20_fu_449_p1 );

    SC_METHOD(thread_tmp_2_i_i_fu_367_p1);
    sensitive << ( p_Result_s_fu_359_p3 );

    SC_METHOD(thread_tmp_3_to_int_fu_198_p1);
    sensitive << ( reg_168 );

    SC_METHOD(thread_tmp_4_fu_202_p4);
    sensitive << ( tmp_3_to_int_fu_198_p1 );

    SC_METHOD(thread_tmp_4_i_i_cast_fu_395_p1);
    sensitive << ( tmp_4_i_i_fu_389_p2 );

    SC_METHOD(thread_tmp_4_i_i_fu_389_p2);
    sensitive << ( loc_V_fu_345_p4 );

    SC_METHOD(thread_tmp_5_fu_240_p3);
    sensitive << ( reg_168 );
    sensitive << ( tmp_10_reg_524 );

    SC_METHOD(thread_tmp_5_to_int_fu_248_p1);
    sensitive << ( tmp_5_fu_240_p3 );

    SC_METHOD(thread_tmp_6_i_i_fu_415_p1);
    sensitive << ( sh_assign_1_cast_fu_407_p1 );

    SC_METHOD(thread_tmp_6_to_int_fu_266_p1);
    sensitive << ( tmp_6_reg_529 );

    SC_METHOD(thread_tmp_7_fu_212_p1);
    sensitive << ( tmp_3_to_int_fu_198_p1 );

    SC_METHOD(thread_tmp_7_i_i_fu_419_p2);
    sensitive << ( p_Result_s_fu_359_p3 );
    sensitive << ( sh_assign_1_cast_cast_fu_411_p1 );

    SC_METHOD(thread_tmp_8_fu_228_p2);
    sensitive << ( notrhs_fu_222_p2 );
    sensitive << ( notlhs_fu_216_p2 );

    SC_METHOD(thread_tmp_9_i_i_fu_425_p2);
    sensitive << ( tmp_2_i_i_fu_367_p1 );
    sensitive << ( tmp_6_i_i_fu_415_p1 );

    SC_METHOD(thread_tmp_fu_189_p1);
    sensitive << ( X_MAX_read_reg_482 );

    SC_METHOD(thread_tmp_i_i_i_cast1_fu_371_p1);
    sensitive << ( loc_V_fu_345_p4 );

    SC_METHOD(thread_u);
    sensitive << ( tmp_22_fu_452_p3 );
    sensitive << ( ap_sig_cseq_ST_st29_fsm_28 );

    SC_METHOD(thread_uDbg);
    sensitive << ( tmp_22_fu_452_p3 );
    sensitive << ( ap_sig_cseq_ST_st29_fsm_28 );

    SC_METHOD(thread_uDbg_ap_vld);
    sensitive << ( ap_sig_cseq_ST_st29_fsm_28 );

    SC_METHOD(thread_x_assign_fu_329_p3);
    sensitive << ( tmp_6_reg_529 );
    sensitive << ( tmp_5_reg_536 );
    sensitive << ( tmp_19_fu_325_p2 );

    SC_METHOD(thread_y2_fu_174_p1);
    sensitive << ( v_meas );

    SC_METHOD(thread_yDbg);
    sensitive << ( y_reg_465 );
    sensitive << ( ap_sig_cseq_ST_st29_fsm_28 );

    SC_METHOD(thread_yDbg_ap_vld);
    sensitive << ( ap_sig_cseq_ST_st29_fsm_28 );

    SC_METHOD(thread_yVmeasDbg);
    sensitive << ( y_reg_465 );
    sensitive << ( ap_sig_cseq_ST_st29_fsm_28 );

    SC_METHOD(thread_yVmeasDbg_ap_vld);
    sensitive << ( ap_sig_cseq_ST_st29_fsm_28 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00000000000000000000000000001";
    x0 = "00000000000000000000000000000000";
    e0 = "00000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "PI_compensator_DiffEq_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, v_meas, "(port)v_meas");
    sc_trace(mVcdFile, u, "(port)u");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_47, "ap_sig_bdd_47");
    sc_trace(mVcdFile, v_ref, "v_ref");
    sc_trace(mVcdFile, X_MAX, "X_MAX");
    sc_trace(mVcdFile, b0, "b0");
    sc_trace(mVcdFile, b1, "b1");
    sc_trace(mVcdFile, yVmeasDbg, "yVmeasDbg");
    sc_trace(mVcdFile, yVmeasDbg_ap_vld, "yVmeasDbg_ap_vld");
    sc_trace(mVcdFile, yDbg, "yDbg");
    sc_trace(mVcdFile, yDbg_ap_vld, "yDbg_ap_vld");
    sc_trace(mVcdFile, eDbg, "eDbg");
    sc_trace(mVcdFile, eDbg_ap_vld, "eDbg_ap_vld");
    sc_trace(mVcdFile, uDbg, "uDbg");
    sc_trace(mVcdFile, uDbg_ap_vld, "uDbg_ap_vld");
    sc_trace(mVcdFile, x0, "x0");
    sc_trace(mVcdFile, e0, "e0");
    sc_trace(mVcdFile, PI_compensator_DiffEq_AXILiteS_s_axi_U_ap_dummy_ce, "PI_compensator_DiffEq_AXILiteS_s_axi_U_ap_dummy_ce");
    sc_trace(mVcdFile, grp_fu_147_p2, "grp_fu_147_p2");
    sc_trace(mVcdFile, reg_168, "reg_168");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st20_fsm_19, "ap_sig_cseq_ST_st20_fsm_19");
    sc_trace(mVcdFile, ap_sig_bdd_112, "ap_sig_bdd_112");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st25_fsm_24, "ap_sig_cseq_ST_st25_fsm_24");
    sc_trace(mVcdFile, ap_sig_bdd_119, "ap_sig_bdd_119");
    sc_trace(mVcdFile, y2_fu_174_p1, "y2_fu_174_p1");
    sc_trace(mVcdFile, grp_fu_160_p1, "grp_fu_160_p1");
    sc_trace(mVcdFile, y_reg_465, "y_reg_465");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st6_fsm_5, "ap_sig_cseq_ST_st6_fsm_5");
    sc_trace(mVcdFile, ap_sig_bdd_134, "ap_sig_bdd_134");
    sc_trace(mVcdFile, b1_read_reg_472, "b1_read_reg_472");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st7_fsm_6, "ap_sig_cseq_ST_st7_fsm_6");
    sc_trace(mVcdFile, ap_sig_bdd_143, "ap_sig_bdd_143");
    sc_trace(mVcdFile, b0_read_reg_477, "b0_read_reg_477");
    sc_trace(mVcdFile, X_MAX_read_reg_482, "X_MAX_read_reg_482");
    sc_trace(mVcdFile, e0_loc_reg_492, "e0_loc_reg_492");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st11_fsm_10, "ap_sig_cseq_ST_st11_fsm_10");
    sc_trace(mVcdFile, ap_sig_bdd_157, "ap_sig_bdd_157");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st12_fsm_11, "ap_sig_cseq_ST_st12_fsm_11");
    sc_trace(mVcdFile, ap_sig_bdd_166, "ap_sig_bdd_166");
    sc_trace(mVcdFile, grp_fu_152_p2, "grp_fu_152_p2");
    sc_trace(mVcdFile, tmp_s_reg_504, "tmp_s_reg_504");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st15_fsm_14, "ap_sig_cseq_ST_st15_fsm_14");
    sc_trace(mVcdFile, ap_sig_bdd_175, "ap_sig_bdd_175");
    sc_trace(mVcdFile, grp_fu_156_p2, "grp_fu_156_p2");
    sc_trace(mVcdFile, tmp_1_reg_509, "tmp_1_reg_509");
    sc_trace(mVcdFile, tmp_fu_189_p1, "tmp_fu_189_p1");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st21_fsm_20, "ap_sig_cseq_ST_st21_fsm_20");
    sc_trace(mVcdFile, ap_sig_bdd_186, "ap_sig_bdd_186");
    sc_trace(mVcdFile, tmp_10_fu_234_p2, "tmp_10_fu_234_p2");
    sc_trace(mVcdFile, tmp_10_reg_524, "tmp_10_reg_524");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st26_fsm_25, "ap_sig_cseq_ST_st26_fsm_25");
    sc_trace(mVcdFile, ap_sig_bdd_197, "ap_sig_bdd_197");
    sc_trace(mVcdFile, tmp_6_reg_529, "tmp_6_reg_529");
    sc_trace(mVcdFile, tmp_5_fu_240_p3, "tmp_5_fu_240_p3");
    sc_trace(mVcdFile, tmp_5_reg_536, "tmp_5_reg_536");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st27_fsm_26, "ap_sig_cseq_ST_st27_fsm_26");
    sc_trace(mVcdFile, ap_sig_bdd_207, "ap_sig_bdd_207");
    sc_trace(mVcdFile, tmp_17_fu_319_p2, "tmp_17_fu_319_p2");
    sc_trace(mVcdFile, tmp_17_reg_541, "tmp_17_reg_541");
    sc_trace(mVcdFile, grp_fu_163_p2, "grp_fu_163_p2");
    sc_trace(mVcdFile, tmp_18_reg_546, "tmp_18_reg_546");
    sc_trace(mVcdFile, isNeg_fu_381_p3, "isNeg_fu_381_p3");
    sc_trace(mVcdFile, isNeg_reg_551, "isNeg_reg_551");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st28_fsm_27, "ap_sig_cseq_ST_st28_fsm_27");
    sc_trace(mVcdFile, ap_sig_bdd_220, "ap_sig_bdd_220");
    sc_trace(mVcdFile, tmp_25_reg_556, "tmp_25_reg_556");
    sc_trace(mVcdFile, tmp_21_reg_561, "tmp_21_reg_561");
    sc_trace(mVcdFile, x_assign_fu_329_p3, "x_assign_fu_329_p3");
    sc_trace(mVcdFile, tmp_22_fu_452_p3, "tmp_22_fu_452_p3");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st29_fsm_28, "ap_sig_cseq_ST_st29_fsm_28");
    sc_trace(mVcdFile, ap_sig_bdd_236, "ap_sig_bdd_236");
    sc_trace(mVcdFile, grp_fu_147_p0, "grp_fu_147_p0");
    sc_trace(mVcdFile, grp_fu_147_p1, "grp_fu_147_p1");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st16_fsm_15, "ap_sig_cseq_ST_st16_fsm_15");
    sc_trace(mVcdFile, ap_sig_bdd_245, "ap_sig_bdd_245");
    sc_trace(mVcdFile, grp_fu_160_p0, "grp_fu_160_p0");
    sc_trace(mVcdFile, grp_fu_163_p0, "grp_fu_163_p0");
    sc_trace(mVcdFile, grp_fu_163_p1, "grp_fu_163_p1");
    sc_trace(mVcdFile, tmp_3_to_int_fu_198_p1, "tmp_3_to_int_fu_198_p1");
    sc_trace(mVcdFile, tmp_4_fu_202_p4, "tmp_4_fu_202_p4");
    sc_trace(mVcdFile, tmp_7_fu_212_p1, "tmp_7_fu_212_p1");
    sc_trace(mVcdFile, notrhs_fu_222_p2, "notrhs_fu_222_p2");
    sc_trace(mVcdFile, notlhs_fu_216_p2, "notlhs_fu_216_p2");
    sc_trace(mVcdFile, tmp_8_fu_228_p2, "tmp_8_fu_228_p2");
    sc_trace(mVcdFile, tmp_5_to_int_fu_248_p1, "tmp_5_to_int_fu_248_p1");
    sc_trace(mVcdFile, tmp_6_to_int_fu_266_p1, "tmp_6_to_int_fu_266_p1");
    sc_trace(mVcdFile, tmp_11_fu_252_p4, "tmp_11_fu_252_p4");
    sc_trace(mVcdFile, tmp_12_fu_262_p1, "tmp_12_fu_262_p1");
    sc_trace(mVcdFile, notrhs4_fu_289_p2, "notrhs4_fu_289_p2");
    sc_trace(mVcdFile, notlhs3_fu_283_p2, "notlhs3_fu_283_p2");
    sc_trace(mVcdFile, tmp_13_fu_269_p4, "tmp_13_fu_269_p4");
    sc_trace(mVcdFile, tmp_14_fu_279_p1, "tmp_14_fu_279_p1");
    sc_trace(mVcdFile, notrhs6_fu_307_p2, "notrhs6_fu_307_p2");
    sc_trace(mVcdFile, notlhs5_fu_301_p2, "notlhs5_fu_301_p2");
    sc_trace(mVcdFile, tmp_15_fu_295_p2, "tmp_15_fu_295_p2");
    sc_trace(mVcdFile, tmp_16_fu_313_p2, "tmp_16_fu_313_p2");
    sc_trace(mVcdFile, tmp_19_fu_325_p2, "tmp_19_fu_325_p2");
    sc_trace(mVcdFile, p_Val2_s_fu_341_p1, "p_Val2_s_fu_341_p1");
    sc_trace(mVcdFile, loc_V_1_fu_355_p1, "loc_V_1_fu_355_p1");
    sc_trace(mVcdFile, p_Result_s_fu_359_p3, "p_Result_s_fu_359_p3");
    sc_trace(mVcdFile, loc_V_fu_345_p4, "loc_V_fu_345_p4");
    sc_trace(mVcdFile, tmp_i_i_i_cast1_fu_371_p1, "tmp_i_i_i_cast1_fu_371_p1");
    sc_trace(mVcdFile, sh_assign_fu_375_p2, "sh_assign_fu_375_p2");
    sc_trace(mVcdFile, tmp_4_i_i_fu_389_p2, "tmp_4_i_i_fu_389_p2");
    sc_trace(mVcdFile, tmp_4_i_i_cast_fu_395_p1, "tmp_4_i_i_cast_fu_395_p1");
    sc_trace(mVcdFile, sh_assign_1_fu_399_p3, "sh_assign_1_fu_399_p3");
    sc_trace(mVcdFile, sh_assign_1_cast_fu_407_p1, "sh_assign_1_cast_fu_407_p1");
    sc_trace(mVcdFile, sh_assign_1_cast_cast_fu_411_p1, "sh_assign_1_cast_cast_fu_411_p1");
    sc_trace(mVcdFile, tmp_2_i_i_fu_367_p1, "tmp_2_i_i_fu_367_p1");
    sc_trace(mVcdFile, tmp_6_i_i_fu_415_p1, "tmp_6_i_i_fu_415_p1");
    sc_trace(mVcdFile, tmp_7_i_i_fu_419_p2, "tmp_7_i_i_fu_419_p2");
    sc_trace(mVcdFile, tmp_9_i_i_fu_425_p2, "tmp_9_i_i_fu_425_p2");
    sc_trace(mVcdFile, tmp_20_fu_449_p1, "tmp_20_fu_449_p1");
    sc_trace(mVcdFile, grp_fu_147_opcode, "grp_fu_147_opcode");
    sc_trace(mVcdFile, grp_fu_147_ce, "grp_fu_147_ce");
    sc_trace(mVcdFile, grp_fu_152_ce, "grp_fu_152_ce");
    sc_trace(mVcdFile, grp_fu_156_ce, "grp_fu_156_ce");
    sc_trace(mVcdFile, grp_fu_160_ce, "grp_fu_160_ce");
    sc_trace(mVcdFile, grp_fu_163_opcode, "grp_fu_163_opcode");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("PI_compensator_DiffEq.hdltvin.dat");
    mHdltvoutHandle.open("PI_compensator_DiffEq.hdltvout.dat");
}

PI_compensator_DiffEq::~PI_compensator_DiffEq() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete PI_compensator_DiffEq_AXILiteS_s_axi_U;
    delete PI_compensator_DiffEq_faddfsub_32ns_32ns_32_5_full_dsp_U0;
    delete PI_compensator_DiffEq_fmul_32ns_32ns_32_4_max_dsp_U1;
    delete PI_compensator_DiffEq_fmul_32ns_32ns_32_4_max_dsp_U2;
    delete PI_compensator_DiffEq_sitofp_32ns_32_6_U3;
    delete PI_compensator_DiffEq_fcmp_32ns_32ns_1_1_U4;
}

void PI_compensator_DiffEq::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        X_MAX_read_reg_482 = X_MAX.read();
        b0_read_reg_477 = b0.read();
        b1_read_reg_472 = b1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read())) {
        e0 = e0_loc_reg_492.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read())) {
        e0_loc_reg_492 = grp_fu_147_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st28_fsm_27.read())) {
        isNeg_reg_551 = sh_assign_fu_375_p2.read().range(8, 8);
        tmp_21_reg_561 = tmp_9_i_i_fu_425_p2.read().range(32, 23);
        tmp_25_reg_556 = tmp_7_i_i_fu_419_p2.read().range(23, 23);
        x0 = x_assign_fu_329_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st25_fsm_24.read()))) {
        reg_168 = grp_fu_147_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st26_fsm_25.read())) {
        tmp_10_reg_524 = tmp_10_fu_234_p2.read();
        tmp_6_reg_529 = grp_fu_160_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st27_fsm_26.read())) {
        tmp_17_reg_541 = tmp_17_fu_319_p2.read();
        tmp_18_reg_546 = grp_fu_163_p2.read();
        tmp_5_reg_536 = tmp_5_fu_240_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st15_fsm_14.read())) {
        tmp_1_reg_509 = grp_fu_156_p2.read();
        tmp_s_reg_504 = grp_fu_152_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        y_reg_465 = grp_fu_160_p1.read();
    }
}

void PI_compensator_DiffEq::thread_PI_compensator_DiffEq_AXILiteS_s_axi_U_ap_dummy_ce() {
    PI_compensator_DiffEq_AXILiteS_s_axi_U_ap_dummy_ce = ap_const_logic_1;
}

void PI_compensator_DiffEq::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st29_fsm_28.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void PI_compensator_DiffEq::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void PI_compensator_DiffEq::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st29_fsm_28.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void PI_compensator_DiffEq::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void PI_compensator_DiffEq::thread_ap_sig_bdd_112() {
    ap_sig_bdd_112 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(19, 19));
}

void PI_compensator_DiffEq::thread_ap_sig_bdd_119() {
    ap_sig_bdd_119 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(24, 24));
}

void PI_compensator_DiffEq::thread_ap_sig_bdd_134() {
    ap_sig_bdd_134 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(5, 5));
}

void PI_compensator_DiffEq::thread_ap_sig_bdd_143() {
    ap_sig_bdd_143 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(6, 6));
}

void PI_compensator_DiffEq::thread_ap_sig_bdd_157() {
    ap_sig_bdd_157 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(10, 10));
}

void PI_compensator_DiffEq::thread_ap_sig_bdd_166() {
    ap_sig_bdd_166 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(11, 11));
}

void PI_compensator_DiffEq::thread_ap_sig_bdd_175() {
    ap_sig_bdd_175 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(14, 14));
}

void PI_compensator_DiffEq::thread_ap_sig_bdd_186() {
    ap_sig_bdd_186 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(20, 20));
}

void PI_compensator_DiffEq::thread_ap_sig_bdd_197() {
    ap_sig_bdd_197 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(25, 25));
}

void PI_compensator_DiffEq::thread_ap_sig_bdd_207() {
    ap_sig_bdd_207 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(26, 26));
}

void PI_compensator_DiffEq::thread_ap_sig_bdd_220() {
    ap_sig_bdd_220 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(27, 27));
}

void PI_compensator_DiffEq::thread_ap_sig_bdd_236() {
    ap_sig_bdd_236 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(28, 28));
}

void PI_compensator_DiffEq::thread_ap_sig_bdd_245() {
    ap_sig_bdd_245 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(15, 15));
}

void PI_compensator_DiffEq::thread_ap_sig_bdd_47() {
    ap_sig_bdd_47 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void PI_compensator_DiffEq::thread_ap_sig_cseq_ST_st11_fsm_10() {
    if (ap_sig_bdd_157.read()) {
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    }
}

void PI_compensator_DiffEq::thread_ap_sig_cseq_ST_st12_fsm_11() {
    if (ap_sig_bdd_166.read()) {
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    }
}

void PI_compensator_DiffEq::thread_ap_sig_cseq_ST_st15_fsm_14() {
    if (ap_sig_bdd_175.read()) {
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_0;
    }
}

void PI_compensator_DiffEq::thread_ap_sig_cseq_ST_st16_fsm_15() {
    if (ap_sig_bdd_245.read()) {
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_0;
    }
}

void PI_compensator_DiffEq::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_47.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void PI_compensator_DiffEq::thread_ap_sig_cseq_ST_st20_fsm_19() {
    if (ap_sig_bdd_112.read()) {
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_0;
    }
}

void PI_compensator_DiffEq::thread_ap_sig_cseq_ST_st21_fsm_20() {
    if (ap_sig_bdd_186.read()) {
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_0;
    }
}

void PI_compensator_DiffEq::thread_ap_sig_cseq_ST_st25_fsm_24() {
    if (ap_sig_bdd_119.read()) {
        ap_sig_cseq_ST_st25_fsm_24 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st25_fsm_24 = ap_const_logic_0;
    }
}

void PI_compensator_DiffEq::thread_ap_sig_cseq_ST_st26_fsm_25() {
    if (ap_sig_bdd_197.read()) {
        ap_sig_cseq_ST_st26_fsm_25 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st26_fsm_25 = ap_const_logic_0;
    }
}

void PI_compensator_DiffEq::thread_ap_sig_cseq_ST_st27_fsm_26() {
    if (ap_sig_bdd_207.read()) {
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_0;
    }
}

void PI_compensator_DiffEq::thread_ap_sig_cseq_ST_st28_fsm_27() {
    if (ap_sig_bdd_220.read()) {
        ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_0;
    }
}

void PI_compensator_DiffEq::thread_ap_sig_cseq_ST_st29_fsm_28() {
    if (ap_sig_bdd_236.read()) {
        ap_sig_cseq_ST_st29_fsm_28 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st29_fsm_28 = ap_const_logic_0;
    }
}

void PI_compensator_DiffEq::thread_ap_sig_cseq_ST_st6_fsm_5() {
    if (ap_sig_bdd_134.read()) {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    }
}

void PI_compensator_DiffEq::thread_ap_sig_cseq_ST_st7_fsm_6() {
    if (ap_sig_bdd_143.read()) {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    }
}

void PI_compensator_DiffEq::thread_eDbg() {
    eDbg = e0_loc_reg_492.read();
}

void PI_compensator_DiffEq::thread_eDbg_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st29_fsm_28.read())) {
        eDbg_ap_vld = ap_const_logic_1;
    } else {
        eDbg_ap_vld = ap_const_logic_0;
    }
}

void PI_compensator_DiffEq::thread_grp_fu_147_ce() {
    grp_fu_147_ce = ap_const_logic_1;
}

void PI_compensator_DiffEq::thread_grp_fu_147_opcode() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        grp_fu_147_opcode = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read()))) {
        grp_fu_147_opcode = ap_const_lv2_0;
    } else {
        grp_fu_147_opcode = "XX";
    }
}

void PI_compensator_DiffEq::thread_grp_fu_147_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read())) {
        grp_fu_147_p0 = reg_168.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read())) {
        grp_fu_147_p0 = tmp_s_reg_504.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        grp_fu_147_p0 = v_ref.read();
    } else {
        grp_fu_147_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void PI_compensator_DiffEq::thread_grp_fu_147_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read())) {
        grp_fu_147_p1 = x0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read())) {
        grp_fu_147_p1 = tmp_1_reg_509.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        grp_fu_147_p1 = y_reg_465.read();
    } else {
        grp_fu_147_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void PI_compensator_DiffEq::thread_grp_fu_152_ce() {
    grp_fu_152_ce = ap_const_logic_1;
}

void PI_compensator_DiffEq::thread_grp_fu_156_ce() {
    grp_fu_156_ce = ap_const_logic_1;
}

void PI_compensator_DiffEq::thread_grp_fu_160_ce() {
    grp_fu_160_ce = ap_const_logic_1;
}

void PI_compensator_DiffEq::thread_grp_fu_160_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read())) {
        grp_fu_160_p0 = tmp_fu_189_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) {
        grp_fu_160_p0 = y2_fu_174_p1.read();
    } else {
        grp_fu_160_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void PI_compensator_DiffEq::thread_grp_fu_163_opcode() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st27_fsm_26.read())) {
        grp_fu_163_opcode = ap_const_lv5_4;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st26_fsm_25.read())) {
        grp_fu_163_opcode = ap_const_lv5_2;
    } else {
        grp_fu_163_opcode =  (sc_lv<5>) ("XXXXX");
    }
}

void PI_compensator_DiffEq::thread_grp_fu_163_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st27_fsm_26.read())) {
        grp_fu_163_p0 = tmp_5_fu_240_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st26_fsm_25.read())) {
        grp_fu_163_p0 = reg_168.read();
    } else {
        grp_fu_163_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void PI_compensator_DiffEq::thread_grp_fu_163_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st27_fsm_26.read())) {
        grp_fu_163_p1 = tmp_6_reg_529.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st26_fsm_25.read())) {
        grp_fu_163_p1 = ap_const_lv32_0;
    } else {
        grp_fu_163_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void PI_compensator_DiffEq::thread_isNeg_fu_381_p3() {
    isNeg_fu_381_p3 = sh_assign_fu_375_p2.read().range(8, 8);
}

void PI_compensator_DiffEq::thread_loc_V_1_fu_355_p1() {
    loc_V_1_fu_355_p1 = p_Val2_s_fu_341_p1.read().range(23-1, 0);
}

void PI_compensator_DiffEq::thread_loc_V_fu_345_p4() {
    loc_V_fu_345_p4 = p_Val2_s_fu_341_p1.read().range(30, 23);
}

void PI_compensator_DiffEq::thread_notlhs3_fu_283_p2() {
    notlhs3_fu_283_p2 = (!tmp_11_fu_252_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_11_fu_252_p4.read() != ap_const_lv8_FF);
}

void PI_compensator_DiffEq::thread_notlhs5_fu_301_p2() {
    notlhs5_fu_301_p2 = (!tmp_13_fu_269_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_13_fu_269_p4.read() != ap_const_lv8_FF);
}

void PI_compensator_DiffEq::thread_notlhs_fu_216_p2() {
    notlhs_fu_216_p2 = (!tmp_4_fu_202_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_4_fu_202_p4.read() != ap_const_lv8_FF);
}

void PI_compensator_DiffEq::thread_notrhs4_fu_289_p2() {
    notrhs4_fu_289_p2 = (!tmp_12_fu_262_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_12_fu_262_p1.read() == ap_const_lv23_0);
}

void PI_compensator_DiffEq::thread_notrhs6_fu_307_p2() {
    notrhs6_fu_307_p2 = (!tmp_14_fu_279_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_14_fu_279_p1.read() == ap_const_lv23_0);
}

void PI_compensator_DiffEq::thread_notrhs_fu_222_p2() {
    notrhs_fu_222_p2 = (!tmp_7_fu_212_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_7_fu_212_p1.read() == ap_const_lv23_0);
}

void PI_compensator_DiffEq::thread_p_Result_s_fu_359_p3() {
    p_Result_s_fu_359_p3 = esl_concat<1,23>(ap_const_lv1_1, loc_V_1_fu_355_p1.read());
}

void PI_compensator_DiffEq::thread_p_Val2_s_fu_341_p1() {
    p_Val2_s_fu_341_p1 = x_assign_fu_329_p3.read();
}

void PI_compensator_DiffEq::thread_sh_assign_1_cast_cast_fu_411_p1() {
    sh_assign_1_cast_cast_fu_411_p1 = esl_sext<24,9>(sh_assign_1_fu_399_p3.read());
}

void PI_compensator_DiffEq::thread_sh_assign_1_cast_fu_407_p1() {
    sh_assign_1_cast_fu_407_p1 = esl_sext<32,9>(sh_assign_1_fu_399_p3.read());
}

void PI_compensator_DiffEq::thread_sh_assign_1_fu_399_p3() {
    sh_assign_1_fu_399_p3 = (!isNeg_fu_381_p3.read()[0].is_01())? sc_lv<9>(): ((isNeg_fu_381_p3.read()[0].to_bool())? tmp_4_i_i_cast_fu_395_p1.read(): sh_assign_fu_375_p2.read());
}

void PI_compensator_DiffEq::thread_sh_assign_fu_375_p2() {
    sh_assign_fu_375_p2 = (!ap_const_lv9_181.is_01() || !tmp_i_i_i_cast1_fu_371_p1.read().is_01())? sc_lv<9>(): (sc_bigint<9>(ap_const_lv9_181) + sc_biguint<9>(tmp_i_i_i_cast1_fu_371_p1.read()));
}

void PI_compensator_DiffEq::thread_tmp_10_fu_234_p2() {
    tmp_10_fu_234_p2 = (tmp_8_fu_228_p2.read() & grp_fu_163_p2.read());
}

void PI_compensator_DiffEq::thread_tmp_11_fu_252_p4() {
    tmp_11_fu_252_p4 = tmp_5_to_int_fu_248_p1.read().range(30, 23);
}

void PI_compensator_DiffEq::thread_tmp_12_fu_262_p1() {
    tmp_12_fu_262_p1 = tmp_5_to_int_fu_248_p1.read().range(23-1, 0);
}

void PI_compensator_DiffEq::thread_tmp_13_fu_269_p4() {
    tmp_13_fu_269_p4 = tmp_6_to_int_fu_266_p1.read().range(30, 23);
}

void PI_compensator_DiffEq::thread_tmp_14_fu_279_p1() {
    tmp_14_fu_279_p1 = tmp_6_to_int_fu_266_p1.read().range(23-1, 0);
}

void PI_compensator_DiffEq::thread_tmp_15_fu_295_p2() {
    tmp_15_fu_295_p2 = (notrhs4_fu_289_p2.read() | notlhs3_fu_283_p2.read());
}

void PI_compensator_DiffEq::thread_tmp_16_fu_313_p2() {
    tmp_16_fu_313_p2 = (notrhs6_fu_307_p2.read() | notlhs5_fu_301_p2.read());
}

void PI_compensator_DiffEq::thread_tmp_17_fu_319_p2() {
    tmp_17_fu_319_p2 = (tmp_15_fu_295_p2.read() & tmp_16_fu_313_p2.read());
}

void PI_compensator_DiffEq::thread_tmp_19_fu_325_p2() {
    tmp_19_fu_325_p2 = (tmp_17_reg_541.read() & tmp_18_reg_546.read());
}

void PI_compensator_DiffEq::thread_tmp_20_fu_449_p1() {
    tmp_20_fu_449_p1 = esl_zext<10,1>(tmp_25_reg_556.read());
}

void PI_compensator_DiffEq::thread_tmp_22_fu_452_p3() {
    tmp_22_fu_452_p3 = (!isNeg_reg_551.read()[0].is_01())? sc_lv<10>(): ((isNeg_reg_551.read()[0].to_bool())? tmp_20_fu_449_p1.read(): tmp_21_reg_561.read());
}

void PI_compensator_DiffEq::thread_tmp_2_i_i_fu_367_p1() {
    tmp_2_i_i_fu_367_p1 = esl_zext<62,24>(p_Result_s_fu_359_p3.read());
}

void PI_compensator_DiffEq::thread_tmp_3_to_int_fu_198_p1() {
    tmp_3_to_int_fu_198_p1 = reg_168.read();
}

void PI_compensator_DiffEq::thread_tmp_4_fu_202_p4() {
    tmp_4_fu_202_p4 = tmp_3_to_int_fu_198_p1.read().range(30, 23);
}

void PI_compensator_DiffEq::thread_tmp_4_i_i_cast_fu_395_p1() {
    tmp_4_i_i_cast_fu_395_p1 = esl_sext<9,8>(tmp_4_i_i_fu_389_p2.read());
}

void PI_compensator_DiffEq::thread_tmp_4_i_i_fu_389_p2() {
    tmp_4_i_i_fu_389_p2 = (!ap_const_lv8_7F.is_01() || !loc_V_fu_345_p4.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_7F) - sc_biguint<8>(loc_V_fu_345_p4.read()));
}

void PI_compensator_DiffEq::thread_tmp_5_fu_240_p3() {
    tmp_5_fu_240_p3 = (!tmp_10_reg_524.read()[0].is_01())? sc_lv<32>(): ((tmp_10_reg_524.read()[0].to_bool())? reg_168.read(): ap_const_lv32_0);
}

void PI_compensator_DiffEq::thread_tmp_5_to_int_fu_248_p1() {
    tmp_5_to_int_fu_248_p1 = tmp_5_fu_240_p3.read();
}

void PI_compensator_DiffEq::thread_tmp_6_i_i_fu_415_p1() {
    tmp_6_i_i_fu_415_p1 = esl_zext<62,32>(sh_assign_1_cast_fu_407_p1.read());
}

void PI_compensator_DiffEq::thread_tmp_6_to_int_fu_266_p1() {
    tmp_6_to_int_fu_266_p1 = tmp_6_reg_529.read();
}

void PI_compensator_DiffEq::thread_tmp_7_fu_212_p1() {
    tmp_7_fu_212_p1 = tmp_3_to_int_fu_198_p1.read().range(23-1, 0);
}

void PI_compensator_DiffEq::thread_tmp_7_i_i_fu_419_p2() {
    tmp_7_i_i_fu_419_p2 = (!sh_assign_1_cast_cast_fu_411_p1.read().is_01())? sc_lv<24>(): p_Result_s_fu_359_p3.read() >> (unsigned short)sh_assign_1_cast_cast_fu_411_p1.read().to_uint();
}

void PI_compensator_DiffEq::thread_tmp_8_fu_228_p2() {
    tmp_8_fu_228_p2 = (notrhs_fu_222_p2.read() | notlhs_fu_216_p2.read());
}

void PI_compensator_DiffEq::thread_tmp_9_i_i_fu_425_p2() {
    tmp_9_i_i_fu_425_p2 = (!tmp_6_i_i_fu_415_p1.read().is_01())? sc_lv<62>(): tmp_2_i_i_fu_367_p1.read() << (unsigned short)tmp_6_i_i_fu_415_p1.read().to_uint();
}

void PI_compensator_DiffEq::thread_tmp_fu_189_p1() {
    tmp_fu_189_p1 = esl_zext<32,10>(X_MAX_read_reg_482.read());
}

void PI_compensator_DiffEq::thread_tmp_i_i_i_cast1_fu_371_p1() {
    tmp_i_i_i_cast1_fu_371_p1 = esl_zext<9,8>(loc_V_fu_345_p4.read());
}

void PI_compensator_DiffEq::thread_u() {
    u = tmp_22_fu_452_p3.read();
}

void PI_compensator_DiffEq::thread_uDbg() {
    uDbg = tmp_22_fu_452_p3.read();
}

void PI_compensator_DiffEq::thread_uDbg_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st29_fsm_28.read())) {
        uDbg_ap_vld = ap_const_logic_1;
    } else {
        uDbg_ap_vld = ap_const_logic_0;
    }
}

void PI_compensator_DiffEq::thread_x_assign_fu_329_p3() {
    x_assign_fu_329_p3 = (!tmp_19_fu_325_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_19_fu_325_p2.read()[0].to_bool())? tmp_5_reg_536.read(): tmp_6_reg_529.read());
}

void PI_compensator_DiffEq::thread_y2_fu_174_p1() {
    y2_fu_174_p1 = esl_zext<32,12>(v_meas.read());
}

void PI_compensator_DiffEq::thread_yDbg() {
    yDbg = y_reg_465.read();
}

void PI_compensator_DiffEq::thread_yDbg_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st29_fsm_28.read())) {
        yDbg_ap_vld = ap_const_logic_1;
    } else {
        yDbg_ap_vld = ap_const_logic_0;
    }
}

void PI_compensator_DiffEq::thread_yVmeasDbg() {
    yVmeasDbg = y_reg_465.read();
}

void PI_compensator_DiffEq::thread_yVmeasDbg_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st29_fsm_28.read())) {
        yVmeasDbg_ap_vld = ap_const_logic_1;
    } else {
        yVmeasDbg_ap_vld = ap_const_logic_0;
    }
}

void PI_compensator_DiffEq::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_st11_fsm_10;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_st12_fsm_11;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_st13_fsm_12;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_st14_fsm_13;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_st15_fsm_14;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_st16_fsm_15;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_st17_fsm_16;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_st18_fsm_17;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_st19_fsm_18;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_st20_fsm_19;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_st21_fsm_20;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_st22_fsm_21;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_st23_fsm_22;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_st24_fsm_23;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_st25_fsm_24;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_st26_fsm_25;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_st27_fsm_26;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_st28_fsm_27;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_st29_fsm_28;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<29>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void PI_compensator_DiffEq::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v_meas\" :  \"" << v_meas.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"u\" :  \"" << u.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

