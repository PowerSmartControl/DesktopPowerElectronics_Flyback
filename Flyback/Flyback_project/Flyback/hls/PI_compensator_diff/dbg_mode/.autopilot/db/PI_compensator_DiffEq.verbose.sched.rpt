

================================================================
== Vivado HLS Report for 'PI_compensator_DiffEq'
================================================================
* Date:           Tue Mar 15 08:08:42 2016

* Version:        2015.4 (Build 1412921 on Wed Nov 18 09:58:55 AM 2015)
* Project:        PI_compensator_diff
* Solution:       dbg_mode
* Product family: zynq
* Target device:  xc7z010clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.61|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   28|   28|   29|   29|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 29
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
* FSM state operations: 

 <State 1>: 6.41ns
ST_1: v_meas_read [1/1] 0.00ns
_ifconv:14  %v_meas_read = call i12 @_ssdm_op_Read.ap_none.i12(i12 %v_meas) nounwind

ST_1: y2 [1/1] 0.00ns
_ifconv:29  %y2 = zext i12 %v_meas_read to i32

ST_1: y [6/6] 6.41ns
_ifconv:30  %y = sitofp i32 %y2 to float


 <State 2>: 6.41ns
ST_2: y [5/6] 6.41ns
_ifconv:30  %y = sitofp i32 %y2 to float


 <State 3>: 6.41ns
ST_3: y [4/6] 6.41ns
_ifconv:30  %y = sitofp i32 %y2 to float


 <State 4>: 6.41ns
ST_4: y [3/6] 6.41ns
_ifconv:30  %y = sitofp i32 %y2 to float


 <State 5>: 6.41ns
ST_5: y [2/6] 6.41ns
_ifconv:30  %y = sitofp i32 %y2 to float


 <State 6>: 6.41ns
ST_6: y [1/6] 6.41ns
_ifconv:30  %y = sitofp i32 %y2 to float


 <State 7>: 8.26ns
ST_7: b1_read [1/1] 1.00ns
_ifconv:11  %b1_read = call float @_ssdm_op_Read.s_axilite.float(float %b1) nounwind

ST_7: b0_read [1/1] 1.00ns
_ifconv:12  %b0_read = call float @_ssdm_op_Read.s_axilite.float(float %b0) nounwind

ST_7: X_MAX_read [1/1] 1.00ns
_ifconv:13  %X_MAX_read = call i10 @_ssdm_op_Read.s_axilite.i10(i10 %X_MAX) nounwind

ST_7: v_ref_read [1/1] 1.00ns
_ifconv:15  %v_ref_read = call float @_ssdm_op_Read.s_axilite.float(float %v_ref) nounwind

ST_7: e0_loc [5/5] 7.26ns
_ifconv:31  %e0_loc = fsub float %v_ref_read, %y


 <State 8>: 7.26ns
ST_8: e0_loc [4/5] 7.26ns
_ifconv:31  %e0_loc = fsub float %v_ref_read, %y


 <State 9>: 7.26ns
ST_9: e0_loc [3/5] 7.26ns
_ifconv:31  %e0_loc = fsub float %v_ref_read, %y


 <State 10>: 7.26ns
ST_10: e0_loc [2/5] 7.26ns
_ifconv:31  %e0_loc = fsub float %v_ref_read, %y


 <State 11>: 7.26ns
ST_11: e0_loc [1/5] 7.26ns
_ifconv:31  %e0_loc = fsub float %v_ref_read, %y


 <State 12>: 5.70ns
ST_12: e0_load [1/1] 0.00ns
_ifconv:28  %e0_load = load float* @e0, align 4

ST_12: stg_48 [1/1] 0.00ns
_ifconv:32  store float %e0_loc, float* @e0, align 4

ST_12: tmp_s [4/4] 5.70ns
_ifconv:33  %tmp_s = fmul float %e0_loc, %b0_read

ST_12: tmp_1 [4/4] 5.70ns
_ifconv:34  %tmp_1 = fmul float %e0_load, %b1_read


 <State 13>: 5.70ns
ST_13: tmp_s [3/4] 5.70ns
_ifconv:33  %tmp_s = fmul float %e0_loc, %b0_read

ST_13: tmp_1 [3/4] 5.70ns
_ifconv:34  %tmp_1 = fmul float %e0_load, %b1_read


 <State 14>: 5.70ns
ST_14: tmp_s [2/4] 5.70ns
_ifconv:33  %tmp_s = fmul float %e0_loc, %b0_read

ST_14: tmp_1 [2/4] 5.70ns
_ifconv:34  %tmp_1 = fmul float %e0_load, %b1_read


 <State 15>: 5.70ns
ST_15: tmp_s [1/4] 5.70ns
_ifconv:33  %tmp_s = fmul float %e0_loc, %b0_read

ST_15: tmp_1 [1/4] 5.70ns
_ifconv:34  %tmp_1 = fmul float %e0_load, %b1_read


 <State 16>: 7.26ns
ST_16: tmp_2 [5/5] 7.26ns
_ifconv:35  %tmp_2 = fadd float %tmp_s, %tmp_1


 <State 17>: 7.26ns
ST_17: tmp_2 [4/5] 7.26ns
_ifconv:35  %tmp_2 = fadd float %tmp_s, %tmp_1


 <State 18>: 7.26ns
ST_18: tmp_2 [3/5] 7.26ns
_ifconv:35  %tmp_2 = fadd float %tmp_s, %tmp_1


 <State 19>: 7.26ns
ST_19: tmp_2 [2/5] 7.26ns
_ifconv:35  %tmp_2 = fadd float %tmp_s, %tmp_1


 <State 20>: 7.26ns
ST_20: tmp_2 [1/5] 7.26ns
_ifconv:35  %tmp_2 = fadd float %tmp_s, %tmp_1


 <State 21>: 7.26ns
ST_21: tmp [1/1] 0.00ns
_ifconv:16  %tmp = zext i10 %X_MAX_read to i32

ST_21: x0_load [1/1] 0.00ns
_ifconv:27  %x0_load = load float* @x0, align 4

ST_21: tmp_3 [5/5] 7.26ns
_ifconv:36  %tmp_3 = fadd float %tmp_2, %x0_load

ST_21: tmp_6 [6/6] 6.41ns
_ifconv:46  %tmp_6 = sitofp i32 %tmp to float


 <State 22>: 7.26ns
ST_22: tmp_3 [4/5] 7.26ns
_ifconv:36  %tmp_3 = fadd float %tmp_2, %x0_load

ST_22: tmp_6 [5/6] 6.41ns
_ifconv:46  %tmp_6 = sitofp i32 %tmp to float


 <State 23>: 7.26ns
ST_23: tmp_3 [3/5] 7.26ns
_ifconv:36  %tmp_3 = fadd float %tmp_2, %x0_load

ST_23: tmp_6 [4/6] 6.41ns
_ifconv:46  %tmp_6 = sitofp i32 %tmp to float


 <State 24>: 7.26ns
ST_24: tmp_3 [2/5] 7.26ns
_ifconv:36  %tmp_3 = fadd float %tmp_2, %x0_load

ST_24: tmp_6 [3/6] 6.41ns
_ifconv:46  %tmp_6 = sitofp i32 %tmp to float


 <State 25>: 7.26ns
ST_25: tmp_3 [1/5] 7.26ns
_ifconv:36  %tmp_3 = fadd float %tmp_2, %x0_load

ST_25: tmp_6 [2/6] 6.41ns
_ifconv:46  %tmp_6 = sitofp i32 %tmp to float


 <State 26>: 8.16ns
ST_26: tmp_3_to_int [1/1] 0.00ns
_ifconv:37  %tmp_3_to_int = bitcast float %tmp_3 to i32

ST_26: tmp_4 [1/1] 0.00ns
_ifconv:38  %tmp_4 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %tmp_3_to_int, i32 23, i32 30)

ST_26: tmp_7 [1/1] 0.00ns
_ifconv:39  %tmp_7 = trunc i32 %tmp_3_to_int to i23

ST_26: notlhs [1/1] 2.00ns
_ifconv:40  %notlhs = icmp ne i8 %tmp_4, -1

ST_26: notrhs [1/1] 2.39ns
_ifconv:41  %notrhs = icmp eq i23 %tmp_7, 0

ST_26: tmp_8 [1/1] 1.37ns
_ifconv:42  %tmp_8 = or i1 %notrhs, %notlhs

ST_26: tmp_9 [1/1] 6.79ns
_ifconv:43  %tmp_9 = fcmp ogt float %tmp_3, 0.000000e+00

ST_26: tmp_10 [1/1] 1.37ns
_ifconv:44  %tmp_10 = and i1 %tmp_8, %tmp_9

ST_26: tmp_6 [1/6] 6.41ns
_ifconv:46  %tmp_6 = sitofp i32 %tmp to float


 <State 27>: 8.16ns
ST_27: tmp_5 [1/1] 1.37ns
_ifconv:45  %tmp_5 = select i1 %tmp_10, float %tmp_3, float 0.000000e+00

ST_27: tmp_5_to_int [1/1] 0.00ns
_ifconv:47  %tmp_5_to_int = bitcast float %tmp_5 to i32

ST_27: tmp_11 [1/1] 0.00ns
_ifconv:48  %tmp_11 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %tmp_5_to_int, i32 23, i32 30)

ST_27: tmp_12 [1/1] 0.00ns
_ifconv:49  %tmp_12 = trunc i32 %tmp_5_to_int to i23

ST_27: tmp_6_to_int [1/1] 0.00ns
_ifconv:50  %tmp_6_to_int = bitcast float %tmp_6 to i32

ST_27: tmp_13 [1/1] 0.00ns
_ifconv:51  %tmp_13 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %tmp_6_to_int, i32 23, i32 30)

ST_27: tmp_14 [1/1] 0.00ns
_ifconv:52  %tmp_14 = trunc i32 %tmp_6_to_int to i23

ST_27: notlhs3 [1/1] 2.00ns
_ifconv:53  %notlhs3 = icmp ne i8 %tmp_11, -1

ST_27: notrhs4 [1/1] 2.39ns
_ifconv:54  %notrhs4 = icmp eq i23 %tmp_12, 0

ST_27: tmp_15 [1/1] 1.37ns
_ifconv:55  %tmp_15 = or i1 %notrhs4, %notlhs3

ST_27: notlhs5 [1/1] 2.00ns
_ifconv:56  %notlhs5 = icmp ne i8 %tmp_13, -1

ST_27: notrhs6 [1/1] 2.39ns
_ifconv:57  %notrhs6 = icmp eq i23 %tmp_14, 0

ST_27: tmp_16 [1/1] 1.37ns
_ifconv:58  %tmp_16 = or i1 %notrhs6, %notlhs5

ST_27: tmp_17 [1/1] 1.37ns
_ifconv:59  %tmp_17 = and i1 %tmp_15, %tmp_16

ST_27: tmp_18 [1/1] 6.79ns
_ifconv:60  %tmp_18 = fcmp olt float %tmp_5, %tmp_6


 <State 28>: 8.61ns
ST_28: tmp_19 [1/1] 1.37ns
_ifconv:61  %tmp_19 = and i1 %tmp_17, %tmp_18

ST_28: x_assign [1/1] 1.37ns
_ifconv:62  %x_assign = select i1 %tmp_19, float %tmp_5, float %tmp_6

ST_28: stg_100 [1/1] 0.00ns
_ifconv:63  store float %x_assign, float* @x0, align 4

ST_28: p_Val2_s [1/1] 0.00ns
_ifconv:64  %p_Val2_s = bitcast float %x_assign to i32

ST_28: loc_V [1/1] 0.00ns
_ifconv:65  %loc_V = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %p_Val2_s, i32 23, i32 30) nounwind

ST_28: loc_V_1 [1/1] 0.00ns
_ifconv:66  %loc_V_1 = trunc i32 %p_Val2_s to i23

ST_28: p_Result_s [1/1] 0.00ns
_ifconv:67  %p_Result_s = call i24 @_ssdm_op_BitConcatenate.i24.i1.i23(i1 true, i23 %loc_V_1) nounwind

ST_28: tmp_2_i_i [1/1] 0.00ns
_ifconv:68  %tmp_2_i_i = zext i24 %p_Result_s to i62

ST_28: tmp_i_i_i_cast1 [1/1] 0.00ns
_ifconv:69  %tmp_i_i_i_cast1 = zext i8 %loc_V to i9

ST_28: sh_assign [1/1] 1.72ns
_ifconv:70  %sh_assign = add i9 -127, %tmp_i_i_i_cast1

ST_28: isNeg [1/1] 0.00ns
_ifconv:71  %isNeg = call i1 @_ssdm_op_BitSelect.i1.i9.i32(i9 %sh_assign, i32 8)

ST_28: tmp_4_i_i [1/1] 1.72ns
_ifconv:72  %tmp_4_i_i = sub i8 127, %loc_V

ST_28: tmp_4_i_i_cast [1/1] 0.00ns
_ifconv:73  %tmp_4_i_i_cast = sext i8 %tmp_4_i_i to i9

ST_28: sh_assign_1 [1/1] 1.37ns
_ifconv:74  %sh_assign_1 = select i1 %isNeg, i9 %tmp_4_i_i_cast, i9 %sh_assign

ST_28: sh_assign_1_cast [1/1] 0.00ns
_ifconv:75  %sh_assign_1_cast = sext i9 %sh_assign_1 to i32

ST_28: sh_assign_1_cast_cast [1/1] 0.00ns
_ifconv:76  %sh_assign_1_cast_cast = sext i9 %sh_assign_1 to i24

ST_28: tmp_6_i_i [1/1] 0.00ns
_ifconv:77  %tmp_6_i_i = zext i32 %sh_assign_1_cast to i62

ST_28: tmp_7_i_i [1/1] 2.78ns
_ifconv:78  %tmp_7_i_i = lshr i24 %p_Result_s, %sh_assign_1_cast_cast

ST_28: tmp_9_i_i [1/1] 2.78ns
_ifconv:79  %tmp_9_i_i = shl i62 %tmp_2_i_i, %tmp_6_i_i

ST_28: tmp_25 [1/1] 0.00ns
_ifconv:80  %tmp_25 = call i1 @_ssdm_op_BitSelect.i1.i24.i32(i24 %tmp_7_i_i, i32 23)

ST_28: tmp_21 [1/1] 0.00ns
_ifconv:82  %tmp_21 = call i10 @_ssdm_op_PartSelect.i10.i62.i32.i32(i62 %tmp_9_i_i, i32 23, i32 32)


 <State 29>: 2.37ns
ST_29: stg_119 [1/1] 0.00ns
_ifconv:0  call void (...)* @_ssdm_op_SpecBitsMap(float %v_ref) nounwind, !map !7

ST_29: stg_120 [1/1] 0.00ns
_ifconv:1  call void (...)* @_ssdm_op_SpecBitsMap(i12 %v_meas) nounwind, !map !13

ST_29: stg_121 [1/1] 0.00ns
_ifconv:2  call void (...)* @_ssdm_op_SpecBitsMap(i10 %X_MAX) nounwind, !map !17

ST_29: stg_122 [1/1] 0.00ns
_ifconv:3  call void (...)* @_ssdm_op_SpecBitsMap(float %b0) nounwind, !map !21

ST_29: stg_123 [1/1] 0.00ns
_ifconv:4  call void (...)* @_ssdm_op_SpecBitsMap(float %b1) nounwind, !map !25

ST_29: stg_124 [1/1] 0.00ns
_ifconv:5  call void (...)* @_ssdm_op_SpecBitsMap(i10* %u) nounwind, !map !29

ST_29: stg_125 [1/1] 0.00ns
_ifconv:6  call void (...)* @_ssdm_op_SpecBitsMap(float* %yVmeasDbg) nounwind, !map !33

ST_29: stg_126 [1/1] 0.00ns
_ifconv:7  call void (...)* @_ssdm_op_SpecBitsMap(float* %yDbg) nounwind, !map !37

ST_29: stg_127 [1/1] 0.00ns
_ifconv:8  call void (...)* @_ssdm_op_SpecBitsMap(float* %eDbg) nounwind, !map !41

ST_29: stg_128 [1/1] 0.00ns
_ifconv:9  call void (...)* @_ssdm_op_SpecBitsMap(i10* %uDbg) nounwind, !map !45

ST_29: stg_129 [1/1] 0.00ns
_ifconv:10  call void (...)* @_ssdm_op_SpecTopModule([22 x i8]* @PI_compensator_DiffEq_str) nounwind

ST_29: stg_130 [1/1] 0.00ns
_ifconv:17  call void (...)* @_ssdm_op_SpecInterface(i10 %X_MAX, [10 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_29: stg_131 [1/1] 0.00ns
_ifconv:18  call void (...)* @_ssdm_op_SpecInterface(i12 %v_meas, [8 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_29: stg_132 [1/1] 0.00ns
_ifconv:19  call void (...)* @_ssdm_op_SpecInterface(float %b1, [10 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_29: stg_133 [1/1] 0.00ns
_ifconv:20  call void (...)* @_ssdm_op_SpecInterface(float %b0, [10 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_29: stg_134 [1/1] 0.00ns
_ifconv:21  call void (...)* @_ssdm_op_SpecInterface(float %v_ref, [10 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_29: stg_135 [1/1] 0.00ns
_ifconv:22  call void (...)* @_ssdm_op_SpecInterface(float* %yVmeasDbg, [10 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_29: stg_136 [1/1] 0.00ns
_ifconv:23  call void (...)* @_ssdm_op_SpecInterface(float* %eDbg, [10 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_29: stg_137 [1/1] 0.00ns
_ifconv:24  call void (...)* @_ssdm_op_SpecInterface(i10* %uDbg, [10 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_29: stg_138 [1/1] 0.00ns
_ifconv:25  call void (...)* @_ssdm_op_SpecInterface(float* %yDbg, [10 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_29: stg_139 [1/1] 0.00ns
_ifconv:26  call void (...)* @_ssdm_op_SpecInterface(i10* %u, [8 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_29: tmp_20 [1/1] 0.00ns
_ifconv:81  %tmp_20 = zext i1 %tmp_25 to i10

ST_29: tmp_22 [1/1] 1.37ns
_ifconv:83  %tmp_22 = select i1 %isNeg, i10 %tmp_20, i10 %tmp_21

ST_29: stg_142 [1/1] 0.00ns
_ifconv:84  call void @_ssdm_op_Write.ap_none.i10P(i10* %u, i10 %tmp_22) nounwind

ST_29: stg_143 [1/1] 1.00ns
_ifconv:85  call void @_ssdm_op_Write.s_axilite.floatP(float* %yVmeasDbg, float %y) nounwind

ST_29: stg_144 [1/1] 1.00ns
_ifconv:86  call void @_ssdm_op_Write.s_axilite.floatP(float* %yDbg, float %y) nounwind

ST_29: stg_145 [1/1] 1.00ns
_ifconv:87  call void @_ssdm_op_Write.s_axilite.floatP(float* %eDbg, float %e0_loc) nounwind

ST_29: stg_146 [1/1] 1.00ns
_ifconv:88  call void @_ssdm_op_Write.s_axilite.i10P(i10* %uDbg, i10 %tmp_22) nounwind

ST_29: stg_147 [1/1] 0.00ns
_ifconv:89  ret void



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
