// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "Dig_compensator.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Dig_compensator::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Dig_compensator::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<52> Dig_compensator::ap_ST_st1_fsm_0 = "1";
const sc_lv<52> Dig_compensator::ap_ST_st2_fsm_1 = "10";
const sc_lv<52> Dig_compensator::ap_ST_st3_fsm_2 = "100";
const sc_lv<52> Dig_compensator::ap_ST_st4_fsm_3 = "1000";
const sc_lv<52> Dig_compensator::ap_ST_st5_fsm_4 = "10000";
const sc_lv<52> Dig_compensator::ap_ST_st6_fsm_5 = "100000";
const sc_lv<52> Dig_compensator::ap_ST_st7_fsm_6 = "1000000";
const sc_lv<52> Dig_compensator::ap_ST_st8_fsm_7 = "10000000";
const sc_lv<52> Dig_compensator::ap_ST_st9_fsm_8 = "100000000";
const sc_lv<52> Dig_compensator::ap_ST_st10_fsm_9 = "1000000000";
const sc_lv<52> Dig_compensator::ap_ST_st11_fsm_10 = "10000000000";
const sc_lv<52> Dig_compensator::ap_ST_st12_fsm_11 = "100000000000";
const sc_lv<52> Dig_compensator::ap_ST_st13_fsm_12 = "1000000000000";
const sc_lv<52> Dig_compensator::ap_ST_st14_fsm_13 = "10000000000000";
const sc_lv<52> Dig_compensator::ap_ST_st15_fsm_14 = "100000000000000";
const sc_lv<52> Dig_compensator::ap_ST_st16_fsm_15 = "1000000000000000";
const sc_lv<52> Dig_compensator::ap_ST_st17_fsm_16 = "10000000000000000";
const sc_lv<52> Dig_compensator::ap_ST_st18_fsm_17 = "100000000000000000";
const sc_lv<52> Dig_compensator::ap_ST_st19_fsm_18 = "1000000000000000000";
const sc_lv<52> Dig_compensator::ap_ST_st20_fsm_19 = "10000000000000000000";
const sc_lv<52> Dig_compensator::ap_ST_st21_fsm_20 = "100000000000000000000";
const sc_lv<52> Dig_compensator::ap_ST_st22_fsm_21 = "1000000000000000000000";
const sc_lv<52> Dig_compensator::ap_ST_st23_fsm_22 = "10000000000000000000000";
const sc_lv<52> Dig_compensator::ap_ST_st24_fsm_23 = "100000000000000000000000";
const sc_lv<52> Dig_compensator::ap_ST_st25_fsm_24 = "1000000000000000000000000";
const sc_lv<52> Dig_compensator::ap_ST_st26_fsm_25 = "10000000000000000000000000";
const sc_lv<52> Dig_compensator::ap_ST_st27_fsm_26 = "100000000000000000000000000";
const sc_lv<52> Dig_compensator::ap_ST_st28_fsm_27 = "1000000000000000000000000000";
const sc_lv<52> Dig_compensator::ap_ST_st29_fsm_28 = "10000000000000000000000000000";
const sc_lv<52> Dig_compensator::ap_ST_st30_fsm_29 = "100000000000000000000000000000";
const sc_lv<52> Dig_compensator::ap_ST_st31_fsm_30 = "1000000000000000000000000000000";
const sc_lv<52> Dig_compensator::ap_ST_st32_fsm_31 = "10000000000000000000000000000000";
const sc_lv<52> Dig_compensator::ap_ST_st33_fsm_32 = "100000000000000000000000000000000";
const sc_lv<52> Dig_compensator::ap_ST_st34_fsm_33 = "1000000000000000000000000000000000";
const sc_lv<52> Dig_compensator::ap_ST_st35_fsm_34 = "10000000000000000000000000000000000";
const sc_lv<52> Dig_compensator::ap_ST_st36_fsm_35 = "100000000000000000000000000000000000";
const sc_lv<52> Dig_compensator::ap_ST_st37_fsm_36 = "1000000000000000000000000000000000000";
const sc_lv<52> Dig_compensator::ap_ST_st38_fsm_37 = "10000000000000000000000000000000000000";
const sc_lv<52> Dig_compensator::ap_ST_st39_fsm_38 = "100000000000000000000000000000000000000";
const sc_lv<52> Dig_compensator::ap_ST_st40_fsm_39 = "1000000000000000000000000000000000000000";
const sc_lv<52> Dig_compensator::ap_ST_st41_fsm_40 = "10000000000000000000000000000000000000000";
const sc_lv<52> Dig_compensator::ap_ST_st42_fsm_41 = "100000000000000000000000000000000000000000";
const sc_lv<52> Dig_compensator::ap_ST_st43_fsm_42 = "1000000000000000000000000000000000000000000";
const sc_lv<52> Dig_compensator::ap_ST_st44_fsm_43 = "10000000000000000000000000000000000000000000";
const sc_lv<52> Dig_compensator::ap_ST_st45_fsm_44 = "100000000000000000000000000000000000000000000";
const sc_lv<52> Dig_compensator::ap_ST_st46_fsm_45 = "1000000000000000000000000000000000000000000000";
const sc_lv<52> Dig_compensator::ap_ST_st47_fsm_46 = "10000000000000000000000000000000000000000000000";
const sc_lv<52> Dig_compensator::ap_ST_st48_fsm_47 = "100000000000000000000000000000000000000000000000";
const sc_lv<52> Dig_compensator::ap_ST_st49_fsm_48 = "1000000000000000000000000000000000000000000000000";
const sc_lv<52> Dig_compensator::ap_ST_st50_fsm_49 = "10000000000000000000000000000000000000000000000000";
const sc_lv<52> Dig_compensator::ap_ST_st51_fsm_50 = "100000000000000000000000000000000000000000000000000";
const sc_lv<52> Dig_compensator::ap_ST_st52_fsm_51 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<32> Dig_compensator::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> Dig_compensator::ap_const_lv1_1 = "1";
const sc_lv<32> Dig_compensator::ap_const_lv32_B = "1011";
const sc_lv<32> Dig_compensator::ap_const_lv32_11 = "10001";
const sc_lv<32> Dig_compensator::ap_const_lv32_1B = "11011";
const sc_lv<32> Dig_compensator::ap_const_lv32_25 = "100101";
const sc_lv<32> Dig_compensator::ap_const_lv32_20 = "100000";
const sc_lv<32> Dig_compensator::ap_const_lv32_2E = "101110";
const sc_lv<32> Dig_compensator::ap_const_lv32_5 = "101";
const sc_lv<32> Dig_compensator::ap_const_lv32_12 = "10010";
const sc_lv<32> Dig_compensator::ap_const_lv32_13 = "10011";
const sc_lv<32> Dig_compensator::ap_const_lv32_17 = "10111";
const sc_lv<32> Dig_compensator::ap_const_lv32_18 = "11000";
const sc_lv<1> Dig_compensator::ap_const_lv1_0 = "0";
const sc_lv<32> Dig_compensator::ap_const_lv32_21 = "100001";
const sc_lv<32> Dig_compensator::ap_const_lv32_2A = "101010";
const sc_lv<32> Dig_compensator::ap_const_lv32_2F = "101111";
const sc_lv<32> Dig_compensator::ap_const_lv32_30 = "110000";
const sc_lv<32> Dig_compensator::ap_const_lv32_31 = "110001";
const sc_lv<32> Dig_compensator::ap_const_lv32_32 = "110010";
const sc_lv<32> Dig_compensator::ap_const_lv32_33 = "110011";
const sc_lv<3> Dig_compensator::ap_const_lv3_0 = "000";
const sc_lv<3> Dig_compensator::ap_const_lv3_1 = "1";
const sc_lv<2> Dig_compensator::ap_const_lv2_3 = "11";
const sc_lv<2> Dig_compensator::ap_const_lv2_2 = "10";
const sc_lv<2> Dig_compensator::ap_const_lv2_1 = "1";
const sc_lv<10> Dig_compensator::ap_const_lv10_0 = "0000000000";
const sc_lv<32> Dig_compensator::ap_const_lv32_1C = "11100";
const sc_lv<32> Dig_compensator::ap_const_lv32_26 = "100110";
const sc_lv<32> Dig_compensator::ap_const_lv32_22 = "100010";
const sc_lv<32> Dig_compensator::ap_const_lv32_44480000 = "1000100010010000000000000000000";
const sc_lv<64> Dig_compensator::ap_const_lv64_400A666666666666 = "100000000001010011001100110011001100110011001100110011001100110";
const sc_lv<64> Dig_compensator::ap_const_lv64_3F30000000000000 = "11111100110000000000000000000000000000000000000000000000000000";
const sc_lv<32> Dig_compensator::ap_const_lv32_6 = "110";
const sc_lv<32> Dig_compensator::ap_const_lv32_C = "1100";
const sc_lv<3> Dig_compensator::ap_const_lv3_4 = "100";
const sc_lv<32> Dig_compensator::ap_const_lv32_1E = "11110";
const sc_lv<8> Dig_compensator::ap_const_lv8_FF = "11111111";
const sc_lv<23> Dig_compensator::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<9> Dig_compensator::ap_const_lv9_181 = "110000001";
const sc_lv<32> Dig_compensator::ap_const_lv32_8 = "1000";
const sc_lv<8> Dig_compensator::ap_const_lv8_7F = "1111111";
const sc_lv<2> Dig_compensator::ap_const_lv2_0 = "00";
const sc_lv<5> Dig_compensator::ap_const_lv5_2 = "10";
const sc_lv<5> Dig_compensator::ap_const_lv5_4 = "100";

Dig_compensator::Dig_compensator(sc_module_name name) : sc_module(name), mVcdFile(0) {
    Dig_compensator_faddfsub_32ns_32ns_32_5_full_dsp_U0 = new Dig_compensator_faddfsub_32ns_32ns_32_5_full_dsp<1,5,32,32,32>("Dig_compensator_faddfsub_32ns_32ns_32_5_full_dsp_U0");
    Dig_compensator_faddfsub_32ns_32ns_32_5_full_dsp_U0->clk(ap_clk);
    Dig_compensator_faddfsub_32ns_32ns_32_5_full_dsp_U0->reset(ap_rst);
    Dig_compensator_faddfsub_32ns_32ns_32_5_full_dsp_U0->din0(grp_fu_240_p0);
    Dig_compensator_faddfsub_32ns_32ns_32_5_full_dsp_U0->din1(grp_fu_240_p1);
    Dig_compensator_faddfsub_32ns_32ns_32_5_full_dsp_U0->opcode(grp_fu_240_opcode);
    Dig_compensator_faddfsub_32ns_32ns_32_5_full_dsp_U0->ce(grp_fu_240_ce);
    Dig_compensator_faddfsub_32ns_32ns_32_5_full_dsp_U0->dout(grp_fu_240_p2);
    Dig_compensator_fmul_32ns_32ns_32_4_max_dsp_U1 = new Dig_compensator_fmul_32ns_32ns_32_4_max_dsp<1,4,32,32,32>("Dig_compensator_fmul_32ns_32ns_32_4_max_dsp_U1");
    Dig_compensator_fmul_32ns_32ns_32_4_max_dsp_U1->clk(ap_clk);
    Dig_compensator_fmul_32ns_32ns_32_4_max_dsp_U1->reset(ap_rst);
    Dig_compensator_fmul_32ns_32ns_32_4_max_dsp_U1->din0(grp_fu_248_p0);
    Dig_compensator_fmul_32ns_32ns_32_4_max_dsp_U1->din1(grp_fu_248_p1);
    Dig_compensator_fmul_32ns_32ns_32_4_max_dsp_U1->ce(grp_fu_248_ce);
    Dig_compensator_fmul_32ns_32ns_32_4_max_dsp_U1->dout(grp_fu_248_p2);
    Dig_compensator_fptrunc_64ns_32_1_U2 = new Dig_compensator_fptrunc_64ns_32_1<1,1,64,32>("Dig_compensator_fptrunc_64ns_32_1_U2");
    Dig_compensator_fptrunc_64ns_32_1_U2->din0(reg_278);
    Dig_compensator_fptrunc_64ns_32_1_U2->dout(v_measReal_fu_252_p1);
    Dig_compensator_fcmp_32ns_32ns_1_1_U3 = new Dig_compensator_fcmp_32ns_32ns_1_1<1,1,32,32,1>("Dig_compensator_fcmp_32ns_32ns_1_1_U3");
    Dig_compensator_fcmp_32ns_32ns_1_1_U3->din0(grp_fu_255_p0);
    Dig_compensator_fcmp_32ns_32ns_1_1_U3->din1(grp_fu_255_p1);
    Dig_compensator_fcmp_32ns_32ns_1_1_U3->opcode(grp_fu_255_opcode);
    Dig_compensator_fcmp_32ns_32ns_1_1_U3->dout(grp_fu_255_p2);
    Dig_compensator_dmul_64ns_64ns_64_6_max_dsp_U4 = new Dig_compensator_dmul_64ns_64ns_64_6_max_dsp<1,6,64,64,64>("Dig_compensator_dmul_64ns_64ns_64_6_max_dsp_U4");
    Dig_compensator_dmul_64ns_64ns_64_6_max_dsp_U4->clk(ap_clk);
    Dig_compensator_dmul_64ns_64ns_64_6_max_dsp_U4->reset(ap_rst);
    Dig_compensator_dmul_64ns_64ns_64_6_max_dsp_U4->din0(grp_fu_261_p0);
    Dig_compensator_dmul_64ns_64ns_64_6_max_dsp_U4->din1(grp_fu_261_p1);
    Dig_compensator_dmul_64ns_64ns_64_6_max_dsp_U4->ce(grp_fu_261_ce);
    Dig_compensator_dmul_64ns_64ns_64_6_max_dsp_U4->dout(grp_fu_261_p2);
    Dig_compensator_sitodp_32ns_64_6_U5 = new Dig_compensator_sitodp_32ns_64_6<1,6,32,64>("Dig_compensator_sitodp_32ns_64_6_U5");
    Dig_compensator_sitodp_32ns_64_6_U5->clk(ap_clk);
    Dig_compensator_sitodp_32ns_64_6_U5->reset(ap_rst);
    Dig_compensator_sitodp_32ns_64_6_U5->din0(grp_fu_267_p0);
    Dig_compensator_sitodp_32ns_64_6_U5->ce(grp_fu_267_ce);
    Dig_compensator_sitodp_32ns_64_6_U5->dout(grp_fu_267_p1);
    Dig_compensator_mux_4to1_sel2_32_1_U6 = new Dig_compensator_mux_4to1_sel2_32_1<1,1,32,32,32,32,2,32>("Dig_compensator_mux_4to1_sel2_32_1_U6");
    Dig_compensator_mux_4to1_sel2_32_1_U6->din1(params_b_0);
    Dig_compensator_mux_4to1_sel2_32_1_U6->din2(params_b_1);
    Dig_compensator_mux_4to1_sel2_32_1_U6->din3(params_b_2);
    Dig_compensator_mux_4to1_sel2_32_1_U6->din4(params_b_3);
    Dig_compensator_mux_4to1_sel2_32_1_U6->din5(tmp_8_fu_312_p1);
    Dig_compensator_mux_4to1_sel2_32_1_U6->dout(tmp_fu_316_p6);
    Dig_compensator_mux_4to1_sel2_32_1_U7 = new Dig_compensator_mux_4to1_sel2_32_1<1,1,32,32,32,32,2,32>("Dig_compensator_mux_4to1_sel2_32_1_U7");
    Dig_compensator_mux_4to1_sel2_32_1_U7->din1(e_reg_797);
    Dig_compensator_mux_4to1_sel2_32_1_U7->din2(e_1);
    Dig_compensator_mux_4to1_sel2_32_1_U7->din3(e_2);
    Dig_compensator_mux_4to1_sel2_32_1_U7->din4(e_3);
    Dig_compensator_mux_4to1_sel2_32_1_U7->din5(tmp_8_fu_312_p1);
    Dig_compensator_mux_4to1_sel2_32_1_U7->dout(tmp_4_fu_331_p6);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_sig_cseq_ST_st52_fsm_51 );
    sensitive << ( tmp_13_fu_636_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st52_fsm_51 );
    sensitive << ( tmp_13_fu_636_p2 );

    SC_METHOD(thread_ap_sig_bdd_106);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_116);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_123);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_133);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_140);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_155);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_164);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_173);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_182);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_204);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_229);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_244);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_253);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_262);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_271);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_280);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_289);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_356);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_364);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_374);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_389);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_396);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_68);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_99);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st12_fsm_11);
    sensitive << ( ap_sig_bdd_99 );

    SC_METHOD(thread_ap_sig_cseq_ST_st13_fsm_12);
    sensitive << ( ap_sig_bdd_396 );

    SC_METHOD(thread_ap_sig_cseq_ST_st18_fsm_17);
    sensitive << ( ap_sig_bdd_106 );

    SC_METHOD(thread_ap_sig_cseq_ST_st19_fsm_18);
    sensitive << ( ap_sig_bdd_164 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_68 );

    SC_METHOD(thread_ap_sig_cseq_ST_st20_fsm_19);
    sensitive << ( ap_sig_bdd_173 );

    SC_METHOD(thread_ap_sig_cseq_ST_st24_fsm_23);
    sensitive << ( ap_sig_bdd_182 );

    SC_METHOD(thread_ap_sig_cseq_ST_st25_fsm_24);
    sensitive << ( ap_sig_bdd_204 );

    SC_METHOD(thread_ap_sig_cseq_ST_st28_fsm_27);
    sensitive << ( ap_sig_bdd_116 );

    SC_METHOD(thread_ap_sig_cseq_ST_st29_fsm_28);
    sensitive << ( ap_sig_bdd_356 );

    SC_METHOD(thread_ap_sig_cseq_ST_st33_fsm_32);
    sensitive << ( ap_sig_bdd_133 );

    SC_METHOD(thread_ap_sig_cseq_ST_st34_fsm_33);
    sensitive << ( ap_sig_bdd_229 );

    SC_METHOD(thread_ap_sig_cseq_ST_st35_fsm_34);
    sensitive << ( ap_sig_bdd_374 );

    SC_METHOD(thread_ap_sig_cseq_ST_st38_fsm_37);
    sensitive << ( ap_sig_bdd_123 );

    SC_METHOD(thread_ap_sig_cseq_ST_st39_fsm_38);
    sensitive << ( ap_sig_bdd_364 );

    SC_METHOD(thread_ap_sig_cseq_ST_st43_fsm_42);
    sensitive << ( ap_sig_bdd_244 );

    SC_METHOD(thread_ap_sig_cseq_ST_st47_fsm_46);
    sensitive << ( ap_sig_bdd_140 );

    SC_METHOD(thread_ap_sig_cseq_ST_st48_fsm_47);
    sensitive << ( ap_sig_bdd_253 );

    SC_METHOD(thread_ap_sig_cseq_ST_st49_fsm_48);
    sensitive << ( ap_sig_bdd_262 );

    SC_METHOD(thread_ap_sig_cseq_ST_st50_fsm_49);
    sensitive << ( ap_sig_bdd_271 );

    SC_METHOD(thread_ap_sig_cseq_ST_st51_fsm_50);
    sensitive << ( ap_sig_bdd_280 );

    SC_METHOD(thread_ap_sig_cseq_ST_st52_fsm_51);
    sensitive << ( ap_sig_bdd_289 );

    SC_METHOD(thread_ap_sig_cseq_ST_st6_fsm_5);
    sensitive << ( ap_sig_bdd_155 );

    SC_METHOD(thread_ap_sig_cseq_ST_st7_fsm_6);
    sensitive << ( ap_sig_bdd_389 );

    SC_METHOD(thread_e_load_1_phi_fu_668_p3);
    sensitive << ( e_reg_797 );
    sensitive << ( sel_tmp4_fu_662_p2 );
    sensitive << ( sel_tmp3_fu_654_p3 );

    SC_METHOD(thread_exitcond1_fu_300_p2);
    sensitive << ( ap_sig_cseq_ST_st25_fsm_24 );
    sensitive << ( i_reg_183 );

    SC_METHOD(thread_exitcond_fu_357_p2);
    sensitive << ( ap_sig_cseq_ST_st34_fsm_33 );
    sensitive << ( i_1_reg_206 );

    SC_METHOD(thread_grp_fu_240_ce);

    SC_METHOD(thread_grp_fu_240_opcode);
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );
    sensitive << ( ap_sig_cseq_ST_st34_fsm_33 );
    sensitive << ( exitcond_fu_357_p2 );
    sensitive << ( ap_sig_cseq_ST_st29_fsm_28 );
    sensitive << ( ap_sig_cseq_ST_st39_fsm_38 );

    SC_METHOD(thread_grp_fu_240_p0);
    sensitive << ( params_vRef );
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );
    sensitive << ( ap_sig_cseq_ST_st34_fsm_33 );
    sensitive << ( num_reg_194 );
    sensitive << ( den_reg_217 );
    sensitive << ( ap_sig_cseq_ST_st29_fsm_28 );
    sensitive << ( ap_sig_cseq_ST_st39_fsm_38 );

    SC_METHOD(thread_grp_fu_240_p1);
    sensitive << ( reg_284 );
    sensitive << ( v_measReal_reg_752 );
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );
    sensitive << ( ap_sig_cseq_ST_st34_fsm_33 );
    sensitive << ( den_reg_217 );
    sensitive << ( ap_sig_cseq_ST_st29_fsm_28 );
    sensitive << ( ap_sig_cseq_ST_st39_fsm_38 );

    SC_METHOD(thread_grp_fu_248_ce);

    SC_METHOD(thread_grp_fu_248_p0);
    sensitive << ( ap_sig_cseq_ST_st25_fsm_24 );
    sensitive << ( tmp_fu_316_p6 );
    sensitive << ( params_a_load_phi_reg_841 );
    sensitive << ( ap_sig_cseq_ST_st35_fsm_34 );

    SC_METHOD(thread_grp_fu_248_p1);
    sensitive << ( ap_sig_cseq_ST_st25_fsm_24 );
    sensitive << ( tmp_4_fu_331_p6 );
    sensitive << ( y_load_phi_reg_846 );
    sensitive << ( ap_sig_cseq_ST_st35_fsm_34 );

    SC_METHOD(thread_grp_fu_255_opcode);
    sensitive << ( ap_sig_cseq_ST_st48_fsm_47 );
    sensitive << ( ap_sig_cseq_ST_st50_fsm_49 );

    SC_METHOD(thread_grp_fu_255_p0);
    sensitive << ( reg_289 );
    sensitive << ( ap_sig_cseq_ST_st48_fsm_47 );
    sensitive << ( tmp_9_reg_880 );
    sensitive << ( ap_sig_cseq_ST_st50_fsm_49 );

    SC_METHOD(thread_grp_fu_255_p1);
    sensitive << ( ap_sig_cseq_ST_st48_fsm_47 );
    sensitive << ( ap_sig_cseq_ST_st50_fsm_49 );

    SC_METHOD(thread_grp_fu_261_ce);

    SC_METHOD(thread_grp_fu_261_p0);
    sensitive << ( reg_278 );
    sensitive << ( tmp_1_reg_747 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );

    SC_METHOD(thread_grp_fu_261_p1);
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );

    SC_METHOD(thread_grp_fu_267_ce);

    SC_METHOD(thread_grp_fu_267_p0);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( v_meas );

    SC_METHOD(thread_i_2_phi_fu_233_p4);
    sensitive << ( i_2_reg_229 );

    SC_METHOD(thread_i_3_fu_306_p2);
    sensitive << ( i_reg_183 );

    SC_METHOD(thread_i_4_fu_405_p2);
    sensitive << ( i_1_reg_206 );

    SC_METHOD(thread_i_5_fu_642_p2);
    sensitive << ( i_2_reg_229 );

    SC_METHOD(thread_isNeg_fu_555_p3);
    sensitive << ( sh_assign_fu_549_p2 );

    SC_METHOD(thread_loc_V_1_fu_529_p1);
    sensitive << ( p_Val2_s_fu_515_p1 );

    SC_METHOD(thread_loc_V_fu_519_p4);
    sensitive << ( p_Val2_s_fu_515_p1 );

    SC_METHOD(thread_notlhs1_fu_485_p2);
    sensitive << ( ap_sig_cseq_ST_st50_fsm_49 );
    sensitive << ( tmp_15_fu_471_p4 );

    SC_METHOD(thread_notlhs_fu_437_p2);
    sensitive << ( ap_sig_cseq_ST_st49_fsm_48 );
    sensitive << ( tmp_5_fu_423_p4 );

    SC_METHOD(thread_notrhs1_fu_491_p2);
    sensitive << ( ap_sig_cseq_ST_st50_fsm_49 );
    sensitive << ( tmp_20_fu_481_p1 );

    SC_METHOD(thread_notrhs_fu_443_p2);
    sensitive << ( ap_sig_cseq_ST_st49_fsm_48 );
    sensitive << ( tmp_16_fu_433_p1 );

    SC_METHOD(thread_p_Result_s_fu_533_p3);
    sensitive << ( loc_V_1_fu_529_p1 );

    SC_METHOD(thread_p_Val2_s_fu_515_p1);
    sensitive << ( x_assign_fu_509_p3 );

    SC_METHOD(thread_params_a_load_phi_fu_385_p3);
    sensitive << ( params_a_1 );
    sensitive << ( sel_tmp2_fu_379_p2 );
    sensitive << ( sel_tmp1_fu_373_p3 );

    SC_METHOD(thread_sel_tmp1_fu_373_p3);
    sensitive << ( params_a_2 );
    sensitive << ( params_a_3 );
    sensitive << ( sel_tmp_fu_367_p2 );

    SC_METHOD(thread_sel_tmp2_fu_379_p2);
    sensitive << ( ap_sig_cseq_ST_st34_fsm_33 );
    sensitive << ( exitcond_fu_357_p2 );
    sensitive << ( tmp_27_fu_363_p1 );

    SC_METHOD(thread_sel_tmp3_fu_654_p3);
    sensitive << ( e_1 );
    sensitive << ( e_2 );
    sensitive << ( sel_tmp9_fu_648_p2 );

    SC_METHOD(thread_sel_tmp4_fu_662_p2);
    sensitive << ( i_5_fu_642_p2 );
    sensitive << ( ap_sig_cseq_ST_st52_fsm_51 );
    sensitive << ( tmp_13_fu_636_p2 );

    SC_METHOD(thread_sel_tmp5_fu_392_p3);
    sensitive << ( y_3_load_reg_821 );
    sensitive << ( y_2_load_reg_832 );
    sensitive << ( sel_tmp_fu_367_p2 );

    SC_METHOD(thread_sel_tmp6_fu_699_p3);
    sensitive << ( y_2_load_1_fu_114 );
    sensitive << ( y_1_load_1_fu_118 );
    sensitive << ( sel_tmp9_fu_648_p2 );

    SC_METHOD(thread_sel_tmp9_fu_648_p2);
    sensitive << ( i_5_fu_642_p2 );
    sensitive << ( ap_sig_cseq_ST_st52_fsm_51 );
    sensitive << ( tmp_13_fu_636_p2 );

    SC_METHOD(thread_sel_tmp_fu_367_p2);
    sensitive << ( ap_sig_cseq_ST_st34_fsm_33 );
    sensitive << ( exitcond_fu_357_p2 );
    sensitive << ( tmp_27_fu_363_p1 );

    SC_METHOD(thread_sh_assign_1_cast_cast_fu_585_p1);
    sensitive << ( sh_assign_1_fu_573_p3 );

    SC_METHOD(thread_sh_assign_1_cast_fu_581_p1);
    sensitive << ( sh_assign_1_fu_573_p3 );

    SC_METHOD(thread_sh_assign_1_fu_573_p3);
    sensitive << ( sh_assign_fu_549_p2 );
    sensitive << ( isNeg_fu_555_p3 );
    sensitive << ( tmp_4_i_i_cast_fu_569_p1 );

    SC_METHOD(thread_sh_assign_fu_549_p2);
    sensitive << ( tmp_i_i_i_cast_fu_545_p1 );

    SC_METHOD(thread_tmp_10_fu_449_p2);
    sensitive << ( notrhs_fu_443_p2 );
    sensitive << ( notlhs_fu_437_p2 );

    SC_METHOD(thread_tmp_12_fu_455_p2);
    sensitive << ( tmp_11_reg_875 );
    sensitive << ( tmp_10_fu_449_p2 );

    SC_METHOD(thread_tmp_13_fu_636_p2);
    sensitive << ( ap_sig_cseq_ST_st52_fsm_51 );
    sensitive << ( i_2_reg_229 );

    SC_METHOD(thread_tmp_15_fu_471_p4);
    sensitive << ( tmp_9_to_int_fu_468_p1 );

    SC_METHOD(thread_tmp_16_fu_433_p1);
    sensitive << ( tmp_7_to_int_fu_419_p1 );

    SC_METHOD(thread_tmp_17_fu_497_p2);
    sensitive << ( notrhs1_fu_491_p2 );
    sensitive << ( notlhs1_fu_485_p2 );

    SC_METHOD(thread_tmp_19_fu_503_p2);
    sensitive << ( grp_fu_255_p2 );
    sensitive << ( tmp_17_fu_497_p2 );

    SC_METHOD(thread_tmp_20_fu_481_p1);
    sensitive << ( tmp_9_to_int_fu_468_p1 );

    SC_METHOD(thread_tmp_21_fu_613_p1);
    sensitive << ( tmp_26_fu_605_p3 );

    SC_METHOD(thread_tmp_22_fu_617_p4);
    sensitive << ( tmp_9_i_i_fu_599_p2 );

    SC_METHOD(thread_tmp_23_fu_627_p3);
    sensitive << ( isNeg_fu_555_p3 );
    sensitive << ( tmp_21_fu_613_p1 );
    sensitive << ( tmp_22_fu_617_p4 );

    SC_METHOD(thread_tmp_26_fu_605_p3);
    sensitive << ( tmp_7_i_i_fu_593_p2 );

    SC_METHOD(thread_tmp_27_fu_363_p1);
    sensitive << ( i_1_reg_206 );

    SC_METHOD(thread_tmp_2_i_i_fu_541_p1);
    sensitive << ( p_Result_s_fu_533_p3 );

    SC_METHOD(thread_tmp_4_i_i_cast_fu_569_p1);
    sensitive << ( tmp_4_i_i_fu_563_p2 );

    SC_METHOD(thread_tmp_4_i_i_fu_563_p2);
    sensitive << ( loc_V_fu_519_p4 );

    SC_METHOD(thread_tmp_5_fu_423_p4);
    sensitive << ( tmp_7_to_int_fu_419_p1 );

    SC_METHOD(thread_tmp_6_i_i_fu_589_p1);
    sensitive << ( sh_assign_1_cast_fu_581_p1 );

    SC_METHOD(thread_tmp_7_i_i_fu_593_p2);
    sensitive << ( p_Result_s_fu_533_p3 );
    sensitive << ( sh_assign_1_cast_cast_fu_585_p1 );

    SC_METHOD(thread_tmp_7_to_int_fu_419_p1);
    sensitive << ( reg_289 );

    SC_METHOD(thread_tmp_8_fu_312_p1);
    sensitive << ( i_reg_183 );

    SC_METHOD(thread_tmp_9_fu_460_p3);
    sensitive << ( reg_289 );
    sensitive << ( tmp_12_fu_455_p2 );

    SC_METHOD(thread_tmp_9_i_i_fu_599_p2);
    sensitive << ( tmp_2_i_i_fu_541_p1 );
    sensitive << ( tmp_6_i_i_fu_589_p1 );

    SC_METHOD(thread_tmp_9_to_int_fu_468_p1);
    sensitive << ( tmp_9_reg_880 );

    SC_METHOD(thread_tmp_i_i_i_cast_fu_545_p1);
    sensitive << ( loc_V_fu_519_p4 );

    SC_METHOD(thread_u);
    sensitive << ( ap_sig_cseq_ST_st51_fsm_50 );
    sensitive << ( tmp_23_fu_627_p3 );
    sensitive << ( u_preg );

    SC_METHOD(thread_x_assign_fu_509_p3);
    sensitive << ( tmp_9_reg_880 );
    sensitive << ( tmp_19_reg_887 );

    SC_METHOD(thread_y_load_1_phi_fu_707_p3);
    sensitive << ( x_assign_reg_892 );
    sensitive << ( sel_tmp4_fu_662_p2 );
    sensitive << ( sel_tmp6_fu_699_p3 );

    SC_METHOD(thread_y_load_phi_fu_398_p3);
    sensitive << ( y_1_load_reg_826 );
    sensitive << ( sel_tmp2_fu_379_p2 );
    sensitive << ( sel_tmp5_fu_392_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond1_fu_300_p2 );
    sensitive << ( exitcond_fu_357_p2 );
    sensitive << ( tmp_13_fu_636_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "0000000000000000000000000000000000000000000000000001";
    y_3 = "00000000000000000000000000000000";
    y_1 = "00000000000000000000000000000000";
    y_2 = "00000000000000000000000000000000";
    e_1 = "00000000000000000000000000000000";
    e_2 = "00000000000000000000000000000000";
    e_3 = "00000000000000000000000000000000";
    u_preg = "0000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Dig_compensator_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, params_vRef, "(port)params_vRef");
    sc_trace(mVcdFile, params_a_0, "(port)params_a_0");
    sc_trace(mVcdFile, params_a_1, "(port)params_a_1");
    sc_trace(mVcdFile, params_a_2, "(port)params_a_2");
    sc_trace(mVcdFile, params_a_3, "(port)params_a_3");
    sc_trace(mVcdFile, params_b_0, "(port)params_b_0");
    sc_trace(mVcdFile, params_b_1, "(port)params_b_1");
    sc_trace(mVcdFile, params_b_2, "(port)params_b_2");
    sc_trace(mVcdFile, params_b_3, "(port)params_b_3");
    sc_trace(mVcdFile, v_meas, "(port)v_meas");
    sc_trace(mVcdFile, u, "(port)u");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_68, "ap_sig_bdd_68");
    sc_trace(mVcdFile, y_3, "y_3");
    sc_trace(mVcdFile, y_1, "y_1");
    sc_trace(mVcdFile, y_2, "y_2");
    sc_trace(mVcdFile, e_1, "e_1");
    sc_trace(mVcdFile, e_2, "e_2");
    sc_trace(mVcdFile, e_3, "e_3");
    sc_trace(mVcdFile, grp_fu_261_p2, "grp_fu_261_p2");
    sc_trace(mVcdFile, reg_278, "reg_278");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st12_fsm_11, "ap_sig_cseq_ST_st12_fsm_11");
    sc_trace(mVcdFile, ap_sig_bdd_99, "ap_sig_bdd_99");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st18_fsm_17, "ap_sig_cseq_ST_st18_fsm_17");
    sc_trace(mVcdFile, ap_sig_bdd_106, "ap_sig_bdd_106");
    sc_trace(mVcdFile, grp_fu_248_p2, "grp_fu_248_p2");
    sc_trace(mVcdFile, reg_284, "reg_284");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st28_fsm_27, "ap_sig_cseq_ST_st28_fsm_27");
    sc_trace(mVcdFile, ap_sig_bdd_116, "ap_sig_bdd_116");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st38_fsm_37, "ap_sig_cseq_ST_st38_fsm_37");
    sc_trace(mVcdFile, ap_sig_bdd_123, "ap_sig_bdd_123");
    sc_trace(mVcdFile, grp_fu_240_p2, "grp_fu_240_p2");
    sc_trace(mVcdFile, reg_289, "reg_289");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st33_fsm_32, "ap_sig_cseq_ST_st33_fsm_32");
    sc_trace(mVcdFile, ap_sig_bdd_133, "ap_sig_bdd_133");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st47_fsm_46, "ap_sig_cseq_ST_st47_fsm_46");
    sc_trace(mVcdFile, ap_sig_bdd_140, "ap_sig_bdd_140");
    sc_trace(mVcdFile, grp_fu_267_p1, "grp_fu_267_p1");
    sc_trace(mVcdFile, tmp_1_reg_747, "tmp_1_reg_747");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st6_fsm_5, "ap_sig_cseq_ST_st6_fsm_5");
    sc_trace(mVcdFile, ap_sig_bdd_155, "ap_sig_bdd_155");
    sc_trace(mVcdFile, v_measReal_fu_252_p1, "v_measReal_fu_252_p1");
    sc_trace(mVcdFile, v_measReal_reg_752, "v_measReal_reg_752");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st19_fsm_18, "ap_sig_cseq_ST_st19_fsm_18");
    sc_trace(mVcdFile, ap_sig_bdd_164, "ap_sig_bdd_164");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st20_fsm_19, "ap_sig_cseq_ST_st20_fsm_19");
    sc_trace(mVcdFile, ap_sig_bdd_173, "ap_sig_bdd_173");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st24_fsm_23, "ap_sig_cseq_ST_st24_fsm_23");
    sc_trace(mVcdFile, ap_sig_bdd_182, "ap_sig_bdd_182");
    sc_trace(mVcdFile, e_reg_797, "e_reg_797");
    sc_trace(mVcdFile, i_3_fu_306_p2, "i_3_fu_306_p2");
    sc_trace(mVcdFile, i_3_reg_806, "i_3_reg_806");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st25_fsm_24, "ap_sig_cseq_ST_st25_fsm_24");
    sc_trace(mVcdFile, ap_sig_bdd_204, "ap_sig_bdd_204");
    sc_trace(mVcdFile, tmp_fu_316_p6, "tmp_fu_316_p6");
    sc_trace(mVcdFile, exitcond1_fu_300_p2, "exitcond1_fu_300_p2");
    sc_trace(mVcdFile, tmp_4_fu_331_p6, "tmp_4_fu_331_p6");
    sc_trace(mVcdFile, y_3_load_reg_821, "y_3_load_reg_821");
    sc_trace(mVcdFile, y_1_load_reg_826, "y_1_load_reg_826");
    sc_trace(mVcdFile, y_2_load_reg_832, "y_2_load_reg_832");
    sc_trace(mVcdFile, params_a_load_phi_fu_385_p3, "params_a_load_phi_fu_385_p3");
    sc_trace(mVcdFile, params_a_load_phi_reg_841, "params_a_load_phi_reg_841");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st34_fsm_33, "ap_sig_cseq_ST_st34_fsm_33");
    sc_trace(mVcdFile, ap_sig_bdd_229, "ap_sig_bdd_229");
    sc_trace(mVcdFile, exitcond_fu_357_p2, "exitcond_fu_357_p2");
    sc_trace(mVcdFile, y_load_phi_fu_398_p3, "y_load_phi_fu_398_p3");
    sc_trace(mVcdFile, y_load_phi_reg_846, "y_load_phi_reg_846");
    sc_trace(mVcdFile, i_4_fu_405_p2, "i_4_fu_405_p2");
    sc_trace(mVcdFile, i_4_reg_851, "i_4_reg_851");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st43_fsm_42, "ap_sig_cseq_ST_st43_fsm_42");
    sc_trace(mVcdFile, ap_sig_bdd_244, "ap_sig_bdd_244");
    sc_trace(mVcdFile, grp_fu_255_p2, "grp_fu_255_p2");
    sc_trace(mVcdFile, tmp_11_reg_875, "tmp_11_reg_875");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st48_fsm_47, "ap_sig_cseq_ST_st48_fsm_47");
    sc_trace(mVcdFile, ap_sig_bdd_253, "ap_sig_bdd_253");
    sc_trace(mVcdFile, tmp_9_fu_460_p3, "tmp_9_fu_460_p3");
    sc_trace(mVcdFile, tmp_9_reg_880, "tmp_9_reg_880");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st49_fsm_48, "ap_sig_cseq_ST_st49_fsm_48");
    sc_trace(mVcdFile, ap_sig_bdd_262, "ap_sig_bdd_262");
    sc_trace(mVcdFile, tmp_19_fu_503_p2, "tmp_19_fu_503_p2");
    sc_trace(mVcdFile, tmp_19_reg_887, "tmp_19_reg_887");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st50_fsm_49, "ap_sig_cseq_ST_st50_fsm_49");
    sc_trace(mVcdFile, ap_sig_bdd_271, "ap_sig_bdd_271");
    sc_trace(mVcdFile, x_assign_fu_509_p3, "x_assign_fu_509_p3");
    sc_trace(mVcdFile, x_assign_reg_892, "x_assign_reg_892");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st51_fsm_50, "ap_sig_cseq_ST_st51_fsm_50");
    sc_trace(mVcdFile, ap_sig_bdd_280, "ap_sig_bdd_280");
    sc_trace(mVcdFile, i_5_fu_642_p2, "i_5_fu_642_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st52_fsm_51, "ap_sig_cseq_ST_st52_fsm_51");
    sc_trace(mVcdFile, ap_sig_bdd_289, "ap_sig_bdd_289");
    sc_trace(mVcdFile, tmp_13_fu_636_p2, "tmp_13_fu_636_p2");
    sc_trace(mVcdFile, i_reg_183, "i_reg_183");
    sc_trace(mVcdFile, num_reg_194, "num_reg_194");
    sc_trace(mVcdFile, i_1_reg_206, "i_1_reg_206");
    sc_trace(mVcdFile, den_reg_217, "den_reg_217");
    sc_trace(mVcdFile, i_2_phi_fu_233_p4, "i_2_phi_fu_233_p4");
    sc_trace(mVcdFile, i_2_reg_229, "i_2_reg_229");
    sc_trace(mVcdFile, y_load_1_phi_fu_707_p3, "y_load_1_phi_fu_707_p3");
    sc_trace(mVcdFile, e_load_1_phi_fu_668_p3, "e_load_1_phi_fu_668_p3");
    sc_trace(mVcdFile, y_2_load_1_fu_114, "y_2_load_1_fu_114");
    sc_trace(mVcdFile, y_1_load_1_fu_118, "y_1_load_1_fu_118");
    sc_trace(mVcdFile, tmp_23_fu_627_p3, "tmp_23_fu_627_p3");
    sc_trace(mVcdFile, u_preg, "u_preg");
    sc_trace(mVcdFile, grp_fu_240_p0, "grp_fu_240_p0");
    sc_trace(mVcdFile, grp_fu_240_p1, "grp_fu_240_p1");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st29_fsm_28, "ap_sig_cseq_ST_st29_fsm_28");
    sc_trace(mVcdFile, ap_sig_bdd_356, "ap_sig_bdd_356");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st39_fsm_38, "ap_sig_cseq_ST_st39_fsm_38");
    sc_trace(mVcdFile, ap_sig_bdd_364, "ap_sig_bdd_364");
    sc_trace(mVcdFile, grp_fu_248_p0, "grp_fu_248_p0");
    sc_trace(mVcdFile, grp_fu_248_p1, "grp_fu_248_p1");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st35_fsm_34, "ap_sig_cseq_ST_st35_fsm_34");
    sc_trace(mVcdFile, ap_sig_bdd_374, "ap_sig_bdd_374");
    sc_trace(mVcdFile, grp_fu_255_p0, "grp_fu_255_p0");
    sc_trace(mVcdFile, grp_fu_255_p1, "grp_fu_255_p1");
    sc_trace(mVcdFile, grp_fu_261_p0, "grp_fu_261_p0");
    sc_trace(mVcdFile, grp_fu_261_p1, "grp_fu_261_p1");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st7_fsm_6, "ap_sig_cseq_ST_st7_fsm_6");
    sc_trace(mVcdFile, ap_sig_bdd_389, "ap_sig_bdd_389");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st13_fsm_12, "ap_sig_cseq_ST_st13_fsm_12");
    sc_trace(mVcdFile, ap_sig_bdd_396, "ap_sig_bdd_396");
    sc_trace(mVcdFile, grp_fu_267_p0, "grp_fu_267_p0");
    sc_trace(mVcdFile, tmp_8_fu_312_p1, "tmp_8_fu_312_p1");
    sc_trace(mVcdFile, tmp_27_fu_363_p1, "tmp_27_fu_363_p1");
    sc_trace(mVcdFile, sel_tmp_fu_367_p2, "sel_tmp_fu_367_p2");
    sc_trace(mVcdFile, sel_tmp2_fu_379_p2, "sel_tmp2_fu_379_p2");
    sc_trace(mVcdFile, sel_tmp1_fu_373_p3, "sel_tmp1_fu_373_p3");
    sc_trace(mVcdFile, sel_tmp5_fu_392_p3, "sel_tmp5_fu_392_p3");
    sc_trace(mVcdFile, tmp_7_to_int_fu_419_p1, "tmp_7_to_int_fu_419_p1");
    sc_trace(mVcdFile, tmp_5_fu_423_p4, "tmp_5_fu_423_p4");
    sc_trace(mVcdFile, tmp_16_fu_433_p1, "tmp_16_fu_433_p1");
    sc_trace(mVcdFile, notrhs_fu_443_p2, "notrhs_fu_443_p2");
    sc_trace(mVcdFile, notlhs_fu_437_p2, "notlhs_fu_437_p2");
    sc_trace(mVcdFile, tmp_10_fu_449_p2, "tmp_10_fu_449_p2");
    sc_trace(mVcdFile, tmp_12_fu_455_p2, "tmp_12_fu_455_p2");
    sc_trace(mVcdFile, tmp_9_to_int_fu_468_p1, "tmp_9_to_int_fu_468_p1");
    sc_trace(mVcdFile, tmp_15_fu_471_p4, "tmp_15_fu_471_p4");
    sc_trace(mVcdFile, tmp_20_fu_481_p1, "tmp_20_fu_481_p1");
    sc_trace(mVcdFile, notrhs1_fu_491_p2, "notrhs1_fu_491_p2");
    sc_trace(mVcdFile, notlhs1_fu_485_p2, "notlhs1_fu_485_p2");
    sc_trace(mVcdFile, tmp_17_fu_497_p2, "tmp_17_fu_497_p2");
    sc_trace(mVcdFile, p_Val2_s_fu_515_p1, "p_Val2_s_fu_515_p1");
    sc_trace(mVcdFile, loc_V_1_fu_529_p1, "loc_V_1_fu_529_p1");
    sc_trace(mVcdFile, p_Result_s_fu_533_p3, "p_Result_s_fu_533_p3");
    sc_trace(mVcdFile, loc_V_fu_519_p4, "loc_V_fu_519_p4");
    sc_trace(mVcdFile, tmp_i_i_i_cast_fu_545_p1, "tmp_i_i_i_cast_fu_545_p1");
    sc_trace(mVcdFile, sh_assign_fu_549_p2, "sh_assign_fu_549_p2");
    sc_trace(mVcdFile, tmp_4_i_i_fu_563_p2, "tmp_4_i_i_fu_563_p2");
    sc_trace(mVcdFile, isNeg_fu_555_p3, "isNeg_fu_555_p3");
    sc_trace(mVcdFile, tmp_4_i_i_cast_fu_569_p1, "tmp_4_i_i_cast_fu_569_p1");
    sc_trace(mVcdFile, sh_assign_1_fu_573_p3, "sh_assign_1_fu_573_p3");
    sc_trace(mVcdFile, sh_assign_1_cast_fu_581_p1, "sh_assign_1_cast_fu_581_p1");
    sc_trace(mVcdFile, sh_assign_1_cast_cast_fu_585_p1, "sh_assign_1_cast_cast_fu_585_p1");
    sc_trace(mVcdFile, tmp_2_i_i_fu_541_p1, "tmp_2_i_i_fu_541_p1");
    sc_trace(mVcdFile, tmp_6_i_i_fu_589_p1, "tmp_6_i_i_fu_589_p1");
    sc_trace(mVcdFile, tmp_7_i_i_fu_593_p2, "tmp_7_i_i_fu_593_p2");
    sc_trace(mVcdFile, tmp_26_fu_605_p3, "tmp_26_fu_605_p3");
    sc_trace(mVcdFile, tmp_9_i_i_fu_599_p2, "tmp_9_i_i_fu_599_p2");
    sc_trace(mVcdFile, tmp_21_fu_613_p1, "tmp_21_fu_613_p1");
    sc_trace(mVcdFile, tmp_22_fu_617_p4, "tmp_22_fu_617_p4");
    sc_trace(mVcdFile, sel_tmp9_fu_648_p2, "sel_tmp9_fu_648_p2");
    sc_trace(mVcdFile, sel_tmp4_fu_662_p2, "sel_tmp4_fu_662_p2");
    sc_trace(mVcdFile, sel_tmp3_fu_654_p3, "sel_tmp3_fu_654_p3");
    sc_trace(mVcdFile, sel_tmp6_fu_699_p3, "sel_tmp6_fu_699_p3");
    sc_trace(mVcdFile, grp_fu_240_opcode, "grp_fu_240_opcode");
    sc_trace(mVcdFile, grp_fu_240_ce, "grp_fu_240_ce");
    sc_trace(mVcdFile, grp_fu_248_ce, "grp_fu_248_ce");
    sc_trace(mVcdFile, grp_fu_255_opcode, "grp_fu_255_opcode");
    sc_trace(mVcdFile, grp_fu_261_ce, "grp_fu_261_ce");
    sc_trace(mVcdFile, grp_fu_267_ce, "grp_fu_267_ce");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("Dig_compensator.hdltvin.dat");
    mHdltvoutHandle.open("Dig_compensator.hdltvout.dat");
}

Dig_compensator::~Dig_compensator() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete Dig_compensator_faddfsub_32ns_32ns_32_5_full_dsp_U0;
    delete Dig_compensator_fmul_32ns_32ns_32_4_max_dsp_U1;
    delete Dig_compensator_fptrunc_64ns_32_1_U2;
    delete Dig_compensator_fcmp_32ns_32ns_1_1_U3;
    delete Dig_compensator_dmul_64ns_64ns_64_6_max_dsp_U4;
    delete Dig_compensator_sitodp_32ns_64_6_U5;
    delete Dig_compensator_mux_4to1_sel2_32_1_U6;
    delete Dig_compensator_mux_4to1_sel2_32_1_U7;
}

void Dig_compensator::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st25_fsm_24.read()) && 
         !esl_seteq<1,1,1>(exitcond1_fu_300_p2.read(), ap_const_lv1_0))) {
        den_reg_217 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st43_fsm_42.read())) {
        den_reg_217 = grp_fu_240_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st25_fsm_24.read()) && 
         !esl_seteq<1,1,1>(exitcond1_fu_300_p2.read(), ap_const_lv1_0))) {
        i_1_reg_206 = ap_const_lv3_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st43_fsm_42.read())) {
        i_1_reg_206 = i_4_reg_851.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st52_fsm_51.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_13_fu_636_p2.read()))) {
        i_2_reg_229 = i_5_fu_642_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st51_fsm_50.read())) {
        i_2_reg_229 = ap_const_lv2_3;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st33_fsm_32.read())) {
        i_reg_183 = i_3_reg_806.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st24_fsm_23.read())) {
        i_reg_183 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st33_fsm_32.read())) {
        num_reg_194 = grp_fu_240_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st24_fsm_23.read())) {
        num_reg_194 = ap_const_lv32_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        u_preg = ap_const_lv10_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st51_fsm_50.read())) {
            u_preg = tmp_23_fu_627_p3.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st52_fsm_51.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_13_fu_636_p2.read()) && 
         esl_seteq<1,2,2>(i_2_phi_fu_233_p4.read(), ap_const_lv2_1))) {
        y_1_load_1_fu_118 = y_load_1_phi_fu_707_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st34_fsm_33.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_357_p2.read()))) {
        y_1_load_1_fu_118 = y_1_load_reg_826.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st52_fsm_51.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_13_fu_636_p2.read()) && 
         esl_seteq<1,2,2>(i_2_phi_fu_233_p4.read(), ap_const_lv2_2))) {
        y_2_load_1_fu_114 = y_load_1_phi_fu_707_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st34_fsm_33.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_357_p2.read()))) {
        y_2_load_1_fu_114 = y_2_load_reg_832.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st52_fsm_51.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_13_fu_636_p2.read()) && esl_seteq<1,2,2>(i_2_phi_fu_233_p4.read(), ap_const_lv2_1))) {
        e_1 = e_load_1_phi_fu_668_p3.read();
        y_1 = y_load_1_phi_fu_707_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st52_fsm_51.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_13_fu_636_p2.read()) && esl_seteq<1,2,2>(i_2_phi_fu_233_p4.read(), ap_const_lv2_2))) {
        e_2 = e_load_1_phi_fu_668_p3.read();
        y_2 = y_load_1_phi_fu_707_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st52_fsm_51.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_13_fu_636_p2.read()) && !esl_seteq<1,2,2>(i_2_phi_fu_233_p4.read(), ap_const_lv2_2) && !esl_seteq<1,2,2>(i_2_phi_fu_233_p4.read(), ap_const_lv2_1))) {
        e_3 = e_load_1_phi_fu_668_p3.read();
        y_3 = y_load_1_phi_fu_707_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st24_fsm_23.read())) {
        e_reg_797 = grp_fu_240_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st25_fsm_24.read())) {
        i_3_reg_806 = i_3_fu_306_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st34_fsm_33.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_357_p2.read()))) {
        i_4_reg_851 = i_4_fu_405_p2.read();
        params_a_load_phi_reg_841 = params_a_load_phi_fu_385_p3.read();
        y_load_phi_reg_846 = y_load_phi_fu_398_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()))) {
        reg_278 = grp_fu_261_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st28_fsm_27.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st38_fsm_37.read()))) {
        reg_284 = grp_fu_248_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st33_fsm_32.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st47_fsm_46.read()))) {
        reg_289 = grp_fu_240_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st48_fsm_47.read())) {
        tmp_11_reg_875 = grp_fu_255_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st50_fsm_49.read())) {
        tmp_19_reg_887 = tmp_19_fu_503_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        tmp_1_reg_747 = grp_fu_267_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st49_fsm_48.read())) {
        tmp_9_reg_880 = tmp_9_fu_460_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st19_fsm_18.read())) {
        v_measReal_reg_752 = v_measReal_fu_252_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st51_fsm_50.read())) {
        x_assign_reg_892 = x_assign_fu_509_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st25_fsm_24.read()) && !esl_seteq<1,1,1>(exitcond1_fu_300_p2.read(), ap_const_lv1_0))) {
        y_1_load_reg_826 = y_1.read();
        y_2_load_reg_832 = y_2.read();
        y_3_load_reg_821 = y_3.read();
    }
}

void Dig_compensator::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st52_fsm_51.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_13_fu_636_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st52_fsm_51.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_13_fu_636_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_bdd_106() {
    ap_sig_bdd_106 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(17, 17));
}

void Dig_compensator::thread_ap_sig_bdd_116() {
    ap_sig_bdd_116 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(27, 27));
}

void Dig_compensator::thread_ap_sig_bdd_123() {
    ap_sig_bdd_123 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(37, 37));
}

void Dig_compensator::thread_ap_sig_bdd_133() {
    ap_sig_bdd_133 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(32, 32));
}

void Dig_compensator::thread_ap_sig_bdd_140() {
    ap_sig_bdd_140 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(46, 46));
}

void Dig_compensator::thread_ap_sig_bdd_155() {
    ap_sig_bdd_155 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(5, 5));
}

void Dig_compensator::thread_ap_sig_bdd_164() {
    ap_sig_bdd_164 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(18, 18));
}

void Dig_compensator::thread_ap_sig_bdd_173() {
    ap_sig_bdd_173 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(19, 19));
}

void Dig_compensator::thread_ap_sig_bdd_182() {
    ap_sig_bdd_182 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(23, 23));
}

void Dig_compensator::thread_ap_sig_bdd_204() {
    ap_sig_bdd_204 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(24, 24));
}

void Dig_compensator::thread_ap_sig_bdd_229() {
    ap_sig_bdd_229 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(33, 33));
}

void Dig_compensator::thread_ap_sig_bdd_244() {
    ap_sig_bdd_244 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(42, 42));
}

void Dig_compensator::thread_ap_sig_bdd_253() {
    ap_sig_bdd_253 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(47, 47));
}

void Dig_compensator::thread_ap_sig_bdd_262() {
    ap_sig_bdd_262 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(48, 48));
}

void Dig_compensator::thread_ap_sig_bdd_271() {
    ap_sig_bdd_271 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(49, 49));
}

void Dig_compensator::thread_ap_sig_bdd_280() {
    ap_sig_bdd_280 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(50, 50));
}

void Dig_compensator::thread_ap_sig_bdd_289() {
    ap_sig_bdd_289 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(51, 51));
}

void Dig_compensator::thread_ap_sig_bdd_356() {
    ap_sig_bdd_356 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(28, 28));
}

void Dig_compensator::thread_ap_sig_bdd_364() {
    ap_sig_bdd_364 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(38, 38));
}

void Dig_compensator::thread_ap_sig_bdd_374() {
    ap_sig_bdd_374 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(34, 34));
}

void Dig_compensator::thread_ap_sig_bdd_389() {
    ap_sig_bdd_389 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(6, 6));
}

void Dig_compensator::thread_ap_sig_bdd_396() {
    ap_sig_bdd_396 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(12, 12));
}

void Dig_compensator::thread_ap_sig_bdd_68() {
    ap_sig_bdd_68 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void Dig_compensator::thread_ap_sig_bdd_99() {
    ap_sig_bdd_99 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(11, 11));
}

void Dig_compensator::thread_ap_sig_cseq_ST_st12_fsm_11() {
    if (ap_sig_bdd_99.read()) {
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_cseq_ST_st13_fsm_12() {
    if (ap_sig_bdd_396.read()) {
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_cseq_ST_st18_fsm_17() {
    if (ap_sig_bdd_106.read()) {
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_cseq_ST_st19_fsm_18() {
    if (ap_sig_bdd_164.read()) {
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_68.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_cseq_ST_st20_fsm_19() {
    if (ap_sig_bdd_173.read()) {
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_cseq_ST_st24_fsm_23() {
    if (ap_sig_bdd_182.read()) {
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_cseq_ST_st25_fsm_24() {
    if (ap_sig_bdd_204.read()) {
        ap_sig_cseq_ST_st25_fsm_24 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st25_fsm_24 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_cseq_ST_st28_fsm_27() {
    if (ap_sig_bdd_116.read()) {
        ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_cseq_ST_st29_fsm_28() {
    if (ap_sig_bdd_356.read()) {
        ap_sig_cseq_ST_st29_fsm_28 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st29_fsm_28 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_cseq_ST_st33_fsm_32() {
    if (ap_sig_bdd_133.read()) {
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_cseq_ST_st34_fsm_33() {
    if (ap_sig_bdd_229.read()) {
        ap_sig_cseq_ST_st34_fsm_33 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st34_fsm_33 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_cseq_ST_st35_fsm_34() {
    if (ap_sig_bdd_374.read()) {
        ap_sig_cseq_ST_st35_fsm_34 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st35_fsm_34 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_cseq_ST_st38_fsm_37() {
    if (ap_sig_bdd_123.read()) {
        ap_sig_cseq_ST_st38_fsm_37 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st38_fsm_37 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_cseq_ST_st39_fsm_38() {
    if (ap_sig_bdd_364.read()) {
        ap_sig_cseq_ST_st39_fsm_38 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st39_fsm_38 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_cseq_ST_st43_fsm_42() {
    if (ap_sig_bdd_244.read()) {
        ap_sig_cseq_ST_st43_fsm_42 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st43_fsm_42 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_cseq_ST_st47_fsm_46() {
    if (ap_sig_bdd_140.read()) {
        ap_sig_cseq_ST_st47_fsm_46 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st47_fsm_46 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_cseq_ST_st48_fsm_47() {
    if (ap_sig_bdd_253.read()) {
        ap_sig_cseq_ST_st48_fsm_47 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st48_fsm_47 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_cseq_ST_st49_fsm_48() {
    if (ap_sig_bdd_262.read()) {
        ap_sig_cseq_ST_st49_fsm_48 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st49_fsm_48 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_cseq_ST_st50_fsm_49() {
    if (ap_sig_bdd_271.read()) {
        ap_sig_cseq_ST_st50_fsm_49 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st50_fsm_49 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_cseq_ST_st51_fsm_50() {
    if (ap_sig_bdd_280.read()) {
        ap_sig_cseq_ST_st51_fsm_50 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st51_fsm_50 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_cseq_ST_st52_fsm_51() {
    if (ap_sig_bdd_289.read()) {
        ap_sig_cseq_ST_st52_fsm_51 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st52_fsm_51 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_cseq_ST_st6_fsm_5() {
    if (ap_sig_bdd_155.read()) {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_cseq_ST_st7_fsm_6() {
    if (ap_sig_bdd_389.read()) {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_e_load_1_phi_fu_668_p3() {
    e_load_1_phi_fu_668_p3 = (!sel_tmp4_fu_662_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp4_fu_662_p2.read()[0].to_bool())? e_reg_797.read(): sel_tmp3_fu_654_p3.read());
}

void Dig_compensator::thread_exitcond1_fu_300_p2() {
    exitcond1_fu_300_p2 = (!i_reg_183.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_183.read() == ap_const_lv3_4);
}

void Dig_compensator::thread_exitcond_fu_357_p2() {
    exitcond_fu_357_p2 = (!i_1_reg_206.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_206.read() == ap_const_lv3_4);
}

void Dig_compensator::thread_grp_fu_240_ce() {
    grp_fu_240_ce = ap_const_logic_1;
}

void Dig_compensator::thread_grp_fu_240_opcode() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st34_fsm_33.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_357_p2.read())))) {
        grp_fu_240_opcode = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st29_fsm_28.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st39_fsm_38.read()))) {
        grp_fu_240_opcode = ap_const_lv2_0;
    } else {
        grp_fu_240_opcode = "XX";
    }
}

void Dig_compensator::thread_grp_fu_240_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st39_fsm_38.read())) {
        grp_fu_240_p0 = den_reg_217.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st34_fsm_33.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st29_fsm_28.read()))) {
        grp_fu_240_p0 = num_reg_194.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read())) {
        grp_fu_240_p0 = params_vRef.read();
    } else {
        grp_fu_240_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Dig_compensator::thread_grp_fu_240_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st34_fsm_33.read())) {
        grp_fu_240_p1 = den_reg_217.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st29_fsm_28.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st39_fsm_38.read()))) {
        grp_fu_240_p1 = reg_284.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read())) {
        grp_fu_240_p1 = v_measReal_reg_752.read();
    } else {
        grp_fu_240_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Dig_compensator::thread_grp_fu_248_ce() {
    grp_fu_248_ce = ap_const_logic_1;
}

void Dig_compensator::thread_grp_fu_248_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st35_fsm_34.read())) {
        grp_fu_248_p0 = params_a_load_phi_reg_841.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st25_fsm_24.read())) {
        grp_fu_248_p0 = tmp_fu_316_p6.read();
    } else {
        grp_fu_248_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Dig_compensator::thread_grp_fu_248_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st35_fsm_34.read())) {
        grp_fu_248_p1 = y_load_phi_reg_846.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st25_fsm_24.read())) {
        grp_fu_248_p1 = tmp_4_fu_331_p6.read();
    } else {
        grp_fu_248_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Dig_compensator::thread_grp_fu_255_opcode() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st50_fsm_49.read())) {
        grp_fu_255_opcode = ap_const_lv5_4;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st48_fsm_47.read())) {
        grp_fu_255_opcode = ap_const_lv5_2;
    } else {
        grp_fu_255_opcode =  (sc_lv<5>) ("XXXXX");
    }
}

void Dig_compensator::thread_grp_fu_255_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st50_fsm_49.read())) {
        grp_fu_255_p0 = tmp_9_reg_880.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st48_fsm_47.read())) {
        grp_fu_255_p0 = reg_289.read();
    } else {
        grp_fu_255_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Dig_compensator::thread_grp_fu_255_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st50_fsm_49.read())) {
        grp_fu_255_p1 = ap_const_lv32_44480000;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st48_fsm_47.read())) {
        grp_fu_255_p1 = ap_const_lv32_0;
    } else {
        grp_fu_255_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Dig_compensator::thread_grp_fu_261_ce() {
    grp_fu_261_ce = ap_const_logic_1;
}

void Dig_compensator::thread_grp_fu_261_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read())) {
        grp_fu_261_p0 = reg_278.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        grp_fu_261_p0 = tmp_1_reg_747.read();
    } else {
        grp_fu_261_p0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Dig_compensator::thread_grp_fu_261_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read())) {
        grp_fu_261_p1 = ap_const_lv64_3F30000000000000;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        grp_fu_261_p1 = ap_const_lv64_400A666666666666;
    } else {
        grp_fu_261_p1 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Dig_compensator::thread_grp_fu_267_ce() {
    grp_fu_267_ce = ap_const_logic_1;
}

void Dig_compensator::thread_grp_fu_267_p0() {
    grp_fu_267_p0 = esl_zext<32,12>(v_meas.read());
}

void Dig_compensator::thread_i_2_phi_fu_233_p4() {
    i_2_phi_fu_233_p4 = i_2_reg_229.read();
}

void Dig_compensator::thread_i_3_fu_306_p2() {
    i_3_fu_306_p2 = (!i_reg_183.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_reg_183.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void Dig_compensator::thread_i_4_fu_405_p2() {
    i_4_fu_405_p2 = (!ap_const_lv3_1.is_01() || !i_1_reg_206.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_1) + sc_biguint<3>(i_1_reg_206.read()));
}

void Dig_compensator::thread_i_5_fu_642_p2() {
    i_5_fu_642_p2 = (!i_2_reg_229.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<2>(): (sc_biguint<2>(i_2_reg_229.read()) + sc_bigint<2>(ap_const_lv2_3));
}

void Dig_compensator::thread_isNeg_fu_555_p3() {
    isNeg_fu_555_p3 = sh_assign_fu_549_p2.read().range(8, 8);
}

void Dig_compensator::thread_loc_V_1_fu_529_p1() {
    loc_V_1_fu_529_p1 = p_Val2_s_fu_515_p1.read().range(23-1, 0);
}

void Dig_compensator::thread_loc_V_fu_519_p4() {
    loc_V_fu_519_p4 = p_Val2_s_fu_515_p1.read().range(30, 23);
}

void Dig_compensator::thread_notlhs1_fu_485_p2() {
    notlhs1_fu_485_p2 = (!tmp_15_fu_471_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_15_fu_471_p4.read() != ap_const_lv8_FF);
}

void Dig_compensator::thread_notlhs_fu_437_p2() {
    notlhs_fu_437_p2 = (!tmp_5_fu_423_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_5_fu_423_p4.read() != ap_const_lv8_FF);
}

void Dig_compensator::thread_notrhs1_fu_491_p2() {
    notrhs1_fu_491_p2 = (!tmp_20_fu_481_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_20_fu_481_p1.read() == ap_const_lv23_0);
}

void Dig_compensator::thread_notrhs_fu_443_p2() {
    notrhs_fu_443_p2 = (!tmp_16_fu_433_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_16_fu_433_p1.read() == ap_const_lv23_0);
}

void Dig_compensator::thread_p_Result_s_fu_533_p3() {
    p_Result_s_fu_533_p3 = esl_concat<1,23>(ap_const_lv1_1, loc_V_1_fu_529_p1.read());
}

void Dig_compensator::thread_p_Val2_s_fu_515_p1() {
    p_Val2_s_fu_515_p1 = x_assign_fu_509_p3.read();
}

void Dig_compensator::thread_params_a_load_phi_fu_385_p3() {
    params_a_load_phi_fu_385_p3 = (!sel_tmp2_fu_379_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp2_fu_379_p2.read()[0].to_bool())? params_a_1.read(): sel_tmp1_fu_373_p3.read());
}

void Dig_compensator::thread_sel_tmp1_fu_373_p3() {
    sel_tmp1_fu_373_p3 = (!sel_tmp_fu_367_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp_fu_367_p2.read()[0].to_bool())? params_a_2.read(): params_a_3.read());
}

void Dig_compensator::thread_sel_tmp2_fu_379_p2() {
    sel_tmp2_fu_379_p2 = (!tmp_27_fu_363_p1.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(tmp_27_fu_363_p1.read() == ap_const_lv2_1);
}

void Dig_compensator::thread_sel_tmp3_fu_654_p3() {
    sel_tmp3_fu_654_p3 = (!sel_tmp9_fu_648_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp9_fu_648_p2.read()[0].to_bool())? e_1.read(): e_2.read());
}

void Dig_compensator::thread_sel_tmp4_fu_662_p2() {
    sel_tmp4_fu_662_p2 = (!i_5_fu_642_p2.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(i_5_fu_642_p2.read() == ap_const_lv2_0);
}

void Dig_compensator::thread_sel_tmp5_fu_392_p3() {
    sel_tmp5_fu_392_p3 = (!sel_tmp_fu_367_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp_fu_367_p2.read()[0].to_bool())? y_2_load_reg_832.read(): y_3_load_reg_821.read());
}

void Dig_compensator::thread_sel_tmp6_fu_699_p3() {
    sel_tmp6_fu_699_p3 = (!sel_tmp9_fu_648_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp9_fu_648_p2.read()[0].to_bool())? y_1_load_1_fu_118.read(): y_2_load_1_fu_114.read());
}

void Dig_compensator::thread_sel_tmp9_fu_648_p2() {
    sel_tmp9_fu_648_p2 = (!i_5_fu_642_p2.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(i_5_fu_642_p2.read() == ap_const_lv2_1);
}

void Dig_compensator::thread_sel_tmp_fu_367_p2() {
    sel_tmp_fu_367_p2 = (!tmp_27_fu_363_p1.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(tmp_27_fu_363_p1.read() == ap_const_lv2_2);
}

void Dig_compensator::thread_sh_assign_1_cast_cast_fu_585_p1() {
    sh_assign_1_cast_cast_fu_585_p1 = esl_sext<24,9>(sh_assign_1_fu_573_p3.read());
}

void Dig_compensator::thread_sh_assign_1_cast_fu_581_p1() {
    sh_assign_1_cast_fu_581_p1 = esl_sext<32,9>(sh_assign_1_fu_573_p3.read());
}

void Dig_compensator::thread_sh_assign_1_fu_573_p3() {
    sh_assign_1_fu_573_p3 = (!isNeg_fu_555_p3.read()[0].is_01())? sc_lv<9>(): ((isNeg_fu_555_p3.read()[0].to_bool())? tmp_4_i_i_cast_fu_569_p1.read(): sh_assign_fu_549_p2.read());
}

void Dig_compensator::thread_sh_assign_fu_549_p2() {
    sh_assign_fu_549_p2 = (!ap_const_lv9_181.is_01() || !tmp_i_i_i_cast_fu_545_p1.read().is_01())? sc_lv<9>(): (sc_bigint<9>(ap_const_lv9_181) + sc_biguint<9>(tmp_i_i_i_cast_fu_545_p1.read()));
}

void Dig_compensator::thread_tmp_10_fu_449_p2() {
    tmp_10_fu_449_p2 = (notrhs_fu_443_p2.read() | notlhs_fu_437_p2.read());
}

void Dig_compensator::thread_tmp_12_fu_455_p2() {
    tmp_12_fu_455_p2 = (tmp_10_fu_449_p2.read() & tmp_11_reg_875.read());
}

void Dig_compensator::thread_tmp_13_fu_636_p2() {
    tmp_13_fu_636_p2 = (!i_2_reg_229.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(i_2_reg_229.read() == ap_const_lv2_0);
}

void Dig_compensator::thread_tmp_15_fu_471_p4() {
    tmp_15_fu_471_p4 = tmp_9_to_int_fu_468_p1.read().range(30, 23);
}

void Dig_compensator::thread_tmp_16_fu_433_p1() {
    tmp_16_fu_433_p1 = tmp_7_to_int_fu_419_p1.read().range(23-1, 0);
}

void Dig_compensator::thread_tmp_17_fu_497_p2() {
    tmp_17_fu_497_p2 = (notrhs1_fu_491_p2.read() | notlhs1_fu_485_p2.read());
}

void Dig_compensator::thread_tmp_19_fu_503_p2() {
    tmp_19_fu_503_p2 = (tmp_17_fu_497_p2.read() & grp_fu_255_p2.read());
}

void Dig_compensator::thread_tmp_20_fu_481_p1() {
    tmp_20_fu_481_p1 = tmp_9_to_int_fu_468_p1.read().range(23-1, 0);
}

void Dig_compensator::thread_tmp_21_fu_613_p1() {
    tmp_21_fu_613_p1 = esl_zext<10,1>(tmp_26_fu_605_p3.read());
}

void Dig_compensator::thread_tmp_22_fu_617_p4() {
    tmp_22_fu_617_p4 = tmp_9_i_i_fu_599_p2.read().range(32, 23);
}

void Dig_compensator::thread_tmp_23_fu_627_p3() {
    tmp_23_fu_627_p3 = (!isNeg_fu_555_p3.read()[0].is_01())? sc_lv<10>(): ((isNeg_fu_555_p3.read()[0].to_bool())? tmp_21_fu_613_p1.read(): tmp_22_fu_617_p4.read());
}

void Dig_compensator::thread_tmp_26_fu_605_p3() {
    tmp_26_fu_605_p3 = tmp_7_i_i_fu_593_p2.read().range(23, 23);
}

void Dig_compensator::thread_tmp_27_fu_363_p1() {
    tmp_27_fu_363_p1 = i_1_reg_206.read().range(2-1, 0);
}

void Dig_compensator::thread_tmp_2_i_i_fu_541_p1() {
    tmp_2_i_i_fu_541_p1 = esl_zext<62,24>(p_Result_s_fu_533_p3.read());
}

void Dig_compensator::thread_tmp_4_i_i_cast_fu_569_p1() {
    tmp_4_i_i_cast_fu_569_p1 = esl_sext<9,8>(tmp_4_i_i_fu_563_p2.read());
}

void Dig_compensator::thread_tmp_4_i_i_fu_563_p2() {
    tmp_4_i_i_fu_563_p2 = (!ap_const_lv8_7F.is_01() || !loc_V_fu_519_p4.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_7F) - sc_biguint<8>(loc_V_fu_519_p4.read()));
}

void Dig_compensator::thread_tmp_5_fu_423_p4() {
    tmp_5_fu_423_p4 = tmp_7_to_int_fu_419_p1.read().range(30, 23);
}

void Dig_compensator::thread_tmp_6_i_i_fu_589_p1() {
    tmp_6_i_i_fu_589_p1 = esl_zext<62,32>(sh_assign_1_cast_fu_581_p1.read());
}

void Dig_compensator::thread_tmp_7_i_i_fu_593_p2() {
    tmp_7_i_i_fu_593_p2 = (!sh_assign_1_cast_cast_fu_585_p1.read().is_01())? sc_lv<24>(): p_Result_s_fu_533_p3.read() >> (unsigned short)sh_assign_1_cast_cast_fu_585_p1.read().to_uint();
}

void Dig_compensator::thread_tmp_7_to_int_fu_419_p1() {
    tmp_7_to_int_fu_419_p1 = reg_289.read();
}

void Dig_compensator::thread_tmp_8_fu_312_p1() {
    tmp_8_fu_312_p1 = i_reg_183.read().range(2-1, 0);
}

void Dig_compensator::thread_tmp_9_fu_460_p3() {
    tmp_9_fu_460_p3 = (!tmp_12_fu_455_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_12_fu_455_p2.read()[0].to_bool())? reg_289.read(): ap_const_lv32_0);
}

void Dig_compensator::thread_tmp_9_i_i_fu_599_p2() {
    tmp_9_i_i_fu_599_p2 = (!tmp_6_i_i_fu_589_p1.read().is_01())? sc_lv<62>(): tmp_2_i_i_fu_541_p1.read() << (unsigned short)tmp_6_i_i_fu_589_p1.read().to_uint();
}

void Dig_compensator::thread_tmp_9_to_int_fu_468_p1() {
    tmp_9_to_int_fu_468_p1 = tmp_9_reg_880.read();
}

void Dig_compensator::thread_tmp_i_i_i_cast_fu_545_p1() {
    tmp_i_i_i_cast_fu_545_p1 = esl_zext<9,8>(loc_V_fu_519_p4.read());
}

void Dig_compensator::thread_u() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st51_fsm_50.read())) {
        u = tmp_23_fu_627_p3.read();
    } else {
        u = u_preg.read();
    }
}

void Dig_compensator::thread_x_assign_fu_509_p3() {
    x_assign_fu_509_p3 = (!tmp_19_reg_887.read()[0].is_01())? sc_lv<32>(): ((tmp_19_reg_887.read()[0].to_bool())? tmp_9_reg_880.read(): ap_const_lv32_44480000);
}

void Dig_compensator::thread_y_load_1_phi_fu_707_p3() {
    y_load_1_phi_fu_707_p3 = (!sel_tmp4_fu_662_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp4_fu_662_p2.read()[0].to_bool())? x_assign_reg_892.read(): sel_tmp6_fu_699_p3.read());
}

void Dig_compensator::thread_y_load_phi_fu_398_p3() {
    y_load_phi_fu_398_p3 = (!sel_tmp2_fu_379_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp2_fu_379_p2.read()[0].to_bool())? y_1_load_reg_826.read(): sel_tmp5_fu_392_p3.read());
}

void Dig_compensator::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_st11_fsm_10;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_st12_fsm_11;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_st13_fsm_12;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_st14_fsm_13;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_st15_fsm_14;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_st16_fsm_15;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_st17_fsm_16;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_st18_fsm_17;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_st19_fsm_18;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_st20_fsm_19;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_st21_fsm_20;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_st22_fsm_21;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_st23_fsm_22;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_st24_fsm_23;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_st25_fsm_24;
            break;
        case 16777216 : 
            if (!esl_seteq<1,1,1>(exitcond1_fu_300_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st34_fsm_33;
            } else {
                ap_NS_fsm = ap_ST_st26_fsm_25;
            }
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_st27_fsm_26;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_st28_fsm_27;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_st29_fsm_28;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_st30_fsm_29;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_st31_fsm_30;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_st32_fsm_31;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_st33_fsm_32;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_st25_fsm_24;
            break;
        case 8589934592 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_357_p2.read())) {
                ap_NS_fsm = ap_ST_st44_fsm_43;
            } else {
                ap_NS_fsm = ap_ST_st35_fsm_34;
            }
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_st36_fsm_35;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_st37_fsm_36;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_st38_fsm_37;
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_st39_fsm_38;
            break;
        case 274877906944 : 
            ap_NS_fsm = ap_ST_st40_fsm_39;
            break;
        case 549755813888 : 
            ap_NS_fsm = ap_ST_st41_fsm_40;
            break;
        case 1099511627776 : 
            ap_NS_fsm = ap_ST_st42_fsm_41;
            break;
        case 2199023255552 : 
            ap_NS_fsm = ap_ST_st43_fsm_42;
            break;
        case 4398046511104 : 
            ap_NS_fsm = ap_ST_st34_fsm_33;
            break;
        case 8796093022208 : 
            ap_NS_fsm = ap_ST_st45_fsm_44;
            break;
        case 17592186044416 : 
            ap_NS_fsm = ap_ST_st46_fsm_45;
            break;
        case 35184372088832 : 
            ap_NS_fsm = ap_ST_st47_fsm_46;
            break;
        case 70368744177664 : 
            ap_NS_fsm = ap_ST_st48_fsm_47;
            break;
        case 140737488355328 : 
            ap_NS_fsm = ap_ST_st49_fsm_48;
            break;
        case 281474976710656 : 
            ap_NS_fsm = ap_ST_st50_fsm_49;
            break;
        case 562949953421312 : 
            ap_NS_fsm = ap_ST_st51_fsm_50;
            break;
        case 1125899906842624 : 
            ap_NS_fsm = ap_ST_st52_fsm_51;
            break;
        case 2251799813685248 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_13_fu_636_p2.read())) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st52_fsm_51;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<52>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void Dig_compensator::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"params_vRef\" :  \"" << params_vRef.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"params_a_0\" :  \"" << params_a_0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"params_a_1\" :  \"" << params_a_1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"params_a_2\" :  \"" << params_a_2.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"params_a_3\" :  \"" << params_a_3.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"params_b_0\" :  \"" << params_b_0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"params_b_1\" :  \"" << params_b_1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"params_b_2\" :  \"" << params_b_2.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"params_b_3\" :  \"" << params_b_3.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v_meas\" :  \"" << v_meas.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"u\" :  \"" << u.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

