// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Dig_compensator.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Dig_compensator::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Dig_compensator::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<36> Dig_compensator::ap_ST_st1_fsm_0 = "1";
const sc_lv<36> Dig_compensator::ap_ST_st2_fsm_1 = "10";
const sc_lv<36> Dig_compensator::ap_ST_st3_fsm_2 = "100";
const sc_lv<36> Dig_compensator::ap_ST_st4_fsm_3 = "1000";
const sc_lv<36> Dig_compensator::ap_ST_st5_fsm_4 = "10000";
const sc_lv<36> Dig_compensator::ap_ST_st6_fsm_5 = "100000";
const sc_lv<36> Dig_compensator::ap_ST_st7_fsm_6 = "1000000";
const sc_lv<36> Dig_compensator::ap_ST_st8_fsm_7 = "10000000";
const sc_lv<36> Dig_compensator::ap_ST_st9_fsm_8 = "100000000";
const sc_lv<36> Dig_compensator::ap_ST_st10_fsm_9 = "1000000000";
const sc_lv<36> Dig_compensator::ap_ST_st11_fsm_10 = "10000000000";
const sc_lv<36> Dig_compensator::ap_ST_st12_fsm_11 = "100000000000";
const sc_lv<36> Dig_compensator::ap_ST_st13_fsm_12 = "1000000000000";
const sc_lv<36> Dig_compensator::ap_ST_st14_fsm_13 = "10000000000000";
const sc_lv<36> Dig_compensator::ap_ST_st15_fsm_14 = "100000000000000";
const sc_lv<36> Dig_compensator::ap_ST_st16_fsm_15 = "1000000000000000";
const sc_lv<36> Dig_compensator::ap_ST_st17_fsm_16 = "10000000000000000";
const sc_lv<36> Dig_compensator::ap_ST_st18_fsm_17 = "100000000000000000";
const sc_lv<36> Dig_compensator::ap_ST_st19_fsm_18 = "1000000000000000000";
const sc_lv<36> Dig_compensator::ap_ST_st20_fsm_19 = "10000000000000000000";
const sc_lv<36> Dig_compensator::ap_ST_st21_fsm_20 = "100000000000000000000";
const sc_lv<36> Dig_compensator::ap_ST_st22_fsm_21 = "1000000000000000000000";
const sc_lv<36> Dig_compensator::ap_ST_st23_fsm_22 = "10000000000000000000000";
const sc_lv<36> Dig_compensator::ap_ST_st24_fsm_23 = "100000000000000000000000";
const sc_lv<36> Dig_compensator::ap_ST_st25_fsm_24 = "1000000000000000000000000";
const sc_lv<36> Dig_compensator::ap_ST_st26_fsm_25 = "10000000000000000000000000";
const sc_lv<36> Dig_compensator::ap_ST_st27_fsm_26 = "100000000000000000000000000";
const sc_lv<36> Dig_compensator::ap_ST_st28_fsm_27 = "1000000000000000000000000000";
const sc_lv<36> Dig_compensator::ap_ST_st29_fsm_28 = "10000000000000000000000000000";
const sc_lv<36> Dig_compensator::ap_ST_st30_fsm_29 = "100000000000000000000000000000";
const sc_lv<36> Dig_compensator::ap_ST_st31_fsm_30 = "1000000000000000000000000000000";
const sc_lv<36> Dig_compensator::ap_ST_st32_fsm_31 = "10000000000000000000000000000000";
const sc_lv<36> Dig_compensator::ap_ST_st33_fsm_32 = "100000000000000000000000000000000";
const sc_lv<36> Dig_compensator::ap_ST_st34_fsm_33 = "1000000000000000000000000000000000";
const sc_lv<36> Dig_compensator::ap_ST_st35_fsm_34 = "10000000000000000000000000000000000";
const sc_lv<36> Dig_compensator::ap_ST_st36_fsm_35 = "100000000000000000000000000000000000";
const sc_lv<32> Dig_compensator::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> Dig_compensator::ap_const_lv1_1 = "1";
const int Dig_compensator::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> Dig_compensator::ap_const_lv32_B = "1011";
const sc_lv<32> Dig_compensator::ap_const_lv32_11 = "10001";
const sc_lv<32> Dig_compensator::ap_const_lv32_F = "1111";
const sc_lv<32> Dig_compensator::ap_const_lv32_14 = "10100";
const sc_lv<32> Dig_compensator::ap_const_lv32_19 = "11001";
const sc_lv<32> Dig_compensator::ap_const_lv32_1E = "11110";
const sc_lv<32> Dig_compensator::ap_const_lv32_1 = "1";
const sc_lv<32> Dig_compensator::ap_const_lv32_6 = "110";
const sc_lv<32> Dig_compensator::ap_const_lv32_A = "1010";
const sc_lv<32> Dig_compensator::ap_const_lv32_C = "1100";
const sc_lv<32> Dig_compensator::ap_const_lv32_10 = "10000";
const sc_lv<32> Dig_compensator::ap_const_lv32_1A = "11010";
const sc_lv<32> Dig_compensator::ap_const_lv32_1F = "11111";
const sc_lv<32> Dig_compensator::ap_const_lv32_20 = "100000";
const sc_lv<32> Dig_compensator::ap_const_lv32_21 = "100001";
const sc_lv<32> Dig_compensator::ap_const_lv32_23 = "100011";
const sc_lv<1> Dig_compensator::ap_const_lv1_0 = "0";
const sc_lv<2> Dig_compensator::ap_const_lv2_2 = "10";
const sc_lv<32> Dig_compensator::ap_const_lv32_22 = "100010";
const sc_lv<64> Dig_compensator::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> Dig_compensator::ap_const_lv64_1 = "1";
const sc_lv<64> Dig_compensator::ap_const_lv64_2 = "10";
const sc_lv<32> Dig_compensator::ap_const_lv32_7 = "111";
const sc_lv<32> Dig_compensator::ap_const_lv32_15 = "10101";
const sc_lv<32> Dig_compensator::ap_const_lv32_17 = "10111";
const sc_lv<8> Dig_compensator::ap_const_lv8_FF = "11111111";
const sc_lv<23> Dig_compensator::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<9> Dig_compensator::ap_const_lv9_181 = "110000001";
const sc_lv<32> Dig_compensator::ap_const_lv32_8 = "1000";
const sc_lv<8> Dig_compensator::ap_const_lv8_7F = "1111111";
const sc_lv<2> Dig_compensator::ap_const_lv2_0 = "00";
const sc_lv<2> Dig_compensator::ap_const_lv2_3 = "11";
const sc_lv<2> Dig_compensator::ap_const_lv2_1 = "1";
const sc_lv<5> Dig_compensator::ap_const_lv5_2 = "10";
const sc_lv<5> Dig_compensator::ap_const_lv5_4 = "100";

Dig_compensator::Dig_compensator(sc_module_name name) : sc_module(name), mVcdFile(0) {
    Dig_compensator_AXILiteS_s_axi_U = new Dig_compensator_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("Dig_compensator_AXILiteS_s_axi_U");
    Dig_compensator_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    Dig_compensator_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    Dig_compensator_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    Dig_compensator_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    Dig_compensator_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    Dig_compensator_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    Dig_compensator_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    Dig_compensator_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    Dig_compensator_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    Dig_compensator_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    Dig_compensator_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    Dig_compensator_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    Dig_compensator_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    Dig_compensator_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    Dig_compensator_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    Dig_compensator_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    Dig_compensator_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    Dig_compensator_AXILiteS_s_axi_U->ACLK(ap_clk);
    Dig_compensator_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    Dig_compensator_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    Dig_compensator_AXILiteS_s_axi_U->params_vRef(params_vRef);
    Dig_compensator_AXILiteS_s_axi_U->params_coef_address0(params_coef_address0);
    Dig_compensator_AXILiteS_s_axi_U->params_coef_ce0(params_coef_ce0);
    Dig_compensator_AXILiteS_s_axi_U->params_coef_q0(params_coef_q0);
    Dig_compensator_AXILiteS_s_axi_U->params_y_max(params_y_max);
    Dig_compensator_AXILiteS_s_axi_U->params_adcMask(params_adcMask);
    Dig_compensator_AXILiteS_s_axi_U->yVmeasDbg(v_measReal_reg_661);
    Dig_compensator_AXILiteS_s_axi_U->yVmeasDbg_ap_vld(yVmeasDbg_ap_vld);
    Dig_compensator_AXILiteS_s_axi_U->yDbg(x_assign_reg_733);
    Dig_compensator_AXILiteS_s_axi_U->yDbg_ap_vld(yDbg_ap_vld);
    Dig_compensator_AXILiteS_s_axi_U->eDbg(e_reg_672);
    Dig_compensator_AXILiteS_s_axi_U->eDbg_ap_vld(eDbg_ap_vld);
    Dig_compensator_AXILiteS_s_axi_U->uDbg(tmp_26_reg_739);
    Dig_compensator_AXILiteS_s_axi_U->uDbg_ap_vld(uDbg_ap_vld);
    Dig_compensator_faddfsub_32ns_32ns_32_5_full_dsp_U0 = new Dig_compensator_faddfsub_32ns_32ns_32_5_full_dsp<1,5,32,32,32>("Dig_compensator_faddfsub_32ns_32ns_32_5_full_dsp_U0");
    Dig_compensator_faddfsub_32ns_32ns_32_5_full_dsp_U0->clk(ap_clk);
    Dig_compensator_faddfsub_32ns_32ns_32_5_full_dsp_U0->reset(ap_rst_n_inv);
    Dig_compensator_faddfsub_32ns_32ns_32_5_full_dsp_U0->din0(grp_fu_219_p0);
    Dig_compensator_faddfsub_32ns_32ns_32_5_full_dsp_U0->din1(grp_fu_219_p1);
    Dig_compensator_faddfsub_32ns_32ns_32_5_full_dsp_U0->opcode(grp_fu_219_opcode);
    Dig_compensator_faddfsub_32ns_32ns_32_5_full_dsp_U0->ce(ap_var_for_const0);
    Dig_compensator_faddfsub_32ns_32ns_32_5_full_dsp_U0->dout(grp_fu_219_p2);
    Dig_compensator_fmul_32ns_32ns_32_4_max_dsp_U1 = new Dig_compensator_fmul_32ns_32ns_32_4_max_dsp<1,4,32,32,32>("Dig_compensator_fmul_32ns_32ns_32_4_max_dsp_U1");
    Dig_compensator_fmul_32ns_32ns_32_4_max_dsp_U1->clk(ap_clk);
    Dig_compensator_fmul_32ns_32ns_32_4_max_dsp_U1->reset(ap_rst_n_inv);
    Dig_compensator_fmul_32ns_32ns_32_4_max_dsp_U1->din0(grp_fu_223_p0);
    Dig_compensator_fmul_32ns_32ns_32_4_max_dsp_U1->din1(grp_fu_223_p1);
    Dig_compensator_fmul_32ns_32ns_32_4_max_dsp_U1->ce(ap_var_for_const0);
    Dig_compensator_fmul_32ns_32ns_32_4_max_dsp_U1->dout(grp_fu_223_p2);
    Dig_compensator_fmul_32ns_32ns_32_4_max_dsp_U2 = new Dig_compensator_fmul_32ns_32ns_32_4_max_dsp<1,4,32,32,32>("Dig_compensator_fmul_32ns_32ns_32_4_max_dsp_U2");
    Dig_compensator_fmul_32ns_32ns_32_4_max_dsp_U2->clk(ap_clk);
    Dig_compensator_fmul_32ns_32ns_32_4_max_dsp_U2->reset(ap_rst_n_inv);
    Dig_compensator_fmul_32ns_32ns_32_4_max_dsp_U2->din0(params_coef_q0);
    Dig_compensator_fmul_32ns_32ns_32_4_max_dsp_U2->din1(e_1);
    Dig_compensator_fmul_32ns_32ns_32_4_max_dsp_U2->ce(ap_var_for_const0);
    Dig_compensator_fmul_32ns_32ns_32_4_max_dsp_U2->dout(grp_fu_227_p2);
    Dig_compensator_sitofp_32ns_32_6_U3 = new Dig_compensator_sitofp_32ns_32_6<1,6,32,32>("Dig_compensator_sitofp_32ns_32_6_U3");
    Dig_compensator_sitofp_32ns_32_6_U3->clk(ap_clk);
    Dig_compensator_sitofp_32ns_32_6_U3->reset(ap_rst_n_inv);
    Dig_compensator_sitofp_32ns_32_6_U3->din0(grp_fu_233_p0);
    Dig_compensator_sitofp_32ns_32_6_U3->ce(ap_var_for_const0);
    Dig_compensator_sitofp_32ns_32_6_U3->dout(grp_fu_233_p1);
    Dig_compensator_fcmp_32ns_32ns_1_1_U4 = new Dig_compensator_fcmp_32ns_32ns_1_1<1,1,32,32,1>("Dig_compensator_fcmp_32ns_32ns_1_1_U4");
    Dig_compensator_fcmp_32ns_32ns_1_1_U4->din0(grp_fu_236_p0);
    Dig_compensator_fcmp_32ns_32ns_1_1_U4->din1(grp_fu_236_p1);
    Dig_compensator_fcmp_32ns_32ns_1_1_U4->opcode(grp_fu_236_opcode);
    Dig_compensator_fcmp_32ns_32ns_1_1_U4->dout(grp_fu_236_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( u_1_ack_in );
    sensitive << ( ap_sig_cseq_ST_st36_fsm_35 );
    sensitive << ( tmp_12_fu_555_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( u_1_ack_in );
    sensitive << ( ap_sig_cseq_ST_st36_fsm_35 );
    sensitive << ( tmp_12_fu_555_p2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_149);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_156);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_166);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_173);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_183);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_191);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_210);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_219);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_228);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_239);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_252);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_263);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_272);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_282);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_291);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_302);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_320);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_358);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_365);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_53);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st11_fsm_10);
    sensitive << ( ap_sig_228 );

    SC_METHOD(thread_ap_sig_cseq_ST_st12_fsm_11);
    sensitive << ( ap_sig_149 );

    SC_METHOD(thread_ap_sig_cseq_ST_st13_fsm_12);
    sensitive << ( ap_sig_239 );

    SC_METHOD(thread_ap_sig_cseq_ST_st16_fsm_15);
    sensitive << ( ap_sig_166 );

    SC_METHOD(thread_ap_sig_cseq_ST_st17_fsm_16);
    sensitive << ( ap_sig_252 );

    SC_METHOD(thread_ap_sig_cseq_ST_st18_fsm_17);
    sensitive << ( ap_sig_156 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_53 );

    SC_METHOD(thread_ap_sig_cseq_ST_st21_fsm_20);
    sensitive << ( ap_sig_173 );

    SC_METHOD(thread_ap_sig_cseq_ST_st22_fsm_21);
    sensitive << ( ap_sig_365 );

    SC_METHOD(thread_ap_sig_cseq_ST_st26_fsm_25);
    sensitive << ( ap_sig_183 );

    SC_METHOD(thread_ap_sig_cseq_ST_st27_fsm_26);
    sensitive << ( ap_sig_263 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_210 );

    SC_METHOD(thread_ap_sig_cseq_ST_st31_fsm_30);
    sensitive << ( ap_sig_191 );

    SC_METHOD(thread_ap_sig_cseq_ST_st32_fsm_31);
    sensitive << ( ap_sig_272 );

    SC_METHOD(thread_ap_sig_cseq_ST_st33_fsm_32);
    sensitive << ( ap_sig_282 );

    SC_METHOD(thread_ap_sig_cseq_ST_st34_fsm_33);
    sensitive << ( ap_sig_291 );

    SC_METHOD(thread_ap_sig_cseq_ST_st35_fsm_34);
    sensitive << ( ap_sig_320 );

    SC_METHOD(thread_ap_sig_cseq_ST_st36_fsm_35);
    sensitive << ( ap_sig_302 );

    SC_METHOD(thread_ap_sig_cseq_ST_st7_fsm_6);
    sensitive << ( ap_sig_219 );

    SC_METHOD(thread_ap_sig_cseq_ST_st8_fsm_7);
    sensitive << ( ap_sig_358 );

    SC_METHOD(thread_cond1_fu_583_p2);
    sensitive << ( u_1_ack_in );
    sensitive << ( ap_sig_cseq_ST_st36_fsm_35 );
    sensitive << ( tmp_12_fu_555_p2 );
    sensitive << ( i_reg_208 );

    SC_METHOD(thread_cond_fu_570_p2);
    sensitive << ( u_1_ack_in );
    sensitive << ( i_1_fu_564_p2 );
    sensitive << ( ap_sig_cseq_ST_st36_fsm_35 );
    sensitive << ( tmp_12_fu_555_p2 );

    SC_METHOD(thread_eDbg_ap_vld);
    sensitive << ( u_1_ack_in );
    sensitive << ( ap_sig_cseq_ST_st36_fsm_35 );
    sensitive << ( tmp_12_fu_555_p2 );

    SC_METHOD(thread_e_load_2_phi_fu_576_p3);
    sensitive << ( e_reg_672 );
    sensitive << ( e_load_s_fu_110 );
    sensitive << ( cond_fu_570_p2 );

    SC_METHOD(thread_grp_fu_219_opcode);
    sensitive << ( ap_sig_cseq_ST_st17_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_st27_fsm_26 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_st22_fsm_21 );

    SC_METHOD(thread_grp_fu_219_p0);
    sensitive << ( reg_246 );
    sensitive << ( reg_252 );
    sensitive << ( params_vRef_read_reg_646 );
    sensitive << ( ap_sig_cseq_ST_st17_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_st27_fsm_26 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_st22_fsm_21 );

    SC_METHOD(thread_grp_fu_219_p1);
    sensitive << ( y_1 );
    sensitive << ( reg_246 );
    sensitive << ( v_measReal_reg_661 );
    sensitive << ( tmp_3_reg_694 );
    sensitive << ( ap_sig_cseq_ST_st17_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_st27_fsm_26 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_st22_fsm_21 );

    SC_METHOD(thread_grp_fu_223_p0);
    sensitive << ( params_coef_q0 );
    sensitive << ( reg_241 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );

    SC_METHOD(thread_grp_fu_223_p1);
    sensitive << ( e_2 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );
    sensitive << ( e_reg_672 );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );

    SC_METHOD(thread_grp_fu_233_p0);
    sensitive << ( params_y_max_read_reg_641 );
    sensitive << ( tmp_1_cast_fu_267_p1 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st27_fsm_26 );

    SC_METHOD(thread_grp_fu_236_opcode);
    sensitive << ( ap_sig_cseq_ST_st32_fsm_31 );
    sensitive << ( ap_sig_cseq_ST_st33_fsm_32 );

    SC_METHOD(thread_grp_fu_236_p0);
    sensitive << ( reg_252 );
    sensitive << ( tmp_9_reg_714 );
    sensitive << ( ap_sig_cseq_ST_st32_fsm_31 );
    sensitive << ( ap_sig_cseq_ST_st33_fsm_32 );

    SC_METHOD(thread_grp_fu_236_p1);
    sensitive << ( ap_sig_cseq_ST_st32_fsm_31 );
    sensitive << ( tmp_s_reg_721 );
    sensitive << ( ap_sig_cseq_ST_st33_fsm_32 );

    SC_METHOD(thread_i_1_fu_564_p2);
    sensitive << ( i_reg_208 );

    SC_METHOD(thread_isNeg_fu_474_p3);
    sensitive << ( sh_assign_fu_468_p2 );

    SC_METHOD(thread_loc_V_1_fu_448_p1);
    sensitive << ( p_Val2_s_fu_434_p1 );

    SC_METHOD(thread_loc_V_fu_438_p4);
    sensitive << ( p_Val2_s_fu_434_p1 );

    SC_METHOD(thread_notlhs2_fu_381_p2);
    sensitive << ( ap_sig_cseq_ST_st33_fsm_32 );
    sensitive << ( tmp_14_fu_350_p4 );

    SC_METHOD(thread_notlhs4_fu_399_p2);
    sensitive << ( ap_sig_cseq_ST_st33_fsm_32 );
    sensitive << ( tmp_16_fu_367_p4 );

    SC_METHOD(thread_notlhs_fu_315_p2);
    sensitive << ( ap_sig_cseq_ST_st32_fsm_31 );
    sensitive << ( tmp_fu_301_p4 );

    SC_METHOD(thread_notrhs3_fu_387_p2);
    sensitive << ( ap_sig_cseq_ST_st33_fsm_32 );
    sensitive << ( tmp_17_fu_360_p1 );

    SC_METHOD(thread_notrhs5_fu_405_p2);
    sensitive << ( ap_sig_cseq_ST_st33_fsm_32 );
    sensitive << ( tmp_23_fu_377_p1 );

    SC_METHOD(thread_notrhs_fu_321_p2);
    sensitive << ( ap_sig_cseq_ST_st32_fsm_31 );
    sensitive << ( tmp_15_fu_311_p1 );

    SC_METHOD(thread_p_Result_s_fu_452_p3);
    sensitive << ( loc_V_1_fu_448_p1 );

    SC_METHOD(thread_p_Val2_s_fu_434_p1);
    sensitive << ( x_assign_fu_429_p3 );

    SC_METHOD(thread_params_coef_address0);
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_st17_fsm_16 );

    SC_METHOD(thread_params_coef_ce0);
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_st17_fsm_16 );

    SC_METHOD(thread_sh_assign_1_cast_cast_fu_504_p1);
    sensitive << ( sh_assign_1_fu_492_p3 );

    SC_METHOD(thread_sh_assign_1_cast_fu_500_p1);
    sensitive << ( sh_assign_1_fu_492_p3 );

    SC_METHOD(thread_sh_assign_1_fu_492_p3);
    sensitive << ( sh_assign_fu_468_p2 );
    sensitive << ( isNeg_fu_474_p3 );
    sensitive << ( tmp_4_i_i_cast_fu_488_p1 );

    SC_METHOD(thread_sh_assign_fu_468_p2);
    sensitive << ( tmp_i_i_i_cast1_fu_464_p1 );

    SC_METHOD(thread_tmp_10_fu_327_p2);
    sensitive << ( notrhs_fu_321_p2 );
    sensitive << ( notlhs_fu_315_p2 );

    SC_METHOD(thread_tmp_10_to_int_fu_364_p1);
    sensitive << ( tmp_s_reg_721 );

    SC_METHOD(thread_tmp_12_fu_555_p2);
    sensitive << ( u_1_ack_in );
    sensitive << ( ap_sig_cseq_ST_st36_fsm_35 );
    sensitive << ( i_reg_208 );

    SC_METHOD(thread_tmp_13_fu_333_p2);
    sensitive << ( tmp_10_fu_327_p2 );
    sensitive << ( grp_fu_236_p2 );

    SC_METHOD(thread_tmp_14_fu_350_p4);
    sensitive << ( tmp_9_to_int_fu_347_p1 );

    SC_METHOD(thread_tmp_15_fu_311_p1);
    sensitive << ( tmp_7_to_int_fu_297_p1 );

    SC_METHOD(thread_tmp_16_fu_367_p4);
    sensitive << ( tmp_10_to_int_fu_364_p1 );

    SC_METHOD(thread_tmp_17_fu_360_p1);
    sensitive << ( tmp_9_to_int_fu_347_p1 );

    SC_METHOD(thread_tmp_18_fu_393_p2);
    sensitive << ( notrhs3_fu_387_p2 );
    sensitive << ( notlhs2_fu_381_p2 );

    SC_METHOD(thread_tmp_19_fu_411_p2);
    sensitive << ( notrhs5_fu_405_p2 );
    sensitive << ( notlhs4_fu_399_p2 );

    SC_METHOD(thread_tmp_1_cast_fu_267_p1);
    sensitive << ( tmp_1_fu_262_p2 );

    SC_METHOD(thread_tmp_1_fu_262_p2);
    sensitive << ( v_meas );
    sensitive << ( tmp_8_reg_651 );

    SC_METHOD(thread_tmp_20_fu_417_p2);
    sensitive << ( tmp_18_fu_393_p2 );
    sensitive << ( tmp_19_fu_411_p2 );

    SC_METHOD(thread_tmp_22_fu_423_p2);
    sensitive << ( grp_fu_236_p2 );
    sensitive << ( tmp_20_fu_417_p2 );

    SC_METHOD(thread_tmp_23_fu_377_p1);
    sensitive << ( tmp_10_to_int_fu_364_p1 );

    SC_METHOD(thread_tmp_24_fu_532_p1);
    sensitive << ( tmp_29_fu_524_p3 );

    SC_METHOD(thread_tmp_25_fu_536_p4);
    sensitive << ( tmp_9_i_i_fu_518_p2 );

    SC_METHOD(thread_tmp_26_fu_546_p3);
    sensitive << ( isNeg_fu_474_p3 );
    sensitive << ( tmp_24_fu_532_p1 );
    sensitive << ( tmp_25_fu_536_p4 );

    SC_METHOD(thread_tmp_29_fu_524_p3);
    sensitive << ( tmp_7_i_i_fu_512_p2 );

    SC_METHOD(thread_tmp_2_i_i_fu_460_p1);
    sensitive << ( p_Result_s_fu_452_p3 );

    SC_METHOD(thread_tmp_4_i_i_cast_fu_488_p1);
    sensitive << ( tmp_4_i_i_fu_482_p2 );

    SC_METHOD(thread_tmp_4_i_i_fu_482_p2);
    sensitive << ( loc_V_fu_438_p4 );

    SC_METHOD(thread_tmp_6_i_i_fu_508_p1);
    sensitive << ( sh_assign_1_cast_fu_500_p1 );

    SC_METHOD(thread_tmp_7_i_i_fu_512_p2);
    sensitive << ( p_Result_s_fu_452_p3 );
    sensitive << ( sh_assign_1_cast_cast_fu_504_p1 );

    SC_METHOD(thread_tmp_7_to_int_fu_297_p1);
    sensitive << ( reg_252 );

    SC_METHOD(thread_tmp_8_fu_258_p1);
    sensitive << ( params_adcMask );

    SC_METHOD(thread_tmp_9_fu_339_p3);
    sensitive << ( reg_252 );
    sensitive << ( tmp_13_fu_333_p2 );

    SC_METHOD(thread_tmp_9_i_i_fu_518_p2);
    sensitive << ( tmp_2_i_i_fu_460_p1 );
    sensitive << ( tmp_6_i_i_fu_508_p1 );

    SC_METHOD(thread_tmp_9_to_int_fu_347_p1);
    sensitive << ( tmp_9_reg_714 );

    SC_METHOD(thread_tmp_fu_301_p4);
    sensitive << ( tmp_7_to_int_fu_297_p1 );

    SC_METHOD(thread_tmp_i_i_i_cast1_fu_464_p1);
    sensitive << ( loc_V_fu_438_p4 );

    SC_METHOD(thread_u);
    sensitive << ( u_1_data_reg );

    SC_METHOD(thread_uDbg_ap_vld);
    sensitive << ( u_1_ack_in );
    sensitive << ( ap_sig_cseq_ST_st36_fsm_35 );
    sensitive << ( tmp_12_fu_555_p2 );

    SC_METHOD(thread_u_1_ack_in);
    sensitive << ( u_1_vld_reg );

    SC_METHOD(thread_u_1_vld_in);
    sensitive << ( ap_sig_cseq_ST_st34_fsm_33 );

    SC_METHOD(thread_x_assign_fu_429_p3);
    sensitive << ( tmp_9_reg_714 );
    sensitive << ( tmp_s_reg_721 );
    sensitive << ( tmp_22_reg_728 );

    SC_METHOD(thread_yDbg_ap_vld);
    sensitive << ( u_1_ack_in );
    sensitive << ( ap_sig_cseq_ST_st36_fsm_35 );
    sensitive << ( tmp_12_fu_555_p2 );

    SC_METHOD(thread_yVmeasDbg_ap_vld);
    sensitive << ( u_1_ack_in );
    sensitive << ( ap_sig_cseq_ST_st36_fsm_35 );
    sensitive << ( tmp_12_fu_555_p2 );

    SC_METHOD(thread_y_load_1_phi_fu_609_p3);
    sensitive << ( x_assign_reg_733 );
    sensitive << ( y_load_s_fu_114 );
    sensitive << ( cond_fu_570_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( u_1_ack_in );
    sensitive << ( tmp_12_fu_555_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000000000000000000000000000000000001";
    u_1_data_reg = "0000000000";
    u_1_vld_reg = SC_LOGIC_0;
    e_1 = "00000000000000000000000000000000";
    e_2 = "00000000000000000000000000000000";
    y_1 = "00000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Dig_compensator_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, v_meas, "(port)v_meas");
    sc_trace(mVcdFile, u, "(port)u");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_53, "ap_sig_53");
    sc_trace(mVcdFile, params_vRef, "params_vRef");
    sc_trace(mVcdFile, params_coef_address0, "params_coef_address0");
    sc_trace(mVcdFile, params_coef_ce0, "params_coef_ce0");
    sc_trace(mVcdFile, params_coef_q0, "params_coef_q0");
    sc_trace(mVcdFile, params_y_max, "params_y_max");
    sc_trace(mVcdFile, params_adcMask, "params_adcMask");
    sc_trace(mVcdFile, u_1_data_reg, "u_1_data_reg");
    sc_trace(mVcdFile, u_1_vld_reg, "u_1_vld_reg");
    sc_trace(mVcdFile, u_1_vld_in, "u_1_vld_in");
    sc_trace(mVcdFile, u_1_ack_in, "u_1_ack_in");
    sc_trace(mVcdFile, yVmeasDbg_ap_vld, "yVmeasDbg_ap_vld");
    sc_trace(mVcdFile, yDbg_ap_vld, "yDbg_ap_vld");
    sc_trace(mVcdFile, eDbg_ap_vld, "eDbg_ap_vld");
    sc_trace(mVcdFile, uDbg_ap_vld, "uDbg_ap_vld");
    sc_trace(mVcdFile, e_1, "e_1");
    sc_trace(mVcdFile, e_2, "e_2");
    sc_trace(mVcdFile, y_1, "y_1");
    sc_trace(mVcdFile, reg_241, "reg_241");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st12_fsm_11, "ap_sig_cseq_ST_st12_fsm_11");
    sc_trace(mVcdFile, ap_sig_149, "ap_sig_149");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st18_fsm_17, "ap_sig_cseq_ST_st18_fsm_17");
    sc_trace(mVcdFile, ap_sig_156, "ap_sig_156");
    sc_trace(mVcdFile, grp_fu_223_p2, "grp_fu_223_p2");
    sc_trace(mVcdFile, reg_246, "reg_246");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st16_fsm_15, "ap_sig_cseq_ST_st16_fsm_15");
    sc_trace(mVcdFile, ap_sig_166, "ap_sig_166");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st21_fsm_20, "ap_sig_cseq_ST_st21_fsm_20");
    sc_trace(mVcdFile, ap_sig_173, "ap_sig_173");
    sc_trace(mVcdFile, grp_fu_219_p2, "grp_fu_219_p2");
    sc_trace(mVcdFile, reg_252, "reg_252");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st26_fsm_25, "ap_sig_cseq_ST_st26_fsm_25");
    sc_trace(mVcdFile, ap_sig_183, "ap_sig_183");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st31_fsm_30, "ap_sig_cseq_ST_st31_fsm_30");
    sc_trace(mVcdFile, ap_sig_191, "ap_sig_191");
    sc_trace(mVcdFile, params_y_max_read_reg_641, "params_y_max_read_reg_641");
    sc_trace(mVcdFile, params_vRef_read_reg_646, "params_vRef_read_reg_646");
    sc_trace(mVcdFile, tmp_8_fu_258_p1, "tmp_8_fu_258_p1");
    sc_trace(mVcdFile, tmp_8_reg_651, "tmp_8_reg_651");
    sc_trace(mVcdFile, tmp_1_cast_fu_267_p1, "tmp_1_cast_fu_267_p1");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_210, "ap_sig_210");
    sc_trace(mVcdFile, grp_fu_233_p1, "grp_fu_233_p1");
    sc_trace(mVcdFile, v_measReal_reg_661, "v_measReal_reg_661");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st7_fsm_6, "ap_sig_cseq_ST_st7_fsm_6");
    sc_trace(mVcdFile, ap_sig_219, "ap_sig_219");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st11_fsm_10, "ap_sig_cseq_ST_st11_fsm_10");
    sc_trace(mVcdFile, ap_sig_228, "ap_sig_228");
    sc_trace(mVcdFile, e_reg_672, "e_reg_672");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st13_fsm_12, "ap_sig_cseq_ST_st13_fsm_12");
    sc_trace(mVcdFile, ap_sig_239, "ap_sig_239");
    sc_trace(mVcdFile, grp_fu_227_p2, "grp_fu_227_p2");
    sc_trace(mVcdFile, tmp_3_reg_694, "tmp_3_reg_694");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st17_fsm_16, "ap_sig_cseq_ST_st17_fsm_16");
    sc_trace(mVcdFile, ap_sig_252, "ap_sig_252");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st27_fsm_26, "ap_sig_cseq_ST_st27_fsm_26");
    sc_trace(mVcdFile, ap_sig_263, "ap_sig_263");
    sc_trace(mVcdFile, tmp_9_fu_339_p3, "tmp_9_fu_339_p3");
    sc_trace(mVcdFile, tmp_9_reg_714, "tmp_9_reg_714");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st32_fsm_31, "ap_sig_cseq_ST_st32_fsm_31");
    sc_trace(mVcdFile, ap_sig_272, "ap_sig_272");
    sc_trace(mVcdFile, tmp_s_reg_721, "tmp_s_reg_721");
    sc_trace(mVcdFile, tmp_22_fu_423_p2, "tmp_22_fu_423_p2");
    sc_trace(mVcdFile, tmp_22_reg_728, "tmp_22_reg_728");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st33_fsm_32, "ap_sig_cseq_ST_st33_fsm_32");
    sc_trace(mVcdFile, ap_sig_282, "ap_sig_282");
    sc_trace(mVcdFile, x_assign_fu_429_p3, "x_assign_fu_429_p3");
    sc_trace(mVcdFile, x_assign_reg_733, "x_assign_reg_733");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st34_fsm_33, "ap_sig_cseq_ST_st34_fsm_33");
    sc_trace(mVcdFile, ap_sig_291, "ap_sig_291");
    sc_trace(mVcdFile, tmp_26_fu_546_p3, "tmp_26_fu_546_p3");
    sc_trace(mVcdFile, tmp_26_reg_739, "tmp_26_reg_739");
    sc_trace(mVcdFile, i_1_fu_564_p2, "i_1_fu_564_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st36_fsm_35, "ap_sig_cseq_ST_st36_fsm_35");
    sc_trace(mVcdFile, ap_sig_302, "ap_sig_302");
    sc_trace(mVcdFile, tmp_12_fu_555_p2, "tmp_12_fu_555_p2");
    sc_trace(mVcdFile, i_reg_208, "i_reg_208");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st35_fsm_34, "ap_sig_cseq_ST_st35_fsm_34");
    sc_trace(mVcdFile, ap_sig_320, "ap_sig_320");
    sc_trace(mVcdFile, e_load_2_phi_fu_576_p3, "e_load_2_phi_fu_576_p3");
    sc_trace(mVcdFile, cond1_fu_583_p2, "cond1_fu_583_p2");
    sc_trace(mVcdFile, y_load_1_phi_fu_609_p3, "y_load_1_phi_fu_609_p3");
    sc_trace(mVcdFile, e_load_s_fu_110, "e_load_s_fu_110");
    sc_trace(mVcdFile, y_load_s_fu_114, "y_load_s_fu_114");
    sc_trace(mVcdFile, grp_fu_219_p0, "grp_fu_219_p0");
    sc_trace(mVcdFile, grp_fu_219_p1, "grp_fu_219_p1");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st8_fsm_7, "ap_sig_cseq_ST_st8_fsm_7");
    sc_trace(mVcdFile, ap_sig_358, "ap_sig_358");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st22_fsm_21, "ap_sig_cseq_ST_st22_fsm_21");
    sc_trace(mVcdFile, ap_sig_365, "ap_sig_365");
    sc_trace(mVcdFile, grp_fu_223_p0, "grp_fu_223_p0");
    sc_trace(mVcdFile, grp_fu_223_p1, "grp_fu_223_p1");
    sc_trace(mVcdFile, grp_fu_233_p0, "grp_fu_233_p0");
    sc_trace(mVcdFile, grp_fu_236_p0, "grp_fu_236_p0");
    sc_trace(mVcdFile, grp_fu_236_p1, "grp_fu_236_p1");
    sc_trace(mVcdFile, tmp_1_fu_262_p2, "tmp_1_fu_262_p2");
    sc_trace(mVcdFile, tmp_7_to_int_fu_297_p1, "tmp_7_to_int_fu_297_p1");
    sc_trace(mVcdFile, tmp_fu_301_p4, "tmp_fu_301_p4");
    sc_trace(mVcdFile, tmp_15_fu_311_p1, "tmp_15_fu_311_p1");
    sc_trace(mVcdFile, notrhs_fu_321_p2, "notrhs_fu_321_p2");
    sc_trace(mVcdFile, notlhs_fu_315_p2, "notlhs_fu_315_p2");
    sc_trace(mVcdFile, tmp_10_fu_327_p2, "tmp_10_fu_327_p2");
    sc_trace(mVcdFile, grp_fu_236_p2, "grp_fu_236_p2");
    sc_trace(mVcdFile, tmp_13_fu_333_p2, "tmp_13_fu_333_p2");
    sc_trace(mVcdFile, tmp_9_to_int_fu_347_p1, "tmp_9_to_int_fu_347_p1");
    sc_trace(mVcdFile, tmp_10_to_int_fu_364_p1, "tmp_10_to_int_fu_364_p1");
    sc_trace(mVcdFile, tmp_14_fu_350_p4, "tmp_14_fu_350_p4");
    sc_trace(mVcdFile, tmp_17_fu_360_p1, "tmp_17_fu_360_p1");
    sc_trace(mVcdFile, notrhs3_fu_387_p2, "notrhs3_fu_387_p2");
    sc_trace(mVcdFile, notlhs2_fu_381_p2, "notlhs2_fu_381_p2");
    sc_trace(mVcdFile, tmp_16_fu_367_p4, "tmp_16_fu_367_p4");
    sc_trace(mVcdFile, tmp_23_fu_377_p1, "tmp_23_fu_377_p1");
    sc_trace(mVcdFile, notrhs5_fu_405_p2, "notrhs5_fu_405_p2");
    sc_trace(mVcdFile, notlhs4_fu_399_p2, "notlhs4_fu_399_p2");
    sc_trace(mVcdFile, tmp_18_fu_393_p2, "tmp_18_fu_393_p2");
    sc_trace(mVcdFile, tmp_19_fu_411_p2, "tmp_19_fu_411_p2");
    sc_trace(mVcdFile, tmp_20_fu_417_p2, "tmp_20_fu_417_p2");
    sc_trace(mVcdFile, p_Val2_s_fu_434_p1, "p_Val2_s_fu_434_p1");
    sc_trace(mVcdFile, loc_V_1_fu_448_p1, "loc_V_1_fu_448_p1");
    sc_trace(mVcdFile, p_Result_s_fu_452_p3, "p_Result_s_fu_452_p3");
    sc_trace(mVcdFile, loc_V_fu_438_p4, "loc_V_fu_438_p4");
    sc_trace(mVcdFile, tmp_i_i_i_cast1_fu_464_p1, "tmp_i_i_i_cast1_fu_464_p1");
    sc_trace(mVcdFile, sh_assign_fu_468_p2, "sh_assign_fu_468_p2");
    sc_trace(mVcdFile, tmp_4_i_i_fu_482_p2, "tmp_4_i_i_fu_482_p2");
    sc_trace(mVcdFile, isNeg_fu_474_p3, "isNeg_fu_474_p3");
    sc_trace(mVcdFile, tmp_4_i_i_cast_fu_488_p1, "tmp_4_i_i_cast_fu_488_p1");
    sc_trace(mVcdFile, sh_assign_1_fu_492_p3, "sh_assign_1_fu_492_p3");
    sc_trace(mVcdFile, sh_assign_1_cast_fu_500_p1, "sh_assign_1_cast_fu_500_p1");
    sc_trace(mVcdFile, sh_assign_1_cast_cast_fu_504_p1, "sh_assign_1_cast_cast_fu_504_p1");
    sc_trace(mVcdFile, tmp_2_i_i_fu_460_p1, "tmp_2_i_i_fu_460_p1");
    sc_trace(mVcdFile, tmp_6_i_i_fu_508_p1, "tmp_6_i_i_fu_508_p1");
    sc_trace(mVcdFile, tmp_7_i_i_fu_512_p2, "tmp_7_i_i_fu_512_p2");
    sc_trace(mVcdFile, tmp_29_fu_524_p3, "tmp_29_fu_524_p3");
    sc_trace(mVcdFile, tmp_9_i_i_fu_518_p2, "tmp_9_i_i_fu_518_p2");
    sc_trace(mVcdFile, tmp_24_fu_532_p1, "tmp_24_fu_532_p1");
    sc_trace(mVcdFile, tmp_25_fu_536_p4, "tmp_25_fu_536_p4");
    sc_trace(mVcdFile, cond_fu_570_p2, "cond_fu_570_p2");
    sc_trace(mVcdFile, grp_fu_219_opcode, "grp_fu_219_opcode");
    sc_trace(mVcdFile, grp_fu_236_opcode, "grp_fu_236_opcode");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("Dig_compensator.hdltvin.dat");
    mHdltvoutHandle.open("Dig_compensator.hdltvout.dat");
}

Dig_compensator::~Dig_compensator() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete Dig_compensator_AXILiteS_s_axi_U;
    delete Dig_compensator_faddfsub_32ns_32ns_32_5_full_dsp_U0;
    delete Dig_compensator_fmul_32ns_32ns_32_4_max_dsp_U1;
    delete Dig_compensator_fmul_32ns_32ns_32_4_max_dsp_U2;
    delete Dig_compensator_sitofp_32ns_32_6_U3;
    delete Dig_compensator_fcmp_32ns_32ns_1_1_U4;
}

void Dig_compensator::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void Dig_compensator::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st36_fsm_35.read()) && 
         esl_seteq<1,1,1>(tmp_12_fu_555_p2.read(), ap_const_lv1_0) && 
         !esl_seteq<1,1,1>(u_1_ack_in.read(), ap_const_logic_0) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, cond1_fu_583_p2.read()))) {
        e_load_s_fu_110 = e_load_2_phi_fu_576_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read())) {
        e_load_s_fu_110 = e_1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st36_fsm_35.read()) && 
         esl_seteq<1,1,1>(tmp_12_fu_555_p2.read(), ap_const_lv1_0) && 
         !esl_seteq<1,1,1>(u_1_ack_in.read(), ap_const_logic_0))) {
        i_reg_208 = i_1_fu_564_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st35_fsm_34.read())) {
        i_reg_208 = ap_const_lv2_2;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st36_fsm_35.read()) && 
         esl_seteq<1,1,1>(tmp_12_fu_555_p2.read(), ap_const_lv1_0) && 
         !esl_seteq<1,1,1>(u_1_ack_in.read(), ap_const_logic_0) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, cond1_fu_583_p2.read()))) {
        y_load_s_fu_114 = y_load_1_phi_fu_609_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st27_fsm_26.read())) {
        y_load_s_fu_114 = y_1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st36_fsm_35.read()) && esl_seteq<1,1,1>(tmp_12_fu_555_p2.read(), ap_const_lv1_0) && !esl_seteq<1,1,1>(u_1_ack_in.read(), ap_const_logic_0) && !esl_seteq<1,1,1>(ap_const_lv1_0, cond1_fu_583_p2.read()))) {
        e_1 = e_load_2_phi_fu_576_p3.read();
        y_1 = y_load_1_phi_fu_609_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st36_fsm_35.read()) && esl_seteq<1,1,1>(tmp_12_fu_555_p2.read(), ap_const_lv1_0) && !esl_seteq<1,1,1>(u_1_ack_in.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_lv1_0, cond1_fu_583_p2.read()))) {
        e_2 = e_load_2_phi_fu_576_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read())) {
        e_reg_672 = grp_fu_219_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        params_vRef_read_reg_646 = params_vRef.read();
        params_y_max_read_reg_641 = params_y_max.read();
        tmp_8_reg_651 = tmp_8_fu_258_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()))) {
        reg_241 = params_coef_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read()))) {
        reg_246 = grp_fu_223_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st26_fsm_25.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st31_fsm_30.read()))) {
        reg_252 = grp_fu_219_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st33_fsm_32.read())) {
        tmp_22_reg_728 = tmp_22_fu_423_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st34_fsm_33.read())) {
        tmp_26_reg_739 = tmp_26_fu_546_p3.read();
        x_assign_reg_733 = x_assign_fu_429_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read())) {
        tmp_3_reg_694 = grp_fu_227_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st32_fsm_31.read())) {
        tmp_9_reg_714 = tmp_9_fu_339_p3.read();
        tmp_s_reg_721 = grp_fu_233_p1.read();
    }
    if (((!(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, u_1_vld_in.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, u_1_vld_reg.read())) || (!(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, u_1_vld_in.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, u_1_vld_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)))) {
        u_1_data_reg = tmp_26_fu_546_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        v_measReal_reg_661 = grp_fu_233_p1.read();
    }
}

void Dig_compensator::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st36_fsm_35.read()) && 
         !esl_seteq<1,1,1>(tmp_12_fu_555_p2.read(), ap_const_lv1_0) && 
         !esl_seteq<1,1,1>(u_1_ack_in.read(), ap_const_logic_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st36_fsm_35.read()) && 
         !esl_seteq<1,1,1>(tmp_12_fu_555_p2.read(), ap_const_lv1_0) && 
         !esl_seteq<1,1,1>(u_1_ack_in.read(), ap_const_logic_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void Dig_compensator::thread_ap_sig_149() {
    ap_sig_149 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(11, 11));
}

void Dig_compensator::thread_ap_sig_156() {
    ap_sig_156 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(17, 17));
}

void Dig_compensator::thread_ap_sig_166() {
    ap_sig_166 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(15, 15));
}

void Dig_compensator::thread_ap_sig_173() {
    ap_sig_173 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(20, 20));
}

void Dig_compensator::thread_ap_sig_183() {
    ap_sig_183 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(25, 25));
}

void Dig_compensator::thread_ap_sig_191() {
    ap_sig_191 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(30, 30));
}

void Dig_compensator::thread_ap_sig_210() {
    ap_sig_210 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void Dig_compensator::thread_ap_sig_219() {
    ap_sig_219 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(6, 6));
}

void Dig_compensator::thread_ap_sig_228() {
    ap_sig_228 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(10, 10));
}

void Dig_compensator::thread_ap_sig_239() {
    ap_sig_239 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(12, 12));
}

void Dig_compensator::thread_ap_sig_252() {
    ap_sig_252 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(16, 16));
}

void Dig_compensator::thread_ap_sig_263() {
    ap_sig_263 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(26, 26));
}

void Dig_compensator::thread_ap_sig_272() {
    ap_sig_272 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(31, 31));
}

void Dig_compensator::thread_ap_sig_282() {
    ap_sig_282 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(32, 32));
}

void Dig_compensator::thread_ap_sig_291() {
    ap_sig_291 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(33, 33));
}

void Dig_compensator::thread_ap_sig_302() {
    ap_sig_302 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(35, 35));
}

void Dig_compensator::thread_ap_sig_320() {
    ap_sig_320 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(34, 34));
}

void Dig_compensator::thread_ap_sig_358() {
    ap_sig_358 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(7, 7));
}

void Dig_compensator::thread_ap_sig_365() {
    ap_sig_365 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(21, 21));
}

void Dig_compensator::thread_ap_sig_53() {
    ap_sig_53 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void Dig_compensator::thread_ap_sig_cseq_ST_st11_fsm_10() {
    if (ap_sig_228.read()) {
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_cseq_ST_st12_fsm_11() {
    if (ap_sig_149.read()) {
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_cseq_ST_st13_fsm_12() {
    if (ap_sig_239.read()) {
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_cseq_ST_st16_fsm_15() {
    if (ap_sig_166.read()) {
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_cseq_ST_st17_fsm_16() {
    if (ap_sig_252.read()) {
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_cseq_ST_st18_fsm_17() {
    if (ap_sig_156.read()) {
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_53.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_cseq_ST_st21_fsm_20() {
    if (ap_sig_173.read()) {
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_cseq_ST_st22_fsm_21() {
    if (ap_sig_365.read()) {
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_cseq_ST_st26_fsm_25() {
    if (ap_sig_183.read()) {
        ap_sig_cseq_ST_st26_fsm_25 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st26_fsm_25 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_cseq_ST_st27_fsm_26() {
    if (ap_sig_263.read()) {
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_210.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_cseq_ST_st31_fsm_30() {
    if (ap_sig_191.read()) {
        ap_sig_cseq_ST_st31_fsm_30 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st31_fsm_30 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_cseq_ST_st32_fsm_31() {
    if (ap_sig_272.read()) {
        ap_sig_cseq_ST_st32_fsm_31 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st32_fsm_31 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_cseq_ST_st33_fsm_32() {
    if (ap_sig_282.read()) {
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_cseq_ST_st34_fsm_33() {
    if (ap_sig_291.read()) {
        ap_sig_cseq_ST_st34_fsm_33 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st34_fsm_33 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_cseq_ST_st35_fsm_34() {
    if (ap_sig_320.read()) {
        ap_sig_cseq_ST_st35_fsm_34 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st35_fsm_34 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_cseq_ST_st36_fsm_35() {
    if (ap_sig_302.read()) {
        ap_sig_cseq_ST_st36_fsm_35 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st36_fsm_35 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_cseq_ST_st7_fsm_6() {
    if (ap_sig_219.read()) {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_ap_sig_cseq_ST_st8_fsm_7() {
    if (ap_sig_358.read()) {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_cond1_fu_583_p2() {
    cond1_fu_583_p2 = (!i_reg_208.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_208.read() == ap_const_lv2_1);
}

void Dig_compensator::thread_cond_fu_570_p2() {
    cond_fu_570_p2 = (!i_1_fu_564_p2.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(i_1_fu_564_p2.read() == ap_const_lv2_0);
}

void Dig_compensator::thread_eDbg_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st36_fsm_35.read()) && 
         !esl_seteq<1,1,1>(tmp_12_fu_555_p2.read(), ap_const_lv1_0) && 
         !esl_seteq<1,1,1>(u_1_ack_in.read(), ap_const_logic_0))) {
        eDbg_ap_vld = ap_const_logic_1;
    } else {
        eDbg_ap_vld = ap_const_logic_0;
    }
}

void Dig_compensator::thread_e_load_2_phi_fu_576_p3() {
    e_load_2_phi_fu_576_p3 = (!cond_fu_570_p2.read()[0].is_01())? sc_lv<32>(): ((cond_fu_570_p2.read()[0].to_bool())? e_reg_672.read(): e_load_s_fu_110.read());
}

void Dig_compensator::thread_grp_fu_219_opcode() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        grp_fu_219_opcode = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st27_fsm_26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st22_fsm_21.read()))) {
        grp_fu_219_opcode = ap_const_lv2_0;
    } else {
        grp_fu_219_opcode = "XX";
    }
}

void Dig_compensator::thread_grp_fu_219_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st27_fsm_26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st22_fsm_21.read()))) {
        grp_fu_219_p0 = reg_252.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read())) {
        grp_fu_219_p0 = reg_246.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        grp_fu_219_p0 = params_vRef_read_reg_646.read();
    } else {
        grp_fu_219_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Dig_compensator::thread_grp_fu_219_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st27_fsm_26.read())) {
        grp_fu_219_p1 = y_1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st22_fsm_21.read())) {
        grp_fu_219_p1 = reg_246.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read())) {
        grp_fu_219_p1 = tmp_3_reg_694.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        grp_fu_219_p1 = v_measReal_reg_661.read();
    } else {
        grp_fu_219_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Dig_compensator::thread_grp_fu_223_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read())) {
        grp_fu_223_p0 = params_coef_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read())) {
        grp_fu_223_p0 = reg_241.read();
    } else {
        grp_fu_223_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Dig_compensator::thread_grp_fu_223_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read())) {
        grp_fu_223_p1 = e_2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read())) {
        grp_fu_223_p1 = e_reg_672.read();
    } else {
        grp_fu_223_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Dig_compensator::thread_grp_fu_233_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st27_fsm_26.read())) {
        grp_fu_233_p0 = params_y_max_read_reg_641.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        grp_fu_233_p0 = tmp_1_cast_fu_267_p1.read();
    } else {
        grp_fu_233_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Dig_compensator::thread_grp_fu_236_opcode() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st33_fsm_32.read())) {
        grp_fu_236_opcode = ap_const_lv5_4;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st32_fsm_31.read())) {
        grp_fu_236_opcode = ap_const_lv5_2;
    } else {
        grp_fu_236_opcode =  (sc_lv<5>) ("XXXXX");
    }
}

void Dig_compensator::thread_grp_fu_236_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st33_fsm_32.read())) {
        grp_fu_236_p0 = tmp_9_reg_714.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st32_fsm_31.read())) {
        grp_fu_236_p0 = reg_252.read();
    } else {
        grp_fu_236_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Dig_compensator::thread_grp_fu_236_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st33_fsm_32.read())) {
        grp_fu_236_p1 = tmp_s_reg_721.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st32_fsm_31.read())) {
        grp_fu_236_p1 = ap_const_lv32_0;
    } else {
        grp_fu_236_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Dig_compensator::thread_i_1_fu_564_p2() {
    i_1_fu_564_p2 = (!i_reg_208.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<2>(): (sc_biguint<2>(i_reg_208.read()) + sc_bigint<2>(ap_const_lv2_3));
}

void Dig_compensator::thread_isNeg_fu_474_p3() {
    isNeg_fu_474_p3 = sh_assign_fu_468_p2.read().range(8, 8);
}

void Dig_compensator::thread_loc_V_1_fu_448_p1() {
    loc_V_1_fu_448_p1 = p_Val2_s_fu_434_p1.read().range(23-1, 0);
}

void Dig_compensator::thread_loc_V_fu_438_p4() {
    loc_V_fu_438_p4 = p_Val2_s_fu_434_p1.read().range(30, 23);
}

void Dig_compensator::thread_notlhs2_fu_381_p2() {
    notlhs2_fu_381_p2 = (!tmp_14_fu_350_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_14_fu_350_p4.read() != ap_const_lv8_FF);
}

void Dig_compensator::thread_notlhs4_fu_399_p2() {
    notlhs4_fu_399_p2 = (!tmp_16_fu_367_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_16_fu_367_p4.read() != ap_const_lv8_FF);
}

void Dig_compensator::thread_notlhs_fu_315_p2() {
    notlhs_fu_315_p2 = (!tmp_fu_301_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_fu_301_p4.read() != ap_const_lv8_FF);
}

void Dig_compensator::thread_notrhs3_fu_387_p2() {
    notrhs3_fu_387_p2 = (!tmp_17_fu_360_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_17_fu_360_p1.read() == ap_const_lv23_0);
}

void Dig_compensator::thread_notrhs5_fu_405_p2() {
    notrhs5_fu_405_p2 = (!tmp_23_fu_377_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_23_fu_377_p1.read() == ap_const_lv23_0);
}

void Dig_compensator::thread_notrhs_fu_321_p2() {
    notrhs_fu_321_p2 = (!tmp_15_fu_311_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_15_fu_311_p1.read() == ap_const_lv23_0);
}

void Dig_compensator::thread_p_Result_s_fu_452_p3() {
    p_Result_s_fu_452_p3 = esl_concat<1,23>(ap_const_lv1_1, loc_V_1_fu_448_p1.read());
}

void Dig_compensator::thread_p_Val2_s_fu_434_p1() {
    p_Val2_s_fu_434_p1 = x_assign_fu_429_p3.read();
}

void Dig_compensator::thread_params_coef_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read())) {
        params_coef_address0 =  (sc_lv<2>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read())) {
        params_coef_address0 =  (sc_lv<2>) (ap_const_lv64_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read())) {
        params_coef_address0 =  (sc_lv<2>) (ap_const_lv64_0);
    } else {
        params_coef_address0 = "XX";
    }
}

void Dig_compensator::thread_params_coef_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read()))) {
        params_coef_ce0 = ap_const_logic_1;
    } else {
        params_coef_ce0 = ap_const_logic_0;
    }
}

void Dig_compensator::thread_sh_assign_1_cast_cast_fu_504_p1() {
    sh_assign_1_cast_cast_fu_504_p1 = esl_sext<24,9>(sh_assign_1_fu_492_p3.read());
}

void Dig_compensator::thread_sh_assign_1_cast_fu_500_p1() {
    sh_assign_1_cast_fu_500_p1 = esl_sext<32,9>(sh_assign_1_fu_492_p3.read());
}

void Dig_compensator::thread_sh_assign_1_fu_492_p3() {
    sh_assign_1_fu_492_p3 = (!isNeg_fu_474_p3.read()[0].is_01())? sc_lv<9>(): ((isNeg_fu_474_p3.read()[0].to_bool())? tmp_4_i_i_cast_fu_488_p1.read(): sh_assign_fu_468_p2.read());
}

void Dig_compensator::thread_sh_assign_fu_468_p2() {
    sh_assign_fu_468_p2 = (!ap_const_lv9_181.is_01() || !tmp_i_i_i_cast1_fu_464_p1.read().is_01())? sc_lv<9>(): (sc_bigint<9>(ap_const_lv9_181) + sc_biguint<9>(tmp_i_i_i_cast1_fu_464_p1.read()));
}

void Dig_compensator::thread_tmp_10_fu_327_p2() {
    tmp_10_fu_327_p2 = (notrhs_fu_321_p2.read() | notlhs_fu_315_p2.read());
}

void Dig_compensator::thread_tmp_10_to_int_fu_364_p1() {
    tmp_10_to_int_fu_364_p1 = tmp_s_reg_721.read();
}

void Dig_compensator::thread_tmp_12_fu_555_p2() {
    tmp_12_fu_555_p2 = (!i_reg_208.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_208.read() == ap_const_lv2_0);
}

void Dig_compensator::thread_tmp_13_fu_333_p2() {
    tmp_13_fu_333_p2 = (tmp_10_fu_327_p2.read() & grp_fu_236_p2.read());
}

void Dig_compensator::thread_tmp_14_fu_350_p4() {
    tmp_14_fu_350_p4 = tmp_9_to_int_fu_347_p1.read().range(30, 23);
}

void Dig_compensator::thread_tmp_15_fu_311_p1() {
    tmp_15_fu_311_p1 = tmp_7_to_int_fu_297_p1.read().range(23-1, 0);
}

void Dig_compensator::thread_tmp_16_fu_367_p4() {
    tmp_16_fu_367_p4 = tmp_10_to_int_fu_364_p1.read().range(30, 23);
}

void Dig_compensator::thread_tmp_17_fu_360_p1() {
    tmp_17_fu_360_p1 = tmp_9_to_int_fu_347_p1.read().range(23-1, 0);
}

void Dig_compensator::thread_tmp_18_fu_393_p2() {
    tmp_18_fu_393_p2 = (notrhs3_fu_387_p2.read() | notlhs2_fu_381_p2.read());
}

void Dig_compensator::thread_tmp_19_fu_411_p2() {
    tmp_19_fu_411_p2 = (notrhs5_fu_405_p2.read() | notlhs4_fu_399_p2.read());
}

void Dig_compensator::thread_tmp_1_cast_fu_267_p1() {
    tmp_1_cast_fu_267_p1 = esl_zext<32,12>(tmp_1_fu_262_p2.read());
}

void Dig_compensator::thread_tmp_1_fu_262_p2() {
    tmp_1_fu_262_p2 = (tmp_8_reg_651.read() & v_meas.read());
}

void Dig_compensator::thread_tmp_20_fu_417_p2() {
    tmp_20_fu_417_p2 = (tmp_18_fu_393_p2.read() & tmp_19_fu_411_p2.read());
}

void Dig_compensator::thread_tmp_22_fu_423_p2() {
    tmp_22_fu_423_p2 = (tmp_20_fu_417_p2.read() & grp_fu_236_p2.read());
}

void Dig_compensator::thread_tmp_23_fu_377_p1() {
    tmp_23_fu_377_p1 = tmp_10_to_int_fu_364_p1.read().range(23-1, 0);
}

void Dig_compensator::thread_tmp_24_fu_532_p1() {
    tmp_24_fu_532_p1 = esl_zext<10,1>(tmp_29_fu_524_p3.read());
}

void Dig_compensator::thread_tmp_25_fu_536_p4() {
    tmp_25_fu_536_p4 = tmp_9_i_i_fu_518_p2.read().range(32, 23);
}

void Dig_compensator::thread_tmp_26_fu_546_p3() {
    tmp_26_fu_546_p3 = (!isNeg_fu_474_p3.read()[0].is_01())? sc_lv<10>(): ((isNeg_fu_474_p3.read()[0].to_bool())? tmp_24_fu_532_p1.read(): tmp_25_fu_536_p4.read());
}

void Dig_compensator::thread_tmp_29_fu_524_p3() {
    tmp_29_fu_524_p3 = tmp_7_i_i_fu_512_p2.read().range(23, 23);
}

void Dig_compensator::thread_tmp_2_i_i_fu_460_p1() {
    tmp_2_i_i_fu_460_p1 = esl_zext<62,24>(p_Result_s_fu_452_p3.read());
}

void Dig_compensator::thread_tmp_4_i_i_cast_fu_488_p1() {
    tmp_4_i_i_cast_fu_488_p1 = esl_sext<9,8>(tmp_4_i_i_fu_482_p2.read());
}

void Dig_compensator::thread_tmp_4_i_i_fu_482_p2() {
    tmp_4_i_i_fu_482_p2 = (!ap_const_lv8_7F.is_01() || !loc_V_fu_438_p4.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_7F) - sc_biguint<8>(loc_V_fu_438_p4.read()));
}

void Dig_compensator::thread_tmp_6_i_i_fu_508_p1() {
    tmp_6_i_i_fu_508_p1 = esl_zext<62,32>(sh_assign_1_cast_fu_500_p1.read());
}

void Dig_compensator::thread_tmp_7_i_i_fu_512_p2() {
    tmp_7_i_i_fu_512_p2 = (!sh_assign_1_cast_cast_fu_504_p1.read().is_01())? sc_lv<24>(): p_Result_s_fu_452_p3.read() >> (unsigned short)sh_assign_1_cast_cast_fu_504_p1.read().to_uint();
}

void Dig_compensator::thread_tmp_7_to_int_fu_297_p1() {
    tmp_7_to_int_fu_297_p1 = reg_252.read();
}

void Dig_compensator::thread_tmp_8_fu_258_p1() {
    tmp_8_fu_258_p1 = params_adcMask.read().range(12-1, 0);
}

void Dig_compensator::thread_tmp_9_fu_339_p3() {
    tmp_9_fu_339_p3 = (!tmp_13_fu_333_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_13_fu_333_p2.read()[0].to_bool())? reg_252.read(): ap_const_lv32_0);
}

void Dig_compensator::thread_tmp_9_i_i_fu_518_p2() {
    tmp_9_i_i_fu_518_p2 = (!tmp_6_i_i_fu_508_p1.read().is_01())? sc_lv<62>(): tmp_2_i_i_fu_460_p1.read() << (unsigned short)tmp_6_i_i_fu_508_p1.read().to_uint();
}

void Dig_compensator::thread_tmp_9_to_int_fu_347_p1() {
    tmp_9_to_int_fu_347_p1 = tmp_9_reg_714.read();
}

void Dig_compensator::thread_tmp_fu_301_p4() {
    tmp_fu_301_p4 = tmp_7_to_int_fu_297_p1.read().range(30, 23);
}

void Dig_compensator::thread_tmp_i_i_i_cast1_fu_464_p1() {
    tmp_i_i_i_cast1_fu_464_p1 = esl_zext<9,8>(loc_V_fu_438_p4.read());
}

void Dig_compensator::thread_u() {
    u = u_1_data_reg.read();
}

void Dig_compensator::thread_uDbg_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st36_fsm_35.read()) && 
         !esl_seteq<1,1,1>(tmp_12_fu_555_p2.read(), ap_const_lv1_0) && 
         !esl_seteq<1,1,1>(u_1_ack_in.read(), ap_const_logic_0))) {
        uDbg_ap_vld = ap_const_logic_1;
    } else {
        uDbg_ap_vld = ap_const_logic_0;
    }
}

void Dig_compensator::thread_u_1_ack_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, u_1_vld_reg.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, u_1_vld_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)))) {
        u_1_ack_in = ap_const_logic_1;
    } else {
        u_1_ack_in = ap_const_logic_0;
    }
}

void Dig_compensator::thread_u_1_vld_in() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st34_fsm_33.read())) {
        u_1_vld_in = ap_const_logic_1;
    } else {
        u_1_vld_in = ap_const_logic_0;
    }
}

void Dig_compensator::thread_x_assign_fu_429_p3() {
    x_assign_fu_429_p3 = (!tmp_22_reg_728.read()[0].is_01())? sc_lv<32>(): ((tmp_22_reg_728.read()[0].to_bool())? tmp_9_reg_714.read(): tmp_s_reg_721.read());
}

void Dig_compensator::thread_yDbg_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st36_fsm_35.read()) && 
         !esl_seteq<1,1,1>(tmp_12_fu_555_p2.read(), ap_const_lv1_0) && 
         !esl_seteq<1,1,1>(u_1_ack_in.read(), ap_const_logic_0))) {
        yDbg_ap_vld = ap_const_logic_1;
    } else {
        yDbg_ap_vld = ap_const_logic_0;
    }
}

void Dig_compensator::thread_yVmeasDbg_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st36_fsm_35.read()) && 
         !esl_seteq<1,1,1>(tmp_12_fu_555_p2.read(), ap_const_lv1_0) && 
         !esl_seteq<1,1,1>(u_1_ack_in.read(), ap_const_logic_0))) {
        yVmeasDbg_ap_vld = ap_const_logic_1;
    } else {
        yVmeasDbg_ap_vld = ap_const_logic_0;
    }
}

void Dig_compensator::thread_y_load_1_phi_fu_609_p3() {
    y_load_1_phi_fu_609_p3 = (!cond_fu_570_p2.read()[0].is_01())? sc_lv<32>(): ((cond_fu_570_p2.read()[0].to_bool())? x_assign_reg_733.read(): y_load_s_fu_114.read());
}

void Dig_compensator::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_st11_fsm_10;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_st12_fsm_11;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_st13_fsm_12;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_st14_fsm_13;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_st15_fsm_14;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_st16_fsm_15;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_st17_fsm_16;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_st18_fsm_17;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_st19_fsm_18;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_st20_fsm_19;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_st21_fsm_20;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_st22_fsm_21;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_st23_fsm_22;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_st24_fsm_23;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_st25_fsm_24;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_st26_fsm_25;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_st27_fsm_26;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_st28_fsm_27;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_st29_fsm_28;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_st30_fsm_29;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_st31_fsm_30;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_st32_fsm_31;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_st33_fsm_32;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_st34_fsm_33;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_st35_fsm_34;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_st36_fsm_35;
            break;
        case 34359738368 : 
            if ((!esl_seteq<1,1,1>(tmp_12_fu_555_p2.read(), ap_const_lv1_0) && !esl_seteq<1,1,1>(u_1_ack_in.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else if ((esl_seteq<1,1,1>(tmp_12_fu_555_p2.read(), ap_const_lv1_0) && !esl_seteq<1,1,1>(u_1_ack_in.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_st36_fsm_35;
            } else {
                ap_NS_fsm = ap_ST_st36_fsm_35;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<36>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void Dig_compensator::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v_meas\" :  \"" << v_meas.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"u\" :  \"" << u.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

